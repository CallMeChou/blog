<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>qnyf</title>
      <link href="/blog/2021/12/04/qnyf/"/>
      <url>/blog/2021/12/04/qnyf/</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html><script>var _hmt = _hmt || [];(function() {  var hm = document.createElement("script");  hm.src = "https://hm.baidu.com/hm.js?885c532b1237db72dda330c4c9c4d9f3";  var s = document.getElementsByTagName("script")[0];   s.parentNode.insertBefore(hm, s);})();</script><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"><title>自动签到系统 - 免费且快速稳定的24h自动签到平台</title><style type="text/css">yunxing{clear:both; text-align:center; border:1px solid #0099FF;background:#FFFFFF; line-height:20px; padding:6px 5px 3px; color:#666;}</style><meta name="description"content="青柠疫服自动签到平台,只需登录后就可以解放双手24小时离线挂机了。" /><meta name="keywords" content="自动签到平台" /><link rel="stylesheet" type="text/css" href="//www.layuicdn.com/layui/css/layui.css" /><link rel="stylesheet" href="assets/css/login.css" media="all" /><link rel="icon" type="image/png" href="//file.cssun.cn/favicon.ico"><script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script><meta itemprop="image" content="//q.qlogo.cn/headimg_dl?bs=qq&dst_uin=你的QQ&fid=blog&spec=100" /></head><script>function password(){     var passwd=prompt('请输入授权码（每周更新)');console.log(passwd)    if(passwd != 'qnyf')    {        //        alert('关注公众号【福利庄园 WelfareManor】回复【青柠打卡】获取授权码！');        window.location.href="gzh.html";    }}password()</script><body>    <!--layui-this--><ul class="layui-nav layui-bg-green"><li class="layui-nav-item  layui-this"><a href="http://iridescent.work/qnyf.html">青柠云自动签到</a></li>  <li class="layui-nav-item "><a href="https://qm.qq.com/cgi-bin/qm/qr?k=3eRY7V2XtRZteEb6KhoZzIP3hygR57f-&amp;authKey=%2BA9wCIDUAjAMstgKH8WHVvNMxLUg7HPdPYiX3TIfaEStVdHwqSFTZVqjX%2F%2BEtACZ&amp;noverify=0&amp;group_code=562184707">加入Q群</a></li><li class="layui-nav-item "><a href="http://iridescent.work/admin/searchStudent.html">查询个人打卡信息</a></li></ul><div class="layer-text" id="yiwang" style="padding:20px 0 10px;"><fieldset class="layui-elem-field layui-field-title"><legend>青柠打卡平台<strong>3.0</strong>，已运行<span id="span_dt_dt" style='border:0px solid black;background-color:#FFFFFF' >      </legend> <script language=javascript><!--//document.write("");function show_date_time(){window.setTimeout("show_date_time()", 1000);BirthDay=new Date("03-31-2021"); //烈火网提示：这里的07-31-2009是指建站日期today=new Date();timeold=(today.getTime()-BirthDay.getTime());sectimeold=timeold/1000secondsold=Math.floor(sectimeold);msPerDay=24*60*60*1000e_daysold=timeold/msPerDaydaysold=Math.floor(e_daysold);e_hrsold=(daysold-e_daysold)*-24;hrsold=Math.floor(e_hrsold);e_minsold=(hrsold-e_hrsold)*-60;minsold=Math.floor((hrsold-e_hrsold)*-60);seconds=Math.floor((minsold-e_minsold)*-60);span_dt_dt.innerHTML=daysold+"天"+hrsold+"小时"+minsold+"分"+seconds+"秒" ;}show_date_time();//--></script> </span></fieldset></div><!--LoginForm--><div class="zyl_lofo_main"><fieldset class="layui-elem-field layui-field-title zyl_mar_02"><legend><span class="layui-badge-dot"></span><span class="layui-badge-dot layui-bg-orange"></span><span class="layui-badge-dot layui-bg-green"></span><span class="layui-badge-dot layui-bg-cyan"></span><span class="layui-badge-dot layui-bg-blue"></span><span class="layui-badge-dot layui-bg-black"></span><span class="layui-badge-dot layui-bg-gray"></span></legend></fieldset><div class="layui-row layui-col-space15"><form id='form' class="layui-form zyl_pad_01" action="user.php" method="post"><div class="layui-col-sm12 layui-col-md12"><div class="layui-form-item"><input type="text" name="stu_name" autocomplete="off"placeholder="请输入姓名" class="layui-input"><i class="layui-icon layui-icon-username zyl_lofo_icon icon"></i></div></div><div class="layui-col-sm12 layui-col-md12"><div class="layui-form-item"><input type="text" name="stu_num" autocomplete="off"placeholder="请输入学号" class="layui-input"><i class="layui-icon layui-icon-username zyl_lofo_icon icon"></i></div></div><div class="layui-col-sm12 layui-col-md12"><div class="layui-form-item"><input type="password" name="pwd" autocomplete="off"placeholder="请输入密码" class="layui-input"><i class="layui-icon layui-icon-password zyl_lofo_icon icon"></i></div></div><div class="layui-col-sm12 layui-col-md12"><div class="layui-form-item"><input type="text" name="email" placeholder="请输入email" class="layui-input"><i class="layui-icon layui-icon-email zyl_lofo_icon icon"></i></div></div><div class="layui-col-sm12 layui-col-md12 layui-anim-scale"><button  class="layui-btn layui-btn-fluid" lay-submit="" lay-filter="login" >立即提交</button></div></form></div>            </div>        </form>    </div>    </div>   </div>    <!--LoginForm End-->    <div class="footer">                <a href="https://x.pgman.cn/home/colors/art/cc/rgb(0,160,232)">别点这里</a> &nbsp;        <a href="http://iridescent.work/1.html" ><strong>支持开发者</strong></a></a></div>    <script>        //function changeCode() {        // document.getElementById("code").src = "assets/code.php?id=" + Math.random();        // }    </script>    <!--Jquery Js-->    <script type="text/javascript" src="assets/js/jquery.js">    </script>    <!--Layui Js-->    <script src="//www.layuicdn.com/layui/layui.js">    </script>    <script>        if (Cookies.get('state') == null) {            //Cookies.set('state', '1', { expires: 1, path: '' });            layer.open({                type: 1,                title: false //不显示标题栏                    ,                closeBtn: false,                area: '300px;',                shade: 0.8,                id: 'LAY_layuipro' //设定一个id，防止重复弹出                    ,                resize: false,                btn: ['加入Q群', '不再显示'],                btnAlign: 'c',                moveType: 1 //拖拽模式，0或者1                    ,                content: '<div style="padding: 50px; line-height: 22px; background-color: #393D49; color: #fff; font-weight: 300;"> 此系统为青柠疫服自动签到，提交账号即可，24小时离线执行（乱填直接拉黑账号 永不添加)</div>',                success: function(layero) {                    var btn = layero.find('.layui-layer-btn');                    btn.find('.layui-layer-btn0').attr({                        href: 'https://qm.qq.com/cgi-bin/qm/qr?k=3eRY7V2XtRZteEb6KhoZzIP3hygR57f-&amp;authKey=%2BA9wCIDUAjAMstgKH8WHVvNMxLUg7HPdPYiX3TIfaEStVdHwqSFTZVqjX%2F%2BEtACZ&amp;noverify=0&amp;group_code=562184707',                        target: '_blank'                    });                }            });        }        layui.use(['form'], function() {            var form = layui.form;                       //监听提交            form.on('submit(login)', function(data) {                //document.getElementById("code").src = "assets/code.php?id=" + Math.random();                //console.log(data.field);                $.ajax({                    type: "POST",                    url: "user.php",                    data: data.field,                    success: function(data) {                        layer.alert(JSON.stringify(data));                        //console.log(data);                    },                    error: function(data) {                        layer.alert('服务器连接失败');                    }                })                return false;            });        });    </script>    <!-- Baidu  --></body></html>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jquery</title>
      <link href="/blog/2021/12/04/assets/js/jquery/"/>
      <url>/blog/2021/12/04/assets/js/jquery/</url>
      
        <content type="html"><![CDATA[/*! jQuery v3.4.1 | (c) JS Foundation and other contributors | jquery.org/license */!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(C,e){"use strict";var t=[],E=C.document,r=Object.getPrototypeOf,s=t.slice,g=t.concat,u=t.push,i=t.indexOf,n={},o=n.toString,v=n.hasOwnProperty,a=v.toString,l=a.call(Object),y={},m=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},x=function(e){return null!=e&&e===e.window},c={type:!0,src:!0,nonce:!0,noModule:!0};function b(e,t,n){var r,i,o=(n=n||E).createElement("script");if(o.text=e,t)for(r in c)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function w(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[o.call(e)]||"object":typeof e}var f="3.4.1",k=function(e,t){return new k.fn.init(e,t)},p=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function d(e){var t=!!e&&"length"in e&&e.length,n=w(e);return!m(e)&&!x(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}k.fn=k.prototype={jquery:f,constructor:k,length:0,toArray:function(){return s.call(this)},get:function(e){return null==e?s.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=k.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return k.each(this,e)},map:function(n){return this.pushStack(k.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(s.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:u,sort:t.sort,splice:t.splice},k.extend=k.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for("boolean"==typeof a&&(l=a,a=arguments[s]||{},s++),"object"==typeof a||m(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],"__proto__"!==t&&a!==r&&(l&&r&&(k.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||k.isPlainObject(n)?n:{},i=!1,a[t]=k.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},k.extend({expando:"jQuery"+(f+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==o.call(e))&&(!(t=r(e))||"function"==typeof(n=v.call(t,"constructor")&&t.constructor)&&a.call(n)===l)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t){b(e,{nonce:t&&t.nonce})},each:function(e,t){var n,r=0;if(d(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},trim:function(e){return null==e?"":(e+"").replace(p,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(d(Object(e))?k.merge(n,"string"==typeof e?[e]:e):u.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:i.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(d(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g.apply([],a)},guid:1,support:y}),"function"==typeof Symbol&&(k.fn[Symbol.iterator]=t[Symbol.iterator]),k.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var h=function(n){var e,d,b,o,i,h,f,g,w,u,l,T,C,a,E,v,s,c,y,k="sizzle"+1*new Date,m=n.document,S=0,r=0,p=ue(),x=ue(),N=ue(),A=ue(),D=function(e,t){return e===t&&(l=!0),0},j={}.hasOwnProperty,t=[],q=t.pop,L=t.push,H=t.push,O=t.slice,P=function(e,t){for(var n=0,r=e.length;n<r;n++)if(e[n]===t)return n;return-1},R="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",I="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",W="\\["+M+"*("+I+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+I+"))|)"+M+"*\\]",$=":("+I+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+W+")*)|.*)\\)|)",F=new RegExp(M+"+","g"),B=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),_=new RegExp("^"+M+"*,"+M+"*"),z=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),U=new RegExp(M+"|>"),X=new RegExp($),V=new RegExp("^"+I+"$"),G={ID:new RegExp("^#("+I+")"),CLASS:new RegExp("^\\.("+I+")"),TAG:new RegExp("^("+I+"|[*])"),ATTR:new RegExp("^"+W),PSEUDO:new RegExp("^"+$),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+R+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Y=/HTML$/i,Q=/^(?:input|select|textarea|button)$/i,J=/^h\d$/i,K=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\([\\da-f]{1,6}"+M+"?|("+M+")|.)","ig"),ne=function(e,t,n){var r="0x"+t-65536;return r!=r||n?t:r<0?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320)},re=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,ie=function(e,t){return t?"\0"===e?"\ufffd":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},oe=function(){T()},ae=be(function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()},{dir:"parentNode",next:"legend"});try{H.apply(t=O.call(m.childNodes),m.childNodes),t[m.childNodes.length].nodeType}catch(e){H={apply:t.length?function(e,t){L.apply(e,O.call(t))}:function(e,t){var n=e.length,r=0;while(e[n++]=t[r++]);e.length=n-1}}}function se(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&((e?e.ownerDocument||e:m)!==C&&T(e),e=e||C,E)){if(11!==p&&(u=Z.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return n.push(a),n}else if(f&&(a=f.getElementById(i))&&y(e,a)&&a.id===i)return n.push(a),n}else{if(u[2])return H.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&d.getElementsByClassName&&e.getElementsByClassName)return H.apply(n,e.getElementsByClassName(i)),n}if(d.qsa&&!A[t+" "]&&(!v||!v.test(t))&&(1!==p||"object"!==e.nodeName.toLowerCase())){if(c=t,f=e,1===p&&U.test(t)){(s=e.getAttribute("id"))?s=s.replace(re,ie):e.setAttribute("id",s=k),o=(l=h(t)).length;while(o--)l[o]="#"+s+" "+xe(l[o]);c=l.join(","),f=ee.test(t)&&ye(e.parentNode)||e}try{return H.apply(n,f.querySelectorAll(c)),n}catch(e){A(t,!0)}finally{s===k&&e.removeAttribute("id")}}}return g(t.replace(B,"$1"),e,n,r)}function ue(){var r=[];return function e(t,n){return r.push(t+" ")>b.cacheLength&&delete e[r.shift()],e[t+" "]=n}}function le(e){return e[k]=!0,e}function ce(e){var t=C.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function fe(e,t){var n=e.split("|"),r=n.length;while(r--)b.attrHandle[n[r]]=t}function pe(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(r)return r;if(n)while(n=n.nextSibling)if(n===t)return-1;return e?1:-1}function de(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}function he(n){return function(e){var t=e.nodeName.toLowerCase();return("input"===t||"button"===t)&&e.type===n}}function ge(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&ae(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function ve(a){return le(function(o){return o=+o,le(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function ye(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}for(e in d=se.support={},i=se.isXML=function(e){var t=e.namespaceURI,n=(e.ownerDocument||e).documentElement;return!Y.test(t||n&&n.nodeName||"HTML")},T=se.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:m;return r!==C&&9===r.nodeType&&r.documentElement&&(a=(C=r).documentElement,E=!i(C),m!==C&&(n=C.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",oe,!1):n.attachEvent&&n.attachEvent("onunload",oe)),d.attributes=ce(function(e){return e.className="i",!e.getAttribute("className")}),d.getElementsByTagName=ce(function(e){return e.appendChild(C.createComment("")),!e.getElementsByTagName("*").length}),d.getElementsByClassName=K.test(C.getElementsByClassName),d.getById=ce(function(e){return a.appendChild(e).id=k,!C.getElementsByName||!C.getElementsByName(k).length}),d.getById?(b.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute("id")===t}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&E){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(te,ne);return function(e){var t="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===n}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&E){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode("id"))&&n.value===e)return[o]}return[]}}),b.find.TAG=d.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):d.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,o=t.getElementsByTagName(e);if("*"===e){while(n=o[i++])1===n.nodeType&&r.push(n);return r}return o},b.find.CLASS=d.getElementsByClassName&&function(e,t){if("undefined"!=typeof t.getElementsByClassName&&E)return t.getElementsByClassName(e)},s=[],v=[],(d.qsa=K.test(C.querySelectorAll))&&(ce(function(e){a.appendChild(e).innerHTML="<a id='"+k+"'></a><select id='"+k+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&v.push("[*^$]="+M+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||v.push("\\["+M+"*(?:value|"+R+")"),e.querySelectorAll("[id~="+k+"-]").length||v.push("~="),e.querySelectorAll(":checked").length||v.push(":checked"),e.querySelectorAll("a#"+k+"+*").length||v.push(".#.+[+~]")}),ce(function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=C.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&v.push("name"+M+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&v.push(":enabled",":disabled"),a.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&v.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),v.push(",.*:")})),(d.matchesSelector=K.test(c=a.matches||a.webkitMatchesSelector||a.mozMatchesSelector||a.oMatchesSelector||a.msMatchesSelector))&&ce(function(e){d.disconnectedMatch=c.call(e,"*"),c.call(e,"[s!='']:x"),s.push("!=",$)}),v=v.length&&new RegExp(v.join("|")),s=s.length&&new RegExp(s.join("|")),t=K.test(a.compareDocumentPosition),y=t||K.test(a.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)while(t=t.parentNode)if(t===e)return!0;return!1},D=t?function(e,t){if(e===t)return l=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!d.sortDetached&&t.compareDocumentPosition(e)===n?e===C||e.ownerDocument===m&&y(m,e)?-1:t===C||t.ownerDocument===m&&y(m,t)?1:u?P(u,e)-P(u,t):0:4&n?-1:1)}:function(e,t){if(e===t)return l=!0,0;var n,r=0,i=e.parentNode,o=t.parentNode,a=[e],s=[t];if(!i||!o)return e===C?-1:t===C?1:i?-1:o?1:u?P(u,e)-P(u,t):0;if(i===o)return pe(e,t);n=e;while(n=n.parentNode)a.unshift(n);n=t;while(n=n.parentNode)s.unshift(n);while(a[r]===s[r])r++;return r?pe(a[r],s[r]):a[r]===m?-1:s[r]===m?1:0}),C},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if((e.ownerDocument||e)!==C&&T(e),d.matchesSelector&&E&&!A[t+" "]&&(!s||!s.test(t))&&(!v||!v.test(t)))try{var n=c.call(e,t);if(n||d.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){A(t,!0)}return 0<se(t,C,null,[e]).length},se.contains=function(e,t){return(e.ownerDocument||e)!==C&&T(e),y(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!==C&&T(e);var n=b.attrHandle[t.toLowerCase()],r=n&&j.call(b.attrHandle,t.toLowerCase())?n(e,t,!E):void 0;return void 0!==r?r:d.attributes||!E?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},se.escape=function(e){return(e+"").replace(re,ie)},se.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},se.uniqueSort=function(e){var t,n=[],r=0,i=0;if(l=!d.detectDuplicates,u=!d.sortStable&&e.slice(0),e.sort(D),l){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)e.splice(n[r],1)}return u=null,e},o=se.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=o(e)}else if(3===i||4===i)return e.nodeValue}else while(t=e[r++])n+=o(t);return n},(b=se.selectors={cacheLength:50,createPseudo:le,match:G,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ne),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return G.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&X.test(n)&&(t=h(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=p[e+" "];return t||(t=new RegExp("(^|"+M+")"+e+"("+M+"|$)"))&&p(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(n,r,i){return function(e){var t=se.attr(e,n);return null==t?"!="===r:!r||(t+="","="===r?t===i:"!="===r?t!==i:"^="===r?i&&0===t.indexOf(i):"*="===r?i&&-1<t.indexOf(i):"$="===r?i&&t.slice(-i.length)===i:"~="===r?-1<(" "+t.replace(F," ")+" ").indexOf(i):"|="===r&&(t===i||t.slice(0,i.length+1)===i+"-"))}},CHILD:function(h,e,t,g,v){var y="nth"!==h.slice(0,3),m="last"!==h.slice(-4),x="of-type"===e;return 1===g&&0===v?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u,l=y!==m?"nextSibling":"previousSibling",c=e.parentNode,f=x&&e.nodeName.toLowerCase(),p=!n&&!x,d=!1;if(c){if(y){while(l){a=e;while(a=a[l])if(x?a.nodeName.toLowerCase()===f:1===a.nodeType)return!1;u=l="only"===h&&!u&&"nextSibling"}return!0}if(u=[m?c.firstChild:c.lastChild],m&&p){d=(s=(r=(i=(o=(a=c)[k]||(a[k]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===S&&r[1])&&r[2],a=s&&c.childNodes[s];while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if(1===a.nodeType&&++d&&a===e){i[h]=[S,s,d];break}}else if(p&&(d=s=(r=(i=(o=(a=e)[k]||(a[k]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]||[])[0]===S&&r[1]),!1===d)while(a=++s&&a&&a[l]||(d=s=0)||u.pop())if((x?a.nodeName.toLowerCase()===f:1===a.nodeType)&&++d&&(p&&((i=(o=a[k]||(a[k]={}))[a.uniqueID]||(o[a.uniqueID]={}))[h]=[S,d]),a===e))break;return(d-=v)===g||d%g==0&&0<=d/g}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||se.error("unsupported pseudo: "+e);return a[k]?a(o):1<a.length?(t=[e,e,"",o],b.setFilters.hasOwnProperty(e.toLowerCase())?le(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=P(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:le(function(e){var r=[],i=[],s=f(e.replace(B,"$1"));return s[k]?le(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:le(function(t){return function(e){return 0<se(t,e).length}}),contains:le(function(t){return t=t.replace(te,ne),function(e){return-1<(e.textContent||o(e)).indexOf(t)}}),lang:le(function(n){return V.test(n||"")||se.error("unsupported lang: "+n),n=n.replace(te,ne).toLowerCase(),function(e){var t;do{if(t=E?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=n.location&&n.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===a},focus:function(e){return e===C.activeElement&&(!C.hasFocus||C.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:ge(!1),disabled:ge(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return J.test(e.nodeName)},input:function(e){return Q.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:ve(function(){return[0]}),last:ve(function(e,t){return[t-1]}),eq:ve(function(e,t,n){return[n<0?n+t:n]}),even:ve(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:ve(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:ve(function(e,t,n){for(var r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:ve(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=de(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=he(e);function me(){}function xe(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function be(s,e,t){var u=e.dir,l=e.next,c=l||u,f=t&&"parentNode"===c,p=r++;return e.first?function(e,t,n){while(e=e[u])if(1===e.nodeType||f)return s(e,t,n);return!1}:function(e,t,n){var r,i,o,a=[S,p];if(n){while(e=e[u])if((1===e.nodeType||f)&&s(e,t,n))return!0}else while(e=e[u])if(1===e.nodeType||f)if(i=(o=e[k]||(e[k]={}))[e.uniqueID]||(o[e.uniqueID]={}),l&&l===e.nodeName.toLowerCase())e=e[u]||e;else{if((r=i[c])&&r[0]===S&&r[1]===p)return a[2]=r[2];if((i[c]=a)[2]=s(e,t,n))return!0}return!1}}function we(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Te(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function Ce(d,h,g,v,y,e){return v&&!v[k]&&(v=Ce(v)),y&&!y[k]&&(y=Ce(y,e)),le(function(e,t,n,r){var i,o,a,s=[],u=[],l=t.length,c=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)se(e,t[r],n);return n}(h||"*",n.nodeType?[n]:n,[]),f=!d||!e&&h?c:Te(c,s,d,n,r),p=g?y||(e?d:l||v)?[]:t:f;if(g&&g(f,p,n,r),v){i=Te(p,u),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(p[u[o]]=!(f[u[o]]=a))}if(e){if(y||d){if(y){i=[],o=p.length;while(o--)(a=p[o])&&i.push(f[o]=a);y(null,p=[],i,r)}o=p.length;while(o--)(a=p[o])&&-1<(i=y?P(e,a):s[o])&&(e[i]=!(t[i]=a))}}else p=Te(p===t?p.splice(l,p.length):p),y?y(null,t,p,r):H.apply(t,p)})}function Ee(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[" "],s=o?1:0,u=be(function(e){return e===i},a,!0),l=be(function(e){return-1<P(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!==w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[be(we(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[k]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return Ce(1<s&&we(c),1<s&&xe(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(B,"$1"),t,s<n&&Ee(e.slice(s,n)),n<r&&Ee(e=e.slice(n)),n<r&&xe(e))}c.push(t)}return we(c)}return me.prototype=b.filters=b.pseudos,b.setFilters=new me,h=se.tokenize=function(e,t){var n,r,i,o,a,s,u,l=x[e+" "];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=_.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=z.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace(B," ")}),a=a.slice(n.length)),b.filter)!(r=G[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?se.error(e):x(e,s).slice(0)},f=se.compile=function(e,t){var n,v,y,m,x,r,i=[],o=[],a=N[e+" "];if(!a){t||(t=h(e)),n=t.length;while(n--)(a=Ee(t[n]))[k]?i.push(a):o.push(a);(a=N(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l="0",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG("*",i),h=S+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t===C||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument===C||(T(o),n=!E);while(s=v[a++])if(s(o,t||C,n)){r.push(o);break}i&&(S=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=q.call(r));f=Te(f)}H.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&se.uniqueSort(r)}return i&&(S=h,w=p),c},m?le(r):r))).selector=e}return a},g=se.select=function(e,t,n,r){var i,o,a,s,u,l="function"==typeof e&&e,c=!r&&h(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&"ID"===(a=o[0]).type&&9===t.nodeType&&E&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(te,ne),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=G.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(te,ne),ee.test(o[0].type)&&ye(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&xe(o)))return H.apply(n,r),n;break}}}return(l||f(e,c))(r,t,!E,n,!t||ee.test(e)&&ye(t.parentNode)||t),n},d.sortStable=k.split("").sort(D).join("")===k,d.detectDuplicates=!!l,T(),d.sortDetached=ce(function(e){return 1&e.compareDocumentPosition(C.createElement("fieldset"))}),ce(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||fe("type|href|height|width",function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),d.attributes&&ce(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||fe("value",function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue}),ce(function(e){return null==e.getAttribute("disabled")})||fe(R,function(e,t,n){var r;if(!n)return!0===e[t]?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),se}(C);k.find=h,k.expr=h.selectors,k.expr[":"]=k.expr.pseudos,k.uniqueSort=k.unique=h.uniqueSort,k.text=h.getText,k.isXMLDoc=h.isXML,k.contains=h.contains,k.escapeSelector=h.escape;var T=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&k(e).is(n))break;r.push(e)}return r},S=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},N=k.expr.match.needsContext;function A(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var D=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function j(e,n,r){return m(n)?k.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?k.grep(e,function(e){return e===n!==r}):"string"!=typeof n?k.grep(e,function(e){return-1<i.call(n,e)!==r}):k.filter(n,e,r)}k.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?k.find.matchesSelector(r,e)?[r]:[]:k.find.matches(e,k.grep(t,function(e){return 1===e.nodeType}))},k.fn.extend({find:function(e){var t,n,r=this.length,i=this;if("string"!=typeof e)return this.pushStack(k(e).filter(function(){for(t=0;t<r;t++)if(k.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)k.find(e,i[t],n);return 1<r?k.uniqueSort(n):n},filter:function(e){return this.pushStack(j(this,e||[],!1))},not:function(e){return this.pushStack(j(this,e||[],!0))},is:function(e){return!!j(this,"string"==typeof e&&N.test(e)?k(e):e||[],!1).length}});var q,L=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(k.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||q,"string"==typeof e){if(!(r="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:L.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof k?t[0]:t,k.merge(this,k.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:E,!0)),D.test(r[1])&&k.isPlainObject(t))for(r in t)m(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=E.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):m(e)?void 0!==n.ready?n.ready(e):e(k):k.makeArray(e,this)}).prototype=k.fn,q=k(E);var H=/^(?:parents|prev(?:Until|All))/,O={children:!0,contents:!0,next:!0,prev:!0};function P(e,t){while((e=e[t])&&1!==e.nodeType);return e}k.fn.extend({has:function(e){var t=k(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(k.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a="string"!=typeof e&&k(e);if(!N.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&k.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?k.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?i.call(k(e),this[0]):i.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(k.uniqueSort(k.merge(this.get(),k(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),k.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return T(e,"parentNode")},parentsUntil:function(e,t,n){return T(e,"parentNode",n)},next:function(e){return P(e,"nextSibling")},prev:function(e){return P(e,"previousSibling")},nextAll:function(e){return T(e,"nextSibling")},prevAll:function(e){return T(e,"previousSibling")},nextUntil:function(e,t,n){return T(e,"nextSibling",n)},prevUntil:function(e,t,n){return T(e,"previousSibling",n)},siblings:function(e){return S((e.parentNode||{}).firstChild,e)},children:function(e){return S(e.firstChild)},contents:function(e){return"undefined"!=typeof e.contentDocument?e.contentDocument:(A(e,"template")&&(e=e.content||e),k.merge([],e.childNodes))}},function(r,i){k.fn[r]=function(e,t){var n=k.map(this,i,e);return"Until"!==r.slice(-5)&&(t=e),t&&"string"==typeof t&&(n=k.filter(t,n)),1<this.length&&(O[r]||k.uniqueSort(n),H.test(r)&&n.reverse()),this.pushStack(n)}});var R=/[^\x20\t\r\n\f]+/g;function M(e){return e}function I(e){throw e}function W(e,t,n,r){var i;try{e&&m(i=e.promise)?i.call(e).done(t).fail(n):e&&m(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}k.Callbacks=function(r){var e,n;r="string"==typeof r?(e=r,n={},k.each(e.match(R)||[],function(e,t){n[t]=!0}),n):k.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:"")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){k.each(e,function(e,t){m(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&"string"!==w(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return k.each(arguments,function(e,t){var n;while(-1<(n=k.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<k.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t="",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},k.extend({Deferred:function(e){var o=[["notify","progress",k.Callbacks("memory"),k.Callbacks("memory"),2],["resolve","done",k.Callbacks("once memory"),k.Callbacks("once memory"),0,"resolved"],["reject","fail",k.Callbacks("once memory"),k.Callbacks("once memory"),1,"rejected"]],i="pending",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},"catch":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return k.Deferred(function(r){k.each(o,function(e,t){var n=m(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&m(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+"With"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,m(t)?s?t.call(e,l(u,o,M,s),l(u,o,I,s)):(u++,t.call(e,l(u,o,M,s),l(u,o,I,s),l(u,o,M,o.notifyWith))):(a!==M&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){k.Deferred.exceptionHook&&k.Deferred.exceptionHook(e,t.stackTrace),u<=i+1&&(a!==I&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(k.Deferred.getStackHook&&(t.stackTrace=k.Deferred.getStackHook()),C.setTimeout(t))}}return k.Deferred(function(e){o[0][3].add(l(0,e,m(r)?r:M,e.notifyWith)),o[1][3].add(l(0,e,m(t)?t:M)),o[2][3].add(l(0,e,m(n)?n:I))}).promise()},promise:function(e){return null!=e?k.extend(e,a):a}},s={};return k.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+"With"](this===s?void 0:this,arguments),this},s[t[0]+"With"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=s.call(arguments),o=k.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?s.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(W(e,o.done(a(t)).resolve,o.reject,!n),"pending"===o.state()||m(i[t]&&i[t].then)))return o.then();while(t--)W(i[t],a(t),o.reject);return o.promise()}});var $=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;k.Deferred.exceptionHook=function(e,t){C.console&&C.console.warn&&e&&$.test(e.name)&&C.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},k.readyException=function(e){C.setTimeout(function(){throw e})};var F=k.Deferred();function B(){E.removeEventListener("DOMContentLoaded",B),C.removeEventListener("load",B),k.ready()}k.fn.ready=function(e){return F.then(e)["catch"](function(e){k.readyException(e)}),this},k.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--k.readyWait:k.isReady)||(k.isReady=!0)!==e&&0<--k.readyWait||F.resolveWith(E,[k])}}),k.ready.then=F.then,"complete"===E.readyState||"loading"!==E.readyState&&!E.documentElement.doScroll?C.setTimeout(k.ready):(E.addEventListener("DOMContentLoaded",B),C.addEventListener("load",B));var _=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if("object"===w(n))for(s in i=!0,n)_(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,m(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(k(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},z=/^-ms-/,U=/-([a-z])/g;function X(e,t){return t.toUpperCase()}function V(e){return e.replace(z,"ms-").replace(U,X)}var G=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function Y(){this.expando=k.expando+Y.uid++}Y.uid=1,Y.prototype={cache:function(e){var t=e[this.expando];return t||(t={},G(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if("string"==typeof t)i[V(t)]=n;else for(r in t)i[V(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][V(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(V):(t=V(t))in r?[t]:t.match(R)||[]).length;while(n--)delete r[t[n]]}(void 0===t||k.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!k.isEmptyObject(t)}};var Q=new Y,J=new Y,K=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Z=/[A-Z]/g;function ee(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r="data-"+t.replace(Z,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(r))){try{n="true"===(i=n)||"false"!==i&&("null"===i?null:i===+i+""?+i:K.test(i)?JSON.parse(i):i)}catch(e){}J.set(e,t,n)}else n=void 0;return n}k.extend({hasData:function(e){return J.hasData(e)||Q.hasData(e)},data:function(e,t,n){return J.access(e,t,n)},removeData:function(e,t){J.remove(e,t)},_data:function(e,t,n){return Q.access(e,t,n)},_removeData:function(e,t){Q.remove(e,t)}}),k.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=J.get(o),1===o.nodeType&&!Q.get(o,"hasDataAttrs"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf("data-")&&(r=V(r.slice(5)),ee(o,r,i[r]));Q.set(o,"hasDataAttrs",!0)}return i}return"object"==typeof n?this.each(function(){J.set(this,n)}):_(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=J.get(o,n))?t:void 0!==(t=ee(o,n))?t:void 0;this.each(function(){J.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){J.remove(this,e)})}}),k.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=Q.get(e,t),n&&(!r||Array.isArray(n)?r=Q.access(e,t,k.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=k.queue(e,t),r=n.length,i=n.shift(),o=k._queueHooks(e,t);"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,function(){k.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return Q.get(e,n)||Q.access(e,n,{empty:k.Callbacks("once memory").add(function(){Q.remove(e,[t+"queue",n])})})}}),k.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?k.queue(this[0],t):void 0===n?this:this.each(function(){var e=k.queue(this,t,n);k._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&k.dequeue(this,t)})},dequeue:function(e){return this.each(function(){k.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,i=k.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};"string"!=typeof e&&(t=e,e=void 0),e=e||"fx";while(a--)(n=Q.get(o[a],e+"queueHooks"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var te=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,ne=new RegExp("^(?:([+-])=|)("+te+")([a-z%]*)$","i"),re=["Top","Right","Bottom","Left"],ie=E.documentElement,oe=function(e){return k.contains(e.ownerDocument,e)},ae={composed:!0};ie.getRootNode&&(oe=function(e){return k.contains(e.ownerDocument,e)||e.getRootNode(ae)===e.ownerDocument});var se=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&oe(e)&&"none"===k.css(e,"display")},ue=function(e,t,n,r){var i,o,a={};for(o in t)a[o]=e.style[o],e.style[o]=t[o];for(o in i=n.apply(e,r||[]),t)e.style[o]=a[o];return i};function le(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return k.css(e,t,"")},u=s(),l=n&&n[3]||(k.cssNumber[t]?"":"px"),c=e.nodeType&&(k.cssNumber[t]||"px"!==l&&+u)&&ne.exec(k.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)k.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,k.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ce={};function fe(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?("none"===n&&(l[c]=Q.get(r,"display")||null,l[c]||(r.style.display="")),""===r.style.display&&se(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ce[s])||(o=a.body.appendChild(a.createElement(s)),u=k.css(o,"display"),o.parentNode.removeChild(o),"none"===u&&(u="block"),ce[s]=u)))):"none"!==n&&(l[c]="none",Q.set(r,"display",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}k.fn.extend({show:function(){return fe(this,!0)},hide:function(){return fe(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){se(this)?k(this).show():k(this).hide()})}});var pe=/^(?:checkbox|radio)$/i,de=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,he=/^$|^module$|\/(?:java|ecma)script/i,ge={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function ve(e,t){var n;return n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&A(e,t)?k.merge([e],n):n}function ye(e,t){for(var n=0,r=e.length;n<r;n++)Q.set(e[n],"globalEval",!t||Q.get(t[n],"globalEval"))}ge.optgroup=ge.option,ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td;var me,xe,be=/<|&#?\w+;/;function we(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if("object"===w(o))k.merge(p,o.nodeType?[o]:o);else if(be.test(o)){a=a||f.appendChild(t.createElement("div")),s=(de.exec(o)||["",""])[1].toLowerCase(),u=ge[s]||ge._default,a.innerHTML=u[1]+k.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;k.merge(p,a.childNodes),(a=f.firstChild).textContent=""}else p.push(t.createTextNode(o));f.textContent="",d=0;while(o=p[d++])if(r&&-1<k.inArray(o,r))i&&i.push(o);else if(l=oe(o),a=ve(f.appendChild(o),"script"),l&&ye(a),n){c=0;while(o=a[c++])he.test(o.type||"")&&n.push(o)}return f}me=E.createDocumentFragment().appendChild(E.createElement("div")),(xe=E.createElement("input")).setAttribute("type","radio"),xe.setAttribute("checked","checked"),xe.setAttribute("name","t"),me.appendChild(xe),y.checkClone=me.cloneNode(!0).cloneNode(!0).lastChild.checked,me.innerHTML="<textarea>x</textarea>",y.noCloneChecked=!!me.cloneNode(!0).lastChild.defaultValue;var Te=/^key/,Ce=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ee=/^([^.]*)(?:\.(.+)|)/;function ke(){return!0}function Se(){return!1}function Ne(e,t){return e===function(){try{return E.activeElement}catch(e){}}()==("focus"===t)}function Ae(e,t,n,r,i,o){var a,s;if("object"==typeof t){for(s in"string"!=typeof n&&(r=r||n,n=void 0),t)Ae(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&("string"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=Se;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return k().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=k.guid++)),e.each(function(){k.event.add(this,t,i,r,n)})}function De(e,i,o){o?(Q.set(e,i,!1),k.event.add(e,i,{namespace:!1,handler:function(e){var t,n,r=Q.get(this,i);if(1&e.isTrigger&&this[i]){if(r.length)(k.event.special[i]||{}).delegateType&&e.stopPropagation();else if(r=s.call(arguments),Q.set(this,i,r),t=o(this,i),this[i](),r!==(n=Q.get(this,i))||t?Q.set(this,i,!1):n={},r!==n)return e.stopImmediatePropagation(),e.preventDefault(),n.value}else r.length&&(Q.set(this,i,{value:k.event.trigger(k.extend(r[0],k.Event.prototype),r.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===Q.get(e,i)&&k.event.add(e,i,ke)}k.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Q.get(t);if(v){n.handler&&(n=(o=n).handler,i=o.selector),i&&k.find.matchesSelector(ie,i),n.guid||(n.guid=k.guid++),(u=v.events)||(u=v.events={}),(a=v.handle)||(a=v.handle=function(e){return"undefined"!=typeof k&&k.event.triggered!==e.type?k.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(R)||[""]).length;while(l--)d=g=(s=Ee.exec(e[l])||[])[1],h=(s[2]||"").split(".").sort(),d&&(f=k.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=k.event.special[d]||{},c=k.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&k.expr.match.needsContext.test(i),namespace:h.join(".")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),k.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=Q.hasData(e)&&Q.get(e);if(v&&(u=v.events)){l=(t=(t||"").match(R)||[""]).length;while(l--)if(d=g=(s=Ee.exec(t[l])||[])[1],h=(s[2]||"").split(".").sort(),d){f=k.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&("**"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||k.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)k.event.remove(e,d+t[l],n,r,!0);k.isEmptyObject(u)&&Q.remove(e,"handle events")}},dispatch:function(e){var t,n,r,i,o,a,s=k.event.fix(e),u=new Array(arguments.length),l=(Q.get(this,"events")||{})[s.type]||[],c=k.event.special[s.type]||{};for(u[0]=s,t=1;t<arguments.length;t++)u[t]=arguments[t];if(s.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,s)){a=k.event.handlers.call(this,s,l),t=0;while((i=a[t++])&&!s.isPropagationStopped()){s.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!s.isImmediatePropagationStopped())s.rnamespace&&!1!==o.namespace&&!s.rnamespace.test(o.namespace)||(s.handleObj=o,s.data=o.data,void 0!==(r=((k.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,u))&&!1===(s.result=r)&&(s.preventDefault(),s.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,s),s.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!("click"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&("click"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+" "]&&(a[i]=r.needsContext?-1<k(i,this).index(l):k.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(k.Event.prototype,t,{enumerable:!0,configurable:!0,get:m(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[k.expando]?e:new k.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&De(t,"click",ke),!1},trigger:function(e){var t=this||e;return pe.test(t.type)&&t.click&&A(t,"input")&&De(t,"click"),!0},_default:function(e){var t=e.target;return pe.test(t.type)&&t.click&&A(t,"input")&&Q.get(t,"click")||A(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},k.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},k.Event=function(e,t){if(!(this instanceof k.Event))return new k.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?ke:Se,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&k.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[k.expando]=!0},k.Event.prototype={constructor:k.Event,isDefaultPrevented:Se,isPropagationStopped:Se,isImmediatePropagationStopped:Se,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=ke,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=ke,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=ke,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},k.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Te.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&Ce.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},k.event.addProp),k.each({focus:"focusin",blur:"focusout"},function(e,t){k.event.special[e]={setup:function(){return De(this,e,Ne),!1},trigger:function(){return De(this,e),!0},delegateType:t}}),k.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,i){k.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||k.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),k.fn.extend({on:function(e,t,n,r){return Ae(this,e,t,n,r)},one:function(e,t,n,r){return Ae(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,k(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=Se),this.each(function(){k.event.remove(this,e,n,t)})}});var je=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,qe=/<script|<style|<link/i,Le=/checked\s*(?:[^=]|=\s*.checked.)/i,He=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Oe(e,t){return A(e,"table")&&A(11!==t.nodeType?t:t.firstChild,"tr")&&k(e).children("tbody")[0]||e}function Pe(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Re(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Me(e,t){var n,r,i,o,a,s,u,l;if(1===t.nodeType){if(Q.hasData(e)&&(o=Q.access(e),a=Q.set(t,o),l=o.events))for(i in delete a.handle,a.events={},l)for(n=0,r=l[i].length;n<r;n++)k.event.add(t,i,l[i][n]);J.hasData(e)&&(s=J.access(e),u=k.extend({},s),J.set(t,u))}}function Ie(n,r,i,o){r=g.apply([],r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=m(d);if(h||1<f&&"string"==typeof d&&!y.checkClone&&Le.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),Ie(t,r,i,o)});if(f&&(t=(e=we(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=k.map(ve(e,"script"),Pe)).length;c<f;c++)u=e,c!==p&&(u=k.clone(u,!0,!0),s&&k.merge(a,ve(u,"script"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,k.map(a,Re),c=0;c<s;c++)u=a[c],he.test(u.type||"")&&!Q.access(u,"globalEval")&&k.contains(l,u)&&(u.src&&"module"!==(u.type||"").toLowerCase()?k._evalUrl&&!u.noModule&&k._evalUrl(u.src,{nonce:u.nonce||u.getAttribute("nonce")}):b(u.textContent.replace(He,""),u,l))}return n}function We(e,t,n){for(var r,i=t?k.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||k.cleanData(ve(r)),r.parentNode&&(n&&oe(r)&&ye(ve(r,"script")),r.parentNode.removeChild(r));return e}k.extend({htmlPrefilter:function(e){return e.replace(je,"<$1></$2>")},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=oe(e);if(!(y.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||k.isXMLDoc(e)))for(a=ve(c),r=0,i=(o=ve(e)).length;r<i;r++)s=o[r],u=a[r],void 0,"input"===(l=u.nodeName.toLowerCase())&&pe.test(s.type)?u.checked=s.checked:"input"!==l&&"textarea"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||ve(e),a=a||ve(c),r=0,i=o.length;r<i;r++)Me(o[r],a[r]);else Me(e,c);return 0<(a=ve(c,"script")).length&&ye(a,!f&&ve(e,"script")),c},cleanData:function(e){for(var t,n,r,i=k.event.special,o=0;void 0!==(n=e[o]);o++)if(G(n)){if(t=n[Q.expando]){if(t.events)for(r in t.events)i[r]?k.event.remove(n,r):k.removeEvent(n,r,t.handle);n[Q.expando]=void 0}n[J.expando]&&(n[J.expando]=void 0)}}}),k.fn.extend({detach:function(e){return We(this,e,!0)},remove:function(e){return We(this,e)},text:function(e){return _(this,function(e){return void 0===e?k.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return Ie(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Oe(this,e).appendChild(e)})},prepend:function(){return Ie(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Oe(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return Ie(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return Ie(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(k.cleanData(ve(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return k.clone(this,e,t)})},html:function(e){return _(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!qe.test(e)&&!ge[(de.exec(e)||["",""])[1].toLowerCase()]){e=k.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(k.cleanData(ve(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return Ie(this,arguments,function(e){var t=this.parentNode;k.inArray(this,n)<0&&(k.cleanData(ve(this)),t&&t.replaceChild(e,this))},n)}}),k.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){k.fn[e]=function(e){for(var t,n=[],r=k(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),k(r[o])[a](t),u.apply(n,t.get());return this.pushStack(n)}});var $e=new RegExp("^("+te+")(?!px)[a-z%]+$","i"),Fe=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=C),t.getComputedStyle(e)},Be=new RegExp(re.join("|"),"i");function _e(e,t,n){var r,i,o,a,s=e.style;return(n=n||Fe(e))&&(""!==(a=n.getPropertyValue(t)||n[t])||oe(e)||(a=k.style(e,t)),!y.pixelBoxStyles()&&$e.test(a)&&Be.test(t)&&(r=s.width,i=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=r,s.minWidth=i,s.maxWidth=o)),void 0!==a?a+"":a}function ze(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(u){s.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",u.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ie.appendChild(s).appendChild(u);var e=C.getComputedStyle(u);n="1%"!==e.top,a=12===t(e.marginLeft),u.style.right="60%",o=36===t(e.right),r=36===t(e.width),u.style.position="absolute",i=12===t(u.offsetWidth/3),ie.removeChild(s),u=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s=E.createElement("div"),u=E.createElement("div");u.style&&(u.style.backgroundClip="content-box",u.cloneNode(!0).style.backgroundClip="",y.clearCloneStyle="content-box"===u.style.backgroundClip,k.extend(y,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),a},scrollboxSize:function(){return e(),i}}))}();var Ue=["Webkit","Moz","ms"],Xe=E.createElement("div").style,Ve={};function Ge(e){var t=k.cssProps[e]||Ve[e];return t||(e in Xe?e:Ve[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=Ue.length;while(n--)if((e=Ue[n]+t)in Xe)return e}(e)||e)}var Ye=/^(none|table(?!-c[ea]).+)/,Qe=/^--/,Je={position:"absolute",visibility:"hidden",display:"block"},Ke={letterSpacing:"0",fontWeight:"400"};function Ze(e,t,n){var r=ne.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||"px"):t}function et(e,t,n,r,i,o){var a="width"===t?1:0,s=0,u=0;if(n===(r?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(u+=k.css(e,n+re[a],!0,i)),r?("content"===n&&(u-=k.css(e,"padding"+re[a],!0,i)),"margin"!==n&&(u-=k.css(e,"border"+re[a]+"Width",!0,i))):(u+=k.css(e,"padding"+re[a],!0,i),"padding"!==n?u+=k.css(e,"border"+re[a]+"Width",!0,i):s+=k.css(e,"border"+re[a]+"Width",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u}function tt(e,t,n){var r=Fe(e),i=(!y.boxSizingReliable()||n)&&"border-box"===k.css(e,"boxSizing",!1,r),o=i,a=_e(e,t,r),s="offset"+t[0].toUpperCase()+t.slice(1);if($e.test(a)){if(!n)return a;a="auto"}return(!y.boxSizingReliable()&&i||"auto"===a||!parseFloat(a)&&"inline"===k.css(e,"display",!1,r))&&e.getClientRects().length&&(i="border-box"===k.css(e,"boxSizing",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+et(e,t,n||(i?"border":"content"),o,r,a)+"px"}function nt(e,t,n,r,i){return new nt.prototype.init(e,t,n,r,i)}k.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=_e(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=V(t),u=Qe.test(t),l=e.style;if(u||(t=Ge(s)),a=k.cssHooks[t]||k.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];"string"===(o=typeof n)&&(i=ne.exec(n))&&i[1]&&(n=le(e,t,i),o="number"),null!=n&&n==n&&("number"!==o||u||(n+=i&&i[3]||(k.cssNumber[s]?"":"px")),y.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=V(t);return Qe.test(t)||(t=Ge(s)),(a=k.cssHooks[t]||k.cssHooks[s])&&"get"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=_e(e,t,r)),"normal"===i&&t in Ke&&(i=Ke[t]),""===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),k.each(["height","width"],function(e,u){k.cssHooks[u]={get:function(e,t,n){if(t)return!Ye.test(k.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?tt(e,u,n):ue(e,Je,function(){return tt(e,u,n)})},set:function(e,t,n){var r,i=Fe(e),o=!y.scrollboxSize()&&"absolute"===i.position,a=(o||n)&&"border-box"===k.css(e,"boxSizing",!1,i),s=n?et(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e["offset"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-et(e,u,"border",!1,i)-.5)),s&&(r=ne.exec(t))&&"px"!==(r[3]||"px")&&(e.style[u]=t,t=k.css(e,u)),Ze(0,t,s)}}}),k.cssHooks.marginLeft=ze(y.reliableMarginLeft,function(e,t){if(t)return(parseFloat(_e(e,"marginLeft"))||e.getBoundingClientRect().left-ue(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),k.each({margin:"",padding:"",border:"Width"},function(i,o){k.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r="string"==typeof e?e.split(" "):[e];t<4;t++)n[i+re[t]+o]=r[t]||r[t-2]||r[0];return n}},"margin"!==i&&(k.cssHooks[i+o].set=Ze)}),k.fn.extend({css:function(e,t){return _(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Fe(e),i=t.length;a<i;a++)o[t[a]]=k.css(e,t[a],!1,r);return o}return void 0!==n?k.style(e,t,n):k.css(e,t)},e,t,1<arguments.length)}}),((k.Tween=nt).prototype={constructor:nt,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||k.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(k.cssNumber[n]?"":"px")},cur:function(){var e=nt.propHooks[this.prop];return e&&e.get?e.get(this):nt.propHooks._default.get(this)},run:function(e){var t,n=nt.propHooks[this.prop];return this.options.duration?this.pos=t=k.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):nt.propHooks._default.set(this),this}}).init.prototype=nt.prototype,(nt.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=k.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){k.fx.step[e.prop]?k.fx.step[e.prop](e):1!==e.elem.nodeType||!k.cssHooks[e.prop]&&null==e.elem.style[Ge(e.prop)]?e.elem[e.prop]=e.now:k.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=nt.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},k.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},k.fx=nt.prototype.init,k.fx.step={};var rt,it,ot,at,st=/^(?:toggle|show|hide)$/,ut=/queueHooks$/;function lt(){it&&(!1===E.hidden&&C.requestAnimationFrame?C.requestAnimationFrame(lt):C.setTimeout(lt,k.fx.interval),k.fx.tick())}function ct(){return C.setTimeout(function(){rt=void 0}),rt=Date.now()}function ft(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i["margin"+(n=re[r])]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function pt(e,t,n){for(var r,i=(dt.tweeners[t]||[]).concat(dt.tweeners["*"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function dt(o,e,t){var n,a,r=0,i=dt.prefilters.length,s=k.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=rt||ct(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:k.extend({},e),opts:k.extend(!0,{specialEasing:{},easing:k.easing._default},t),originalProperties:e,originalOptions:t,startTime:rt||ct(),duration:t.duration,tweens:[],createTween:function(e,t){var n=k.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=V(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=k.cssHooks[r])&&"expand"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=dt.prefilters[r].call(l,o,c,l.opts))return m(n.stop)&&(k._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return k.map(c,pt,l),m(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),k.fx.timer(k.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}k.Animation=k.extend(dt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return le(n.elem,e,ne.exec(t),n),n}]},tweener:function(e,t){m(e)?(t=e,e=["*"]):e=e.match(R);for(var n,r=0,i=e.length;r<i;r++)n=e[r],dt.tweeners[n]=dt.tweeners[n]||[],dt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f="width"in t||"height"in t,p=this,d={},h=e.style,g=e.nodeType&&se(e),v=Q.get(e,"fxshow");for(r in n.queue||(null==(a=k._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,k.queue(e,"fx").length||a.empty.fire()})})),t)if(i=t[r],st.test(i)){if(delete t[r],o=o||"toggle"===i,i===(g?"hide":"show")){if("show"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||k.style(e,r)}if((u=!k.isEmptyObject(t))||!k.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=Q.get(e,"display")),"none"===(c=k.css(e,"display"))&&(l?c=l:(fe([e],!0),l=e.style.display||l,c=k.css(e,"display"),fe([e]))),("inline"===c||"inline-block"===c&&null!=l)&&"none"===k.css(e,"float")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l="none"===c?"":c)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?"hidden"in v&&(g=v.hidden):v=Q.access(e,"fxshow",{display:l}),o&&(v.hidden=!g),g&&fe([e],!0),p.done(function(){for(r in g||fe([e]),Q.remove(e,"fxshow"),d)k.style(e,r,d[r])})),u=pt(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?dt.prefilters.unshift(e):dt.prefilters.push(e)}}),k.speed=function(e,t,n){var r=e&&"object"==typeof e?k.extend({},e):{complete:n||!n&&t||m(e)&&e,duration:e,easing:n&&t||t&&!m(t)&&t};return k.fx.off?r.duration=0:"number"!=typeof r.duration&&(r.duration in k.fx.speeds?r.duration=k.fx.speeds[r.duration]:r.duration=k.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){m(r.old)&&r.old.call(this),r.queue&&k.dequeue(this,r.queue)},r},k.fn.extend({fadeTo:function(e,t,n,r){return this.filter(se).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=k.isEmptyObject(t),o=k.speed(e,n,r),a=function(){var e=dt(this,k.extend({},t),o);(i||Q.get(this,"finish"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return"string"!=typeof i&&(o=e,e=i,i=void 0),e&&!1!==i&&this.queue(i||"fx",[]),this.each(function(){var e=!0,t=null!=i&&i+"queueHooks",n=k.timers,r=Q.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&ut.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||k.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var e,t=Q.get(this),n=t[a+"queue"],r=t[a+"queueHooks"],i=k.timers,o=n?n.length:0;for(t.finish=!0,k.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),k.each(["toggle","show","hide"],function(e,r){var i=k.fn[r];k.fn[r]=function(e,t,n){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(ft(r,!0),e,t,n)}}),k.each({slideDown:ft("show"),slideUp:ft("hide"),slideToggle:ft("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,r){k.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),k.timers=[],k.fx.tick=function(){var e,t=0,n=k.timers;for(rt=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||k.fx.stop(),rt=void 0},k.fx.timer=function(e){k.timers.push(e),k.fx.start()},k.fx.interval=13,k.fx.start=function(){it||(it=!0,lt())},k.fx.stop=function(){it=null},k.fx.speeds={slow:600,fast:200,_default:400},k.fn.delay=function(r,e){return r=k.fx&&k.fx.speeds[r]||r,e=e||"fx",this.queue(e,function(e,t){var n=C.setTimeout(e,r);t.stop=function(){C.clearTimeout(n)}})},ot=E.createElement("input"),at=E.createElement("select").appendChild(E.createElement("option")),ot.type="checkbox",y.checkOn=""!==ot.value,y.optSelected=at.selected,(ot=E.createElement("input")).value="t",ot.type="radio",y.radioValue="t"===ot.value;var ht,gt=k.expr.attrHandle;k.fn.extend({attr:function(e,t){return _(this,k.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){k.removeAttr(this,e)})}}),k.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof e.getAttribute?k.prop(e,t,n):(1===o&&k.isXMLDoc(e)||(i=k.attrHooks[t.toLowerCase()]||(k.expr.match.bool.test(t)?ht:void 0)),void 0!==n?null===n?void k.removeAttr(e,t):i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+""),n):i&&"get"in i&&null!==(r=i.get(e,t))?r:null==(r=k.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!y.radioValue&&"radio"===t&&A(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(R);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),ht={set:function(e,t,n){return!1===t?k.removeAttr(e,n):e.setAttribute(n,n),n}},k.each(k.expr.match.bool.source.match(/\w+/g),function(e,t){var a=gt[t]||k.find.attr;gt[t]=function(e,t,n){var r,i,o=t.toLowerCase();return n||(i=gt[o],gt[o]=r,r=null!=a(e,t,n)?o:null,gt[o]=i),r}});var vt=/^(?:input|select|textarea|button)$/i,yt=/^(?:a|area)$/i;function mt(e){return(e.match(R)||[]).join(" ")}function xt(e){return e.getAttribute&&e.getAttribute("class")||""}function bt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(R)||[]}k.fn.extend({prop:function(e,t){return _(this,k.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[k.propFix[e]||e]})}}),k.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&k.isXMLDoc(e)||(t=k.propFix[t]||t,i=k.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=k.find.attr(e,"tabindex");return t?parseInt(t,10):vt.test(e.nodeName)||yt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),y.optSelected||(k.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),k.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){k.propFix[this.toLowerCase()]=this}),k.fn.extend({addClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){k(this).addClass(t.call(this,e,xt(this)))});if((e=bt(t)).length)while(n=this[u++])if(i=xt(n),r=1===n.nodeType&&" "+mt(i)+" "){a=0;while(o=e[a++])r.indexOf(" "+o+" ")<0&&(r+=o+" ");i!==(s=mt(r))&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,r,i,o,a,s,u=0;if(m(t))return this.each(function(e){k(this).removeClass(t.call(this,e,xt(this)))});if(!arguments.length)return this.attr("class","");if((e=bt(t)).length)while(n=this[u++])if(i=xt(n),r=1===n.nodeType&&" "+mt(i)+" "){a=0;while(o=e[a++])while(-1<r.indexOf(" "+o+" "))r=r.replace(" "+o+" "," ");i!==(s=mt(r))&&n.setAttribute("class",s)}return this},toggleClass:function(i,t){var o=typeof i,a="string"===o||Array.isArray(i);return"boolean"==typeof t&&a?t?this.addClass(i):this.removeClass(i):m(i)?this.each(function(e){k(this).toggleClass(i.call(this,e,xt(this),t),t)}):this.each(function(){var e,t,n,r;if(a){t=0,n=k(this),r=bt(i);while(e=r[t++])n.hasClass(e)?n.removeClass(e):n.addClass(e)}else void 0!==i&&"boolean"!==o||((e=xt(this))&&Q.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===i?"":Q.get(this,"__className__")||""))})},hasClass:function(e){var t,n,r=0;t=" "+e+" ";while(n=this[r++])if(1===n.nodeType&&-1<(" "+mt(xt(n))+" ").indexOf(t))return!0;return!1}});var wt=/\r/g;k.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=m(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,k(this).val()):n)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=k.map(t,function(e){return null==e?"":e+""})),(r=k.valHooks[this.type]||k.valHooks[this.nodeName.toLowerCase()])&&"set"in r&&void 0!==r.set(this,t,"value")||(this.value=t))})):t?(r=k.valHooks[t.type]||k.valHooks[t.nodeName.toLowerCase()])&&"get"in r&&void 0!==(e=r.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(wt,""):null==e?"":e:void 0}}),k.extend({valHooks:{option:{get:function(e){var t=k.find.attr(e,"value");return null!=t?t:mt(k.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a="select-one"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!A(n.parentNode,"optgroup"))){if(t=k(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=k.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<k.inArray(k.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),k.each(["radio","checkbox"],function(){k.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<k.inArray(k(e).val(),t)}},y.checkOn||(k.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),y.focusin="onfocusin"in C;var Tt=/^(?:focusinfocus|focusoutblur)$/,Ct=function(e){e.stopPropagation()};k.extend(k.event,{trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f,p=[n||E],d=v.call(e,"type")?e.type:e,h=v.call(e,"namespace")?e.namespace.split("."):[];if(o=f=a=n=n||E,3!==n.nodeType&&8!==n.nodeType&&!Tt.test(d+k.event.triggered)&&(-1<d.indexOf(".")&&(d=(h=d.split(".")).shift(),h.sort()),u=d.indexOf(":")<0&&"on"+d,(e=e[k.expando]?e:new k.Event(d,"object"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:k.makeArray(t,[e]),c=k.event.special[d]||{},r||!c.trigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!x(n)){for(s=c.delegateType||d,Tt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||E)&&p.push(a.defaultView||a.parentWindow||C)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(Q.get(o,"events")||{})[e.type]&&Q.get(o,"handle"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&G(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!G(n)||u&&m(n[d])&&!x(n)&&((a=n[u])&&(n[u]=null),k.event.triggered=d,e.isPropagationStopped()&&f.addEventListener(d,Ct),n[d](),e.isPropagationStopped()&&f.removeEventListener(d,Ct),k.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(e,t,n){var r=k.extend(new k.Event,n,{type:e,isSimulated:!0});k.event.trigger(r,null,t)}}),k.fn.extend({trigger:function(e,t){return this.each(function(){k.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return k.event.trigger(e,t,n,!0)}}),y.focusin||k.each({focus:"focusin",blur:"focusout"},function(n,r){var i=function(e){k.event.simulate(r,e.target,k.event.fix(e))};k.event.special[r]={setup:function(){var e=this.ownerDocument||this,t=Q.access(e,r);t||e.addEventListener(n,i,!0),Q.access(e,r,(t||0)+1)},teardown:function(){var e=this.ownerDocument||this,t=Q.access(e,r)-1;t?Q.access(e,r,t):(e.removeEventListener(n,i,!0),Q.remove(e,r))}}});var Et=C.location,kt=Date.now(),St=/\?/;k.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new C.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||k.error("Invalid XML: "+e),t};var Nt=/\[\]$/,At=/\r?\n/g,Dt=/^(?:submit|button|image|reset|file)$/i,jt=/^(?:input|select|textarea|keygen)/i;function qt(n,e,r,i){var t;if(Array.isArray(e))k.each(e,function(e,t){r||Nt.test(n)?i(n,t):qt(n+"["+("object"==typeof t&&null!=t?e:"")+"]",t,r,i)});else if(r||"object"!==w(e))i(n,e);else for(t in e)qt(n+"["+t+"]",e[t],r,i)}k.param=function(e,t){var n,r=[],i=function(e,t){var n=m(t)?t():t;r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!k.isPlainObject(e))k.each(e,function(){i(this.name,this.value)});else for(n in e)qt(n,e[n],t,i);return r.join("&")},k.fn.extend({serialize:function(){return k.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=k.prop(this,"elements");return e?k.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!k(this).is(":disabled")&&jt.test(this.nodeName)&&!Dt.test(e)&&(this.checked||!pe.test(e))}).map(function(e,t){var n=k(this).val();return null==n?null:Array.isArray(n)?k.map(n,function(e){return{name:t.name,value:e.replace(At,"\r\n")}}):{name:t.name,value:n.replace(At,"\r\n")}}).get()}});var Lt=/%20/g,Ht=/#.*$/,Ot=/([?&])_=[^&]*/,Pt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Rt=/^(?:GET|HEAD)$/,Mt=/^\/\//,It={},Wt={},$t="*/".concat("*"),Ft=E.createElement("a");function Bt(o){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,r=0,i=e.toLowerCase().match(R)||[];if(m(t))while(n=i[r++])"+"===n[0]?(n=n.slice(1)||"*",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function _t(t,i,o,a){var s={},u=t===Wt;function l(e){var r;return s[e]=!0,k.each(t[e]||[],function(e,t){var n=t(i,o,a);return"string"!=typeof n||u||s[n]?u?!(r=n):void 0:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s["*"]&&l("*")}function zt(e,t){var n,r,i=k.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&k.extend(!0,e,r),e}Ft.href=Et.href,k.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Et.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":$t,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":k.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?zt(zt(e,k.ajaxSettings),t):zt(k.ajaxSettings,e)},ajaxPrefilter:Bt(It),ajaxTransport:Bt(Wt),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var c,f,p,n,d,r,h,g,i,o,v=k.ajaxSetup({},t),y=v.context||v,m=v.context&&(y.nodeType||y.jquery)?k(y):k.event,x=k.Deferred(),b=k.Callbacks("once memory"),w=v.statusCode||{},a={},s={},u="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n){n={};while(t=Pt.exec(p))n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2])}t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||u;return c&&c.abort(t),l(0,t),this}};if(x.promise(T),v.url=((e||v.url||Et.href)+"").replace(Mt,Et.protocol+"//"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||"*").toLowerCase().match(R)||[""],null==v.crossDomain){r=E.createElement("a");try{r.href=v.url,r.href=r.href,v.crossDomain=Ft.protocol+"//"+Ft.host!=r.protocol+"//"+r.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&"string"!=typeof v.data&&(v.data=k.param(v.data,v.traditional)),_t(It,v,t,T),h)return T;for(i in(g=k.event&&v.global)&&0==k.active++&&k.event.trigger("ajaxStart"),v.type=v.type.toUpperCase(),v.hasContent=!Rt.test(v.type),f=v.url.replace(Ht,""),v.hasContent?v.data&&v.processData&&0===(v.contentType||"").indexOf("application/x-www-form-urlencoded")&&(v.data=v.data.replace(Lt,"+")):(o=v.url.slice(f.length),v.data&&(v.processData||"string"==typeof v.data)&&(f+=(St.test(f)?"&":"?")+v.data,delete v.data),!1===v.cache&&(f=f.replace(Ot,"$1"),o=(St.test(f)?"&":"?")+"_="+kt+++o),v.url=f+o),v.ifModified&&(k.lastModified[f]&&T.setRequestHeader("If-Modified-Since",k.lastModified[f]),k.etag[f]&&T.setRequestHeader("If-None-Match",k.etag[f])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader("Content-Type",v.contentType),T.setRequestHeader("Accept",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+("*"!==v.dataTypes[0]?", "+$t+"; q=0.01":""):v.accepts["*"]),v.headers)T.setRequestHeader(i,v.headers[i]);if(v.beforeSend&&(!1===v.beforeSend.call(y,T,v)||h))return T.abort();if(u="abort",b.add(v.complete),T.done(v.success),T.fail(v.error),c=_t(Wt,v,t,T)){if(T.readyState=1,g&&m.trigger("ajaxSend",[T,v]),h)return T;v.async&&0<v.timeout&&(d=C.setTimeout(function(){T.abort("timeout")},v.timeout));try{h=!1,c.send(a,l)}catch(e){if(h)throw e;l(-1,e)}}else l(-1,"No Transport");function l(e,t,n,r){var i,o,a,s,u,l=t;h||(h=!0,d&&C.clearTimeout(d),c=void 0,p=r||"",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while("*"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+" "+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(v,T,n)),s=function(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if("*"===o)o=u;else if("*"!==u&&u!==o){if(!(a=l[u+" "+o]||l["* "+o]))for(i in l)if((s=i.split(" "))[1]===o&&(a=l[u+" "+s[0]]||l["* "+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+u+" to "+o}}}return{state:"success",data:t}}(v,s,T,i),i?(v.ifModified&&((u=T.getResponseHeader("Last-Modified"))&&(k.lastModified[f]=u),(u=T.getResponseHeader("etag"))&&(k.etag[f]=u)),204===e||"HEAD"===v.type?l="nocontent":304===e?l="notmodified":(l=s.state,o=s.data,i=!(a=s.error))):(a=l,!e&&l||(l="error",e<0&&(e=0))),T.status=e,T.statusText=(t||l)+"",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?"ajaxSuccess":"ajaxError",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger("ajaxComplete",[T,v]),--k.active||k.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,n){return k.get(e,t,n,"json")},getScript:function(e,t){return k.get(e,void 0,t,"script")}}),k.each(["get","post"],function(e,i){k[i]=function(e,t,n,r){return m(t)&&(r=r||n,n=t,t=void 0),k.ajax(k.extend({url:e,type:i,dataType:r,data:t,success:n},k.isPlainObject(e)&&e))}}),k._evalUrl=function(e,t){return k.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){k.globalEval(e,t)}})},k.fn.extend({wrapAll:function(e){var t;return this[0]&&(m(e)&&(e=e.call(this[0])),t=k(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return m(n)?this.each(function(e){k(this).wrapInner(n.call(this,e))}):this.each(function(){var e=k(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=m(t);return this.each(function(e){k(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){k(this).replaceWith(this.childNodes)}),this}}),k.expr.pseudos.hidden=function(e){return!k.expr.pseudos.visible(e)},k.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},k.ajaxSettings.xhr=function(){try{return new C.XMLHttpRequest}catch(e){}};var Ut={0:200,1223:204},Xt=k.ajaxSettings.xhr();y.cors=!!Xt&&"withCredentials"in Xt,y.ajax=Xt=!!Xt,k.ajaxTransport(function(i){var o,a;if(y.cors||Xt&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,"abort"===e?r.abort():"error"===e?"number"!=typeof r.status?t(0,"error"):t(r.status,r.statusText):t(Ut[r.status]||r.status,r.statusText,"text"!==(r.responseType||"text")||"string"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=o(),a=r.onerror=r.ontimeout=o("error"),void 0!==r.onabort?r.onabort=a:r.onreadystatechange=function(){4===r.readyState&&C.setTimeout(function(){o&&a()})},o=o("abort");try{r.send(i.hasContent&&i.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),k.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),k.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return k.globalEval(e),e}}}),k.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),k.ajaxTransport("script",function(n){var r,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){r=k("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",i=function(e){r.remove(),i=null,e&&t("error"===e.type?404:200,e.type)}),E.head.appendChild(r[0])},abort:function(){i&&i()}}});var Vt,Gt=[],Yt=/(=)\?(?=&|$)|\?\?/;k.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Gt.pop()||k.expando+"_"+kt++;return this[e]=!0,e}}),k.ajaxPrefilter("json jsonp",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Yt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Yt.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=m(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Yt,"$1"+r):!1!==e.jsonp&&(e.url+=(St.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return o||k.error(r+" was not called"),o[0]},e.dataTypes[0]="json",i=C[r],C[r]=function(){o=arguments},n.always(function(){void 0===i?k(C).removeProp(r):C[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,Gt.push(r)),o&&m(i)&&i(o[0]),o=i=void 0}),"script"}),y.createHTMLDocument=((Vt=E.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Vt.childNodes.length),k.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(y.createHTMLDocument?((r=(t=E.implementation.createHTMLDocument("")).createElement("base")).href=E.location.href,t.head.appendChild(r)):t=E),o=!n&&[],(i=D.exec(e))?[t.createElement(i[1])]:(i=we([e],t,o),o&&o.length&&k(o).remove(),k.merge([],i.childNodes)));var r,i,o},k.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(" ");return-1<s&&(r=mt(e.slice(s)),e=e.slice(0,s)),m(t)?(n=t,t=void 0):t&&"object"==typeof t&&(i="POST"),0<a.length&&k.ajax({url:e,type:i||"GET",dataType:"html",data:t}).done(function(e){o=arguments,a.html(r?k("<div>").append(k.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},k.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){k.fn[t]=function(e){return this.on(t,e)}}),k.expr.pseudos.animated=function(t){return k.grep(k.timers,function(e){return t===e.elem}).length},k.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l=k.css(e,"position"),c=k(e),f={};"static"===l&&(e.style.position="relative"),s=c.offset(),o=k.css(e,"top"),u=k.css(e,"left"),("absolute"===l||"fixed"===l)&&-1<(o+u).indexOf("auto")?(a=(r=c.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),m(t)&&(t=t.call(e,n,k.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),"using"in t?t.using.call(e,f):c.css(f)}},k.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){k.offset.setOffset(this,t,e)});var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if("fixed"===k.css(r,"position"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&"static"===k.css(e,"position"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=k(e).offset()).top+=k.css(e,"borderTopWidth",!0),i.left+=k.css(e,"borderLeftWidth",!0))}return{top:t.top-i.top-k.css(r,"marginTop",!0),left:t.left-i.left-k.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&"static"===k.css(e,"position"))e=e.offsetParent;return e||ie})}}),k.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,i){var o="pageYOffset"===i;k.fn[t]=function(e){return _(this,function(e,t,n){var r;if(x(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===n)return r?r[i]:e[t];r?r.scrollTo(o?r.pageXOffset:n,o?n:r.pageYOffset):e[t]=n},t,e,arguments.length)}}),k.each(["top","left"],function(e,n){k.cssHooks[n]=ze(y.pixelPosition,function(e,t){if(t)return t=_e(e,n),$e.test(t)?k(e).position()[n]+"px":t})}),k.each({Height:"height",Width:"width"},function(a,s){k.each({padding:"inner"+a,content:s,"":"outer"+a},function(r,o){k.fn[o]=function(e,t){var n=arguments.length&&(r||"boolean"!=typeof e),i=r||(!0===e||!0===t?"margin":"border");return _(this,function(e,t,n){var r;return x(e)?0===o.indexOf("outer")?e["inner"+a]:e.document.documentElement["client"+a]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+a],r["scroll"+a],e.body["offset"+a],r["offset"+a],r["client"+a])):void 0===n?k.css(e,t,i):k.style(e,t,n,i)},s,n?e:void 0,n)}})}),k.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){k.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}}),k.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),k.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}}),k.proxy=function(e,t){var n,r,i;if("string"==typeof t&&(n=e[t],t=e,e=n),m(e))return r=s.call(arguments,2),(i=function(){return e.apply(t||this,r.concat(s.call(arguments)))}).guid=e.guid=e.guid||k.guid++,i},k.holdReady=function(e){e?k.readyWait++:k.ready(!0)},k.isArray=Array.isArray,k.parseJSON=JSON.parse,k.nodeName=A,k.isFunction=m,k.isWindow=x,k.camelCase=V,k.type=w,k.now=Date.now,k.isNumeric=function(e){var t=k.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},"function"==typeof define&&define.amd&&define("jquery",[],function(){return k});var Qt=C.jQuery,Jt=C.$;return k.noConflict=function(e){return C.$===k&&(C.$=Jt),e&&C.jQuery===k&&(C.jQuery=Qt),k},e||(C.jQuery=C.$=k),k});]]></content>
      
      
      <categories>
          
          <category> assets </category>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>login</title>
      <link href="/blog/2021/12/04/assets/css/login/"/>
      <url>/blog/2021/12/04/assets/css/login/</url>
      
        <content type="html"><![CDATA[/* 公共属性 */body {font-size: 15px;color: #666}.icon {color: #009688;}/* 登陆表单 */.zyl_lofo_main {background-color: rgba(255, 255, 255, 0.9);width: 450px;height: 350px;position: absolute;left: 50%;top: 50%;transform: translateX(-50%) translateY(-50%);}.zyl_lofo_icon {position: absolute;left: 5px;top: 8px;font-size: 20px;}/* 验证码 */.zyl_lofo_vercode {line-height: 30px;padding-left: 25px;font-size: 24px;}.code_tips {padding-left: 25px;font-size: 9px;}/* 自适应 */@media screen and (max-width: 768px) {.zyl_lofo_main {width: 85%;height: 60%;top: 60%;}}/* 覆盖原框架样式 */.layui-elem-quote {background-color: inherit !important;}.layui-input,.layui-select,.layui-textarea {background-color: inherit;padding-left: 30px;}.footer {height: 60px;line-height: 60px;position: fixed;bottom: 0;width: 100%;text-align: center;color: black;font-family: Arial;font-size: 12px;letter-spacing: 1px;background-color: #009688}.content {height: 1800px;width: 100%;text-align: center}]]></content>
      
      
      <categories>
          
          <category> assets </category>
          
          <category> css </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>im</title>
      <link href="/blog/2021/12/04/im/"/>
      <url>/blog/2021/12/04/im/</url>
      
        <content type="html"><![CDATA[<p>img</p><img src="/blog/2021/12/04/im/1f2f0a80f29b4f80a9c1bd47203ab667.png" class="" title="1f2f0a80f29b4f80a9c1bd47203ab667.png"><p>img</p><img src="/blog/2021/12/04/im/e30206bb83facbf1aebe9243dfcb7a8e.png" class="" title="e30206bb83facbf1aebe9243dfcb7a8e.png">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>图片类网站合集</title>
      <link href="/blog/2021/11/30/%E5%9B%BE%E7%89%87%E7%B1%BB%E7%BD%91%E7%AB%99%E5%90%88%E9%9B%86/"/>
      <url>/blog/2021/11/30/%E5%9B%BE%E7%89%87%E7%B1%BB%E7%BD%91%E7%AB%99%E5%90%88%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<p><strong>全部网站请点击右上角</strong></p><p><img src="https://i.loli.net/2021/12/02/ifnVceC7QmoJZPN.png" alt="image-20211202140418652"></p><br><h1 id="随机图片"><a href="#随机图片" class="headerlink" title="随机图片"></a>随机图片</h1><h2 id="随机图片Picsum"><a href="#随机图片Picsum" class="headerlink" title="随机图片Picsum"></a>随机图片Picsum</h2><p><a href="https://picsum.photos/">Lorem Picsum</a></p><h3 id="随机一张1920-1080的图片"><a href="#随机一张1920-1080的图片" class="headerlink" title="随机一张1920*1080的图片"></a>随机一张1920*1080的图片</h3><p><a href="https://picsum.photos/1920/1080">https://picsum.photos/1920/1080</a></p><h3 id="特定的图片（237是seed）"><a href="#特定的图片（237是seed）" class="headerlink" title="特定的图片（237是seed）"></a>特定的图片（237是seed）</h3><p>​    seed获取 <a href="https://picsum.photos/images">Lorem Picsum - Images</a></p><p><a href="https://picsum.photos/id/237/1920/1080">https://picsum.photos/id/237/1920/1080</a></p><h3 id="黑白"><a href="#黑白" class="headerlink" title="黑白"></a>黑白</h3><p><a href="https://picsum.photos/1920/1080?grayscale">https://picsum.photos/1920/1080?grayscale</a></p><h3 id="模糊"><a href="#模糊" class="headerlink" title="模糊"></a>模糊</h3><p><a href="https://picsum.photos/1920/1080?blur">https://picsum.photos/1920/1080?blur</a></p><p>​    模糊度1-10 <a href="https://picsum.photos/1920/1080?blur=2">https://picsum.photos/1920/1080?blur=2</a></p><h3 id="修改图片格式-jpg-webp"><a href="#修改图片格式-jpg-webp" class="headerlink" title="修改图片格式.jpg .webp"></a>修改图片格式.jpg .webp</h3><p><a href="https://picsum.photos/1920/1080.jpg">https://picsum.photos/1920/1080.jpg</a></p><h3 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a><strong>高级用法</strong></h3><p>列出图片</p><p>使用<code>/v2/list</code>端点获取图像列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://picsum.photos/v2/list</span><br></pre></td></tr></table></figure><p>默认情况下，API每页将返回30个项目。</p><p>要请求另一个页面，请使用<code>?page</code>参数。</p><p>要更改每页的项目数，请使用<code>?limit</code>参数。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://picsum.photos/v2/list?page=2&amp;limit=100</span><br></pre></td></tr></table></figure><p>该<code>Link</code>头包括关于下一首/上页分页信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;id&quot;: &quot;0&quot;,</span><br><span class="line">        &quot;author&quot;: &quot;Alejandro Escamilla&quot;,</span><br><span class="line">        &quot;width&quot;: 5616,</span><br><span class="line">        &quot;height&quot;: 3744,</span><br><span class="line">        &quot;url&quot;: &quot;https://unsplash.com/...&quot;,</span><br><span class="line">        &quot;download_url&quot;: &quot;https://picsum.photos/...&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>图像细节</p><p>使用<code>/id/&#123;id&#125;/info</code>端点获取有关特定图像的信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://picsum.photos/id/0/info</span><br></pre></td></tr></table></figure><p>您可以通过查看<code>Picsum-ID</code>标题或<code>User Comment</code>EXIF元数据中的字段来查找图像的ID 。</p><p>{ “id”: “0”, “author”: “Alejandro Escamilla”, “width”: 5616, “height”: 3744, “url”: “<a href="https://unsplash.com/%E2%80%A6%E2%80%9D">https://unsplash.com/…”</a>, “download_url”: “<a href="https://picsum.photos/%E2%80%A6%E2%80%9D">https://picsum.photos/…”</a> }</p><h2 id="一个好用的api"><a href="#一个好用的api" class="headerlink" title="一个好用的api"></a>一个好用的api</h2><p><a href="https://www.eee.dog/tech/rand-pic-api.html">随机图片API - EEE.DOG</a></p><p>比如bing壁纸：<a href="https://www.eee.dog/tech/rand-pic-api.html">https://www.eee.dog/tech/rand-pic-api.html</a></p><h1 id="图片无损变大"><a href="#图片无损变大" class="headerlink" title="图片无损变大"></a>图片无损变大</h1><h2 id="bigjpg"><a href="#bigjpg" class="headerlink" title="bigjpg"></a>bigjpg</h2><p>让你的图片无损放大，放大，再放大！只需要稍稍处理一下就可达到意想不到的效果。</p><p><img src="https://hutters.gitee.io/imgs/20190829095211374.png" alt="img"></p><p>网站：<a href="http://bigjpg.com/zh">http://bigjpg.com/zh</a></p><h2 id="waifu2x无损放大图片"><a href="#waifu2x无损放大图片" class="headerlink" title="waifu2x无损放大图片"></a>waifu2x无损放大图片</h2><p><img src="https://hutters.gitee.io/imgs/2019100314550430.png" alt="img"></p><p>网站：<a href="http://waifu2x.udp.jp/index.zh-CN.html">http://waifu2x.udp.jp/index.zh-CN.html</a>    </p><p>GitHub源码：<a href="https://github.com/nagadomi/waifu2x">https://github.com/nagadomi/waifu2x</a></p><h1 id="照片抠图和证件照换底色"><a href="#照片抠图和证件照换底色" class="headerlink" title="照片抠图和证件照换底色"></a>照片抠图和证件照换底色</h1><p>Remove Image Background</p><p><img src="https://img-blog.csdnimg.cn/20191004184717714.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9oYW5kc29tZS1tYW4uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="img"></p><p>网站：<a href="https://www.remove.bg/">https://www.remove.bg/</a>   </p><p>Python代码实现：<a href="https://handsome-man.blog.csdn.net/article/details/102025059">https://handsome-man.blog.csdn.net/article/details/102025059</a></p><h1 id="稿定设计"><a href="#稿定设计" class="headerlink" title="稿定设计"></a>稿定设计</h1><p>稿定设计是一款多场景商业视觉在线设计平台，提供操作简单、功能强大的在线服务，抠图简单高效，支持在线PS、人工智能抠图和证件换背景等操作。</p><p><img src="https://hutters.gitee.io/imgs/20191205123916246.png" alt="img"></p><p>网站：<a href="https://www.uupoop.com/">https://www.uupoop.com/</a> </p><h1 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h1><h2 id="TinyPNG"><a href="#TinyPNG" class="headerlink" title="TinyPNG"></a>TinyPNG</h2><p>免费的在线图片压缩工具，压缩率高，无损画质，直接拖拽使用，独特且强悍的JavaScript 算法，能极速压缩 80% 的图片大小，而不损害其质量。</p><p><img src="https://img-blog.csdnimg.cn/20191027202338817.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9oYW5kc29tZS1tYW4uYmxvZy5jc2RuLm5ldA==,size_16,color_FFFFFF,t_70" alt="img"></p><p>网站：<a href="https://tinypng.com/">https://tinypng.com/</a></p><h2 id="SmartResize"><a href="#SmartResize" class="headerlink" title="SmartResize"></a>SmartResize</h2><p>基于 JavaScript+HTML5 编写的一个批量裁剪缩放图片神器（适合简单的人工智能图像数据预处理）。</p><p><img src="https://hutters.gitee.io/imgs/20191027202813832.png" alt="img"></p><p>网站：<a href="https://www.smartresize.com/zh-cn">https://www.smartresize.com/zh-cn</a> </p><h2 id="GIF工具之家"><a href="#GIF工具之家" class="headerlink" title="GIF工具之家"></a>GIF工具之家</h2><p>支持图片压缩、GIF压缩、视频转GIF、GIF合成以及GIF剪裁五大功能。</p><p><img src="https://hutters.gitee.io/imgs/20200305124753825.png" alt="img"></p><p>网站：<a href="https://tool.gifhome.com/">https://tool.gifhome.com/</a></p><h1 id="下载网页图片（批量）"><a href="#下载网页图片（批量）" class="headerlink" title="下载网页图片（批量）"></a>下载网页图片（批量）</h1><p>一款Chrome浏览器中用于嗅探、分析网页图片、图片筛选、下载等功能的扩展网页插件程序，安装插件之后，就会出现在浏览器上，一次性可以下载几百张图片素材。</p><p><img src="https://hutters.gitee.io/imgs/20200305222424654.gif" alt="img"></p><p>网站：<a href="http://www.pullywood.com/ImageAssistant/">http://www.pullywood.com/ImageAssistant/</a> </p><h1 id="ico图标"><a href="#ico图标" class="headerlink" title="ico图标"></a>ico图标</h1><br><p>阿里矢量图库: <a href="https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a">iconfont-阿里巴巴矢量图标库</a></p><p><a href="http://www.fontawesome.com.cn/">Font Awesome 中文网 – | 字体图标</a></p><p><a href="https://fontawesome.com/v5.15/icons?d=gallery&p=2">Icons | Font Awesome</a></p><p><a href="https://www.flaticon.com/">Vector Icons and Stickers - PNG, SVG, EPS, PSD and CSS (flaticon.com)</a></p><p>ico，素材： <a href="https://www.1001freedownloads.com/">Download Free Vectors, Photos, Icons, PSDs and more - 1001FreeDownloads.com</a></p><p>网页背景：<a href="https://www.toptal.com/designers/subtlepatterns/">https://www.toptal.com/designers/subtlepatterns/</a></p><p><a href="https://www.freepik.com/">Free Vectors, Stock Photos &amp; PSD Downloads | Freepik</a></p><br><h1 id="png转ico"><a href="#png转ico" class="headerlink" title="png转ico"></a>png转ico</h1><p><a href="https://pngtoicon.com/cn">https://pngtoicon.com/cn</a></p><h1 id="封面海报设计"><a href="#封面海报设计" class="headerlink" title="封面海报设计"></a>封面海报设计</h1><p>基本都收费</p><h2 id="稿定设计：https-www-gaoding-com-introduction"><a href="#稿定设计：https-www-gaoding-com-introduction" class="headerlink" title="稿定设计：https://www.gaoding.com/introduction"></a>稿定设计：<a href="https://www.gaoding.com/introduction">https://www.gaoding.com/introduction</a></h2><h2 id="图怪兽：https-818ps-com"><a href="#图怪兽：https-818ps-com" class="headerlink" title="图怪兽：https://818ps.com/"></a>图怪兽：<a href="https://818ps.com/">https://818ps.com/</a></h2><h2 id="canva：https-www-canva-cn"><a href="#canva：https-www-canva-cn" class="headerlink" title="canva：https://www.canva.cn/"></a>canva：<a href="https://www.canva.cn/">https://www.canva.cn/</a></h2><h2 id="懒设计：https-www-fotor-com-cn"><a href="#懒设计：https-www-fotor-com-cn" class="headerlink" title="懒设计：https://www.fotor.com.cn/"></a>懒设计：<a href="https://www.fotor.com.cn/">https://www.fotor.com.cn/</a></h2><h1 id="拼图"><a href="#拼图" class="headerlink" title="拼图"></a>拼图</h1><p><a href="https://www.gaoding.com/pintu">https://www.gaoding.com/pintu</a></p>]]></content>
      
      
      <categories>
          
          <category> 网站合集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 实用 </tag>
            
            <tag> 工具箱 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python学习笔记</title>
      <link href="/blog/2021/11/30/python%E7%AC%94%E8%AE%B0/"/>
      <url>/blog/2021/11/30/python%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="关于pip的配置"><a href="#关于pip的配置" class="headerlink" title="关于pip的配置"></a>关于pip的配置</h1><h2 id="pip镜像加速和更新"><a href="#pip镜像加速和更新" class="headerlink" title="pip镜像加速和更新"></a>pip镜像加速和更新</h2><p>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a></p><p>中国科技大学 <a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a></p><p>华中理工大学：<a href="http://pypi.hustunique.com/">http://pypi.hustunique.com/</a></p><p>山东理工大学：<a href="http://pypi.sdutlinux.org/">http://pypi.sdutlinux.org/</a> </p><p>豆瓣：<a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></p><p><strong>例如：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple 包名</span><br></pre></td></tr></table></figure><p>pip install -U dateutil -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p> pip install -i <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a> scipy</p><h2 id="永久配置"><a href="#永久配置" class="headerlink" title="永久配置"></a>永久配置</h2><p>pip config set global.index-url <a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></p><p>#查看是否配置成功</p><p>pip config list</p><h2 id="更新pip"><a href="#更新pip" class="headerlink" title="更新pip"></a>更新pip</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --upgrade pip </span><br></pre></td></tr></table></figure><h1 id="print的炫酷用法"><a href="#print的炫酷用法" class="headerlink" title="print的炫酷用法"></a>print的炫酷用法</h1><p>print(“\033[显示方式；前景颜色；背景颜色m…\033[0m”)</p><p>显示方式</p><table><thead><tr><th>意义</th><th>显示方式</th></tr></thead><tbody><tr><td>默认</td><td>0</td></tr><tr><td>高亮显示</td><td>1</td></tr><tr><td>下划线</td><td>4</td></tr><tr><td>闪烁</td><td>5</td></tr><tr><td>反白显示</td><td>7</td></tr><tr><td>不可见</td><td>8</td></tr></tbody></table><h1 id="前景颜色和背景颜色"><a href="#前景颜色和背景颜色" class="headerlink" title="前景颜色和背景颜色"></a>前景颜色和背景颜色</h1><table><thead><tr><th>颜色</th><th>前景色</th><th>背景色</th></tr></thead><tbody><tr><td>黑色</td><td>30</td><td>40</td></tr><tr><td>红色</td><td>31</td><td>41</td></tr><tr><td>绿色</td><td>32</td><td>42</td></tr><tr><td>黄色</td><td>33</td><td>43</td></tr><tr><td>蓝色</td><td>34</td><td>44</td></tr><tr><td>紫红色</td><td>35</td><td>45</td></tr><tr><td>青蓝色</td><td>36</td><td>46</td></tr><tr><td>白色</td><td>37</td><td>47</td></tr></tbody></table><blockquote><p>print(“\033[0;31;m单独分布状态图\033[0m”)</p><p><img src="https://i.loli.net/2021/12/02/CaxMARbh9peoZPc.png" alt="image-20211202211016128"></p></blockquote><h1 id="git的使用"><a href="#git的使用" class="headerlink" title="git的使用"></a>git的使用</h1><p><a href="https://www.jianshu.com/p/3bedd17343d9">https://www.jianshu.com/p/3bedd17343d9</a></p><p>安装：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></p><p>配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name chou                                                   #此英文名不需要跟GitHub账号保持一致</span><br><span class="line">git config --global user.email 3122107411@qq.com                                                      #此邮箱不需要跟GitHub账号保持一致</span><br><span class="line">git config --global push.default matching</span><br><span class="line">git config --global core.quotepath false</span><br><span class="line">git config --global core.editor &quot;vim&quot;</span><br></pre></td></tr></table></figure><p>github建了一个专门的库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git@github.com:CallMeChou/git.git</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;更新&quot;</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure><h1 id="文件读写操作"><a href="#文件读写操作" class="headerlink" title="文件读写操作"></a>文件读写操作</h1><p><img src="https://i.loli.net/2021/11/30/LN6bBUEgCfhMWdy.png" alt="image-20211130140934650"></p><h1 id="github-action"><a href="#github-action" class="headerlink" title="github action"></a>github action</h1><p>相当于一个服务器</p><p>b站视频（En)：<a href="https://www.bilibili.com/video/BV1kf4y1i7dw?from=search&amp;seid=6286585284206871463">https://www.bilibili.com/video/BV1kf4y1i7dw?from=search&amp;seid=6286585284206871463</a></p><p>功能介绍：<a href="https://blog.csdn.net/qq_40748336/article/details/110749375">https://blog.csdn.net/qq_40748336/article/details/110749375</a></p><h2 id="设置时间-UTC标准（schedule）："><a href="#设置时间-UTC标准（schedule）：" class="headerlink" title="设置时间 UTC标准（schedule）："></a>设置时间 UTC标准（schedule）：</h2><p>官方文档：<a href="https://docs.github.com/cn/actions/reference/events-that-trigger-workflows#scheduled-events">https://docs.github.com/cn/actions/reference/events-that-trigger-workflows#scheduled-events</a></p><p>时间换算：<a href="http://timebie.com/cn/universalbeijing.php">http://timebie.com/cn/universalbeijing.php</a></p><p>微信消息推送：<a href="http://sc.ftqq.com/?c=code">http://sc.ftqq.com/?c=code</a></p><p>计划任务语法有五个字段，中间用空格分隔，每个字段代表一个时间单位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">┌───────────── minute (0 - 59)</span><br><span class="line">│ ┌───────────── hour (0 - 23)</span><br><span class="line">│ │ ┌───────────── day of the month (1 - 31)</span><br><span class="line">│ │ │ ┌───────────── month (1 - 12 or JAN-DEC)</span><br><span class="line">│ │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)</span><br><span class="line">│ │ │ │ │                                   </span><br><span class="line">│ │ │ │ │</span><br><span class="line">│ │ │ │ │</span><br><span class="line">* * * * *</span><br></pre></td></tr></table></figure><h1 id="虚拟环境"><a href="#虚拟环境" class="headerlink" title="虚拟环境"></a>虚拟环境</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python -m venv myvnev</span><br><span class="line">cd mytestenv/Scripts</span><br><span class="line">activate</span><br><span class="line">pip <span class="built_in">list</span></span><br><span class="line">deactivate.bat</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/weixin_43463712/article/details/90210108">https://blog.csdn.net/weixin_43463712/article/details/90210108</a></p><p>可以使用cd命令，cd命令的功能是切换到指定的目录：</p><p>命令格式：</p><h1 id="路径-cd"><a href="#路径-cd" class="headerlink" title="路径 cd"></a>路径 cd</h1><p>目录名有几个符号有特殊的含义，“..”代表上<a href="https://www.baidu.com/s?wd=%E4%B8%80%E7%BA%A7%E7%9B%AE%E5%BD%95&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao">一级目录</a>、“~”代表HOME目录、“-”代表前一目录。</p><p>因此返回上<a href="https://www.baidu.com/s?wd=%E4%B8%80%E7%BA%A7%E7%9B%AE%E5%BD%95&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao">一级目录</a>可以使用命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ..</span><br></pre></td></tr></table></figure><p>①…/ 表示当前文件所在的目录的上一级目录<br>②./ 表示当前文件所在的目录(可以省略)<br>③/ 表示当前站点的根目录(域名映射的硬盘目录)<br>④”/“左倾斜是正斜杠，””右倾斜是反斜杠，可以记为：除号是正斜杠“/”。</p><h1 id="python编译工具"><a href="#python编译工具" class="headerlink" title="python编译工具"></a>python编译工具</h1><h2 id="1-auto-py-to-exe"><a href="#1-auto-py-to-exe" class="headerlink" title="1.auto-py-to-exe"></a>1.auto-py-to-exe</h2><p><code>pip install auto-py-to-exe</code></p><blockquote><p>非常好用的打包工具基于pyinstaller</p></blockquote><h2 id="2-pyinstaller"><a href="#2-pyinstaller" class="headerlink" title="2.pyinstaller"></a>2.pyinstaller</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzU5Nzg5ODQ3NQ==&mid=2247505334&idx=1&sn=5e6e6b23fdec018d584738326e3a4b7b&scene=21#wechat_redirect">别再问我Python打包成exe了！（终极版） (qq.com)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pyinstaller -F -w -i icon.ico 1.pyPyinstaller -F -i icon.ico daka.py</span><br></pre></td></tr></table></figure><p>将python文件打包成exe文件</p><table><thead><tr><th>-h，–help</th><th align="center">查看该模块的帮助信息</th></tr></thead><tbody><tr><td>-F，-onefile</td><td align="center">产生单个的可执行文件</td></tr><tr><td>-D，–onedir</td><td align="center">产生一个目录（包含多个文件）作为可执行程序</td></tr><tr><td>-a，–ascii</td><td align="center">不包含 Unicode 字符集支持</td></tr><tr><td>-d，–debug</td><td align="center">产生 debug 版本的可执行文件</td></tr><tr><td>-w，–windowed，–noconsolc</td><td align="center">指定程序运行时不显示命令行窗口（仅对 Windows 有效）</td></tr><tr><td>-c，–nowindowed，–console</td><td align="center">指定使用命令行窗口运行程序（仅对 Windows 有效）</td></tr><tr><td>-o DIR，–out=DIR</td><td align="center">指定 spec 文件的生成目录。如果没有指定，则默认使用当前目录来生成 spec 文件</td></tr><tr><td>-p DIR，–path=DIR</td><td align="center">设置 Python 导入模块的路径（和设置 PYTHONPATH 环境变量的作用相似）。也可使用路径分隔符（Windows 使用分号，Linux 使用冒号）来分隔多个路径</td></tr><tr><td>-n NAME，–name=NAME</td><td align="center">指定项目（产生的 spec）名字。如果省略该选项，那么第一个脚本的主文件名将作为 spec 的名字</td></tr></tbody></table><h2 id="3-将exe反编译成py文件"><a href="#3-将exe反编译成py文件" class="headerlink" title="3.将exe反编译成py文件"></a>3.将exe反编译成py文件</h2><p><a href="https://mp.weixin.qq.com/s/ddHJ1E2XniKnFiUSHBXTLw">别再问我exe反编译成Python脚本了！ (qq.com)</a></p><p>pyc-py:<a href="https://tool.lu/pyc/">python反编译 - 在线工具 (tool.lu)</a></p><h1 id="json文件处理"><a href="#json文件处理" class="headerlink" title="json文件处理"></a>json文件处理</h1><p><a href="https://www.runoob.com/python/python-json.html">https://www.runoob.com/python/python-json.html</a></p><table><thead><tr><th align="left">函数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">json.dumps</td><td align="left">将 Python 对象编码成 JSON 字符串</td></tr><tr><td align="left">json.loads</td><td align="left">将已编码的 JSON 字符串解码为 Python 对象</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">json.dumps(obj, skipkeys=<span class="literal">False</span>, ensure_ascii=<span class="literal">True</span>, check_circular=<span class="literal">True</span>, allow_nan=<span class="literal">True</span>, cls=<span class="literal">None</span>, indent=<span class="literal">None</span>, separators=<span class="literal">None</span>, encoding=<span class="string">&quot;utf-8&quot;</span>, default=<span class="literal">None</span>, sort_keys=<span class="literal">False</span>, **kw)</span><br></pre></td></tr></table></figure><h1 id="ico文件"><a href="#ico文件" class="headerlink" title="ico文件"></a>ico文件</h1><p>转化：</p><p><a href="http://www.ico51.cn/">http://www.ico51.cn/</a></p><p>下载：（阿里矢量图）</p><p><a href="https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a">https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a</a></p><h1 id="爬虫部分"><a href="#爬虫部分" class="headerlink" title="爬虫部分"></a>爬虫部分</h1><h2 id="爬虫补充知识："><a href="#爬虫补充知识：" class="headerlink" title="爬虫补充知识："></a>爬虫补充知识：</h2><h3 id="协议："><a href="#协议：" class="headerlink" title="协议："></a>协议：</h3><p>协议，网络协议的简称，网络协议是通信计算机双方必须共同遵从的一组约定。如怎么样建立连接、怎么样互相识别等。只有遵守这个约定，计算机之间才能相互通信交流。</p><h3 id="HTTP-HTTPS-协议："><a href="#HTTP-HTTPS-协议：" class="headerlink" title="HTTP/HTTPS 协议："></a>HTTP/HTTPS 协议：</h3><p>目前网站主要有两种协议，HTTP 和 HTTPS，具体的原理我们可以不用深究，我们只需要知道他们的区别：</p><p><img src="https://i.loli.net/2021/11/30/1uErKP5D7hbMSVd.png" alt="image-20210822095440492"></p><p><code>URL</code> 是缩写，其英文全称是：<code>Uniform Resource Locator</code>（统一资源定位符）。<code>URL</code> 的格式规范规定了由哪几部分组成，以及各种符号的作用：</p><p><img src="https://i.loli.net/2021/11/30/c9NoSrUwd6lh1qp.png" alt="URL格式"></p><ul><li>路径与参数之间用 <code>?</code> 分隔。看到问号 <code>?</code> 就知道后面的内容就是参数了。</li><li>多个参数之间用 <code>&amp;</code> 分隔。</li><li>参数用“参数名=参数值”（<code>key=value</code>）的格式表示。</li></ul><h3 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h3><p>比如：<a href="https://www.douban.com/gallery/topic/116390/?from=hot_topic_note&amp;sort=new">https://www.douban.com:443/gallery/topic/116390/?from=hot_topic_note&amp;sort=new</a></p><p>域名后的 <code>:443</code> 表示网站的端口号。<code>HTTP</code> 协议默认的端口号是 <code>80</code> ，<code>HTTPS</code> 协议默认的端口号是 <code>443</code> 。默认的端口号在 URL 中是可以省略的，其它的端口号就必须要写明了。</p><p>上网浏览时，大多数情况下看不到端口号，但是大家在开发过程中可能经常会用到不同的端口号，以 <code>8000</code> 、 <code>8080</code> 最常见，这些端口号必须写明。</p><h3 id="requests介绍"><a href="#requests介绍" class="headerlink" title="requests介绍"></a>requests介绍</h3><p>官方文档：<a href="https://requests.readthedocs.io/zh_CN/latest/">https://requests.readthedocs.io/zh_CN/latest/</a></p><p>http请求的介绍</p><p>POST、DELETE、PUT、GET就像对应着数据库的CRUD（增、删、改、查）</p><p>使用标准：</p><table><thead><tr><th>请求方式</th><th>URL</th><th>操作</th></tr></thead><tbody><tr><td>POST</td><td>/URL</td><td>增加</td></tr><tr><td>DELETE</td><td>/URL/xxx</td><td>删除</td></tr><tr><td>PUT</td><td>/URL/xxx</td><td>修改</td></tr><tr><td>GET</td><td>/URL/xxx</td><td>查询</td></tr></tbody></table><p><strong>GET请求</strong>，用于向服务器发送查询数据的请求，只是查询，不会增加、修改数据，不会影响服务器上资源的内容。无论进行多少次都，执行后的结果都是一样的，具有幂等性。</p><p><strong>PUT请求</strong>，是用于向服务器发送数据，从而改变数据，修改数据内容。但是不会增加数据的种类。无论进行多少次操作，其结果也都一样，具有幂等性。</p><p><strong>POST请求</strong>，与PUT请求类似。都是向服务器端发送数据，但是改请求会增加数据的种类，创建新的内容。不具有幂等性。</p><p><strong>DELETE请求</strong>，用来删除某一资源</p><p><strong>PUT与POST的区别？</strong></p><p>​    PUT和POST都是向服务器发送数据，</p><p>​    但是POST主要是在一个集合资源之上（url），PUT主要作用在一个具体的资源之上（url/xxx）</p><p>幂等性：幂等意味着对同一个URL的多次请求会返回一样的结果</p><h4 id="1-response对象"><a href="#1-response对象" class="headerlink" title="1.response对象"></a>1.response对象</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requestsres = requests.get(<span class="string">&#x27;https://www.ustc.edu.cn/&#x27;</span>)</span><br></pre></td></tr></table></figure><ol><li><p>状态码 res.status_code</p></li><li><p>响应内容res.text</p></li><li><p>二进制方式 res.content</p></li></ol><p>关于编码问题：            <img src="https://i.loli.net/2021/11/30/5cdxbBRZADrUHGe.png" alt="image-20210822102345287"></p><ol start="4"><li>res.json()</li></ol><h4 id="2-Referer"><a href="#2-Referer" class="headerlink" title="2.Referer"></a>2.Referer</h4><p>为了模拟浏览器自动加 Referer 信息的行为，可以调用语句：</p><p>headers = {‘Referer’: ‘youkeda.com’}<br>同样，程序访问此图片也是失败的，请看演示程序：</p><p>http 响应状态码是：403 ，表示禁止访问此图片。</p><p>解决办法<br>贴到浏览器能访问是因为此图床允许无 Referer 信息时访问。但也不是所有图床都允许呢，况且即使同一个图床，也可能修改规则，某一天突然改为必须本站内才能也未可知。</p><p>所以，为了一劳永逸的解决问题，需要把 Referer 信息设置为图片原始使用的网站。</p><h4 id="3-Host"><a href="#3-Host" class="headerlink" title="3.Host"></a>3.Host</h4><p><strong>Host</strong> 请求头指明了请求将要发送到的服务器主机名和端口号。</p><p>如果没有包含端口号，会自动使用被请求服务的默认端口（比如HTTPS URL使用443端口，HTTP URL使用80端口）。</p><p>所有HTTP/1.1 请求报文中必须包含一个<code>Host</code>头字段。对于缺少<code>Host</code>头或者含有超过一个<code>Host</code>头的HTTP/1.1 请求，可能会收到<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Status/400"><code>400</code></a>（Bad Request）状态码。</p><h4 id="4-cookies"><a href="#4-cookies" class="headerlink" title="4.cookies"></a>4.cookies</h4><p><img src="https://i.loli.net/2021/11/15/s8z6XdYNRbI2rCa.png" alt="img"></p><p>可以放在headers也可以单列出来，单列出来有点麻烦，所以还不如<strong>放到headers里面</strong></p><p><img src="https://i.loli.net/2021/11/15/CcLfMshVYeiyvDH.png" alt="img"> </p><p>Cookies解析  <code>cookiesjar</code></p><h2 id="下载文件的两种方式："><a href="#下载文件的两种方式：" class="headerlink" title="下载文件的两种方式："></a>下载文件的两种方式：</h2><p>（1） requests下载</p><p><img src="https://i.loli.net/2021/11/15/GR5fuJ7UTlMKSO4.png" alt="img"> </p><p>（2）urllib下载文件</p><p><img src="https://i.loli.net/2021/11/15/OKVNEqa6A3ctUuI.png" alt="img"> </p><h2 id="requests库"><a href="#requests库" class="headerlink" title="requests库"></a>requests库</h2><p><a href="https://docs.python-requests.org/zh_CN/latest/">Requests: 让 HTTP 服务人类 — Requests 2.18.1 文档 (python-requests.org)</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; r = requests.get(&#x27;https://api.github.com/user&#x27;, auth=(&#x27;user&#x27;, &#x27;pass&#x27;))</span><br><span class="line">&gt;&gt;&gt; r.status_code</span><br><span class="line">200</span><br><span class="line">&gt;&gt;&gt; r.headers[&#x27;content-type&#x27;]</span><br><span class="line">&#x27;application/json; charset=utf8&#x27;</span><br><span class="line">&gt;&gt;&gt; r.encoding</span><br><span class="line">&#x27;utf-8&#x27;</span><br><span class="line">&gt;&gt;&gt; r.text</span><br><span class="line">u&#x27;&#123;&quot;type&quot;:&quot;User&quot;...&#x27;</span><br><span class="line">&gt;&gt;&gt; r.json()</span><br><span class="line">&#123;u&#x27;private_gists&#x27;: 419, u&#x27;total_private_repos&#x27;: 77, ...&#125;</span><br></pre></td></tr></table></figure><hr><p>这部分文档是以文字为主，从 Requests 的背景讲起，然后对 Requests 的重点功能做了逐一的介绍。</p><ul><li>简介<ul><li><a href="https://docs.python-requests.org/zh_CN/latest/user/intro.html#id2">开发哲学</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/intro.html#apache2">Apache2 协议</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/intro.html#requests">Requests 协议</a></li></ul></li><li>安装 Requests<ul><li><a href="https://docs.python-requests.org/zh_CN/latest/user/install.html#pip-install-requests">pip install requests</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/install.html#id1">获得源码</a></li></ul></li><li>快速上手<ul><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id2">发送请求</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#url">传递 URL 参数</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id3">响应内容</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id4">二进制响应内容</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#json">JSON 响应内容</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id5">原始响应内容</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id6">定制请求头</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#post">更加复杂的 POST 请求</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#post-multipart-encoded">POST一个多部分编码(Multipart-Encoded)的文件</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id7">响应状态码</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id8">响应头</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#cookie">Cookie</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id9">重定向与请求历史</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id10">超时</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/quickstart.html#id11">错误与异常</a></li></ul></li><li>高级用法<ul><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#session-objects">会话对象</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#request-and-response-objects">请求与响应对象</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#prepared-request">准备的请求 （Prepared Request）</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#ssl">SSL 证书验证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#id4">客户端证书</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#ca">CA 证书</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#body-content-workflow">响应体内容工作流</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#keep-alive">保持活动状态（持久连接）</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#streaming-uploads">流式上传</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#chunk-encoding">块编码请求</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#post">POST 多个分块编码的文件</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#event-hooks">事件挂钩</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#custom-auth">自定义身份验证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#streaming-requests">流式请求</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#proxies">代理</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#compliance">合规性</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#http">HTTP动词</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#id17">定制动词</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#link-headers">响应头链接字段</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#transport-adapters">传输适配器</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#blocking-or-nonblocking">阻塞和非阻塞</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#header">Header 排序</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/advanced.html#timeout">超时（timeout）</a></li></ul></li><li>身份认证<ul><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#id2">基本身份认证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#id3">摘要式身份认证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#oauth-1">OAuth 1 认证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#oauth-2-openid">OAuth 2 与 OpenID 连接认证</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#id4">其他身份认证形式</a></li><li><a href="https://docs.python-requests.org/zh_CN/latest/user/authentication.html#id5">新的身份认证形式</a></li></ul></li></ul><hr><h2 id="Beautiful-Soup4"><a href="#Beautiful-Soup4" class="headerlink" title="Beautiful Soup4"></a>Beautiful Soup4</h2><p>官方文档：<a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#get-text">Beautiful Soup 4.4.0 文档 — Beautiful Soup 4.2.0 中文 文档</a></p><p><a href="https://www.cnblogs.com/linagcheng/p/10311181.html">爬虫（三）—— BeautifulSoup模块获取元素 - 凉城旧巷 - 博客园 (cnblogs.com)</a></p><p>Beautiful Soup 是一个可以从 HTML 或 XML 文件中提取数据的 Python 库。它能够通过你喜欢的转换器实现惯用的文档导航，查找，修改文档的方式。Beautiful Soup 会帮你节省数小时甚至数天的工作时间。</p><p>下表列出了主要的解析器,以及它们的优缺点:</p><table><thead><tr><th>解析器</th><th>使用方法</th><th>优势</th><th>劣势</th></tr></thead><tbody><tr><td>Python标准库</td><td><code>BeautifulSoup(markup, &quot;html.parser&quot;)</code></td><td>Python的内置标准库执行速度适中文档容错能力强</td><td>Python 2.7.3 or 3.2.2)前 的版本中文档容错能力差</td></tr><tr><td>lxml HTML 解析器</td><td><code>BeautifulSoup(markup, &quot;lxml&quot;)</code></td><td>速度快文档容错能力强</td><td>需要安装C语言库</td></tr><tr><td>lxml XML 解析器</td><td><code>BeautifulSoup(markup, [&quot;lxml-xml&quot;])</code>                            <code>BeautifulSoup(markup, &quot;xml&quot;)</code></td><td>速度快唯一支持XML的解析器</td><td>需要安装C语言库</td></tr><tr><td>html5lib</td><td><code>BeautifulSoup(markup, &quot;html5lib&quot;)</code></td><td>最好的容错性以浏览器的方式解析文档生成HTML5格式的文档</td><td>速度慢不依赖外部扩展</td></tr></tbody></table><img src="https://i.loli.net/2021/11/15/CvLOKMlxUptkq8d.png" alt="image-20210920163606911" style="zoom: 200%;" /><p>find_all( <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id35">name</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#css">attrs</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#recursive">recursive</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id36">string</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#keyword">**kwargs</a> )</p><p>find( <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id35">name</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#css">attrs</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#recursive">recursive</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id36">string</a> , <a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#keyword">**kwargs</a> )</p><p><code>find_all()</code> 方法将返回文档中符合条件的所有tag,尽管有时候我们只想得到一个结果.比如文档中只有一个<body>标签,那么使用 <code>find_all()</code> 方法来查找<body>标签就不太合适, 使用 <code>find_all</code> 方法并设置 <code>limit=1</code> 参数不如直接使用 <code>find()</code> 方法.</p><ol><li>格式化输出prettify() 方法将Beautiful Soup的文档树格式化后以Unicode编码输出,每个XML/HTML标签都独占一行</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">markup = <span class="string">&#x27;&lt;a href=&quot;http://example.com/&quot;&gt;I linked to &lt;i&gt;example.com&lt;/i&gt;&lt;/a&gt;&#x27;</span>soup = BeautifulSoup(markup)soup.prettify()<span class="comment"># &#x27;&lt;html&gt;\n &lt;head&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;a href=&quot;http://example.com/&quot;&gt;\n...&#x27;print(soup.prettify())# &lt;html&gt;#  &lt;head&gt;#  &lt;/head&gt;#  &lt;body&gt;#   &lt;a href=&quot;http://example.com/&quot;&gt;#    I linked to#    &lt;i&gt;#     example.com#    &lt;/i&gt;#   &lt;/a&gt;#  &lt;/body&gt;# &lt;/html&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>get_text()</li></ol><p><img src="https://i.loli.net/2021/11/15/mq2x1jsKi4ItPTN.png" alt="image-20210822190758421"></p><hr><p><strong>查找元素的方法</strong></p><h3 id="1-原生方法"><a href="#1-原生方法" class="headerlink" title="1.原生方法"></a>1.原生方法</h3><h3 id="2-和re结合"><a href="#2-和re结合" class="headerlink" title="2.和re结合"></a>2.和re结合</h3><h3 id="3-和xpath结合"><a href="#3-和xpath结合" class="headerlink" title="3.和xpath结合"></a>3.和xpath结合</h3><h3 id="4-和css结合"><a href="#4-和css结合" class="headerlink" title="4.和css结合"></a>4.和css结合</h3><p>Beautiful Soup支持大部分的CSS选择器 <a href="http://www.w3.org/TR/CSS2/selector.html">http://www.w3.org/TR/CSS2/selector.html</a> [<a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id93">6]</a> , 在 <code>Tag</code> 或 <code>BeautifulSoup</code> 对象的 <code>.select()</code> 方法中传入字符串参数, 即可使用CSS选择器的语法找到tag:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;title&quot;)# [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]soup.select(&quot;p nth-of-type(3)&quot;)# [&lt;p class=&quot;story&quot;&gt;...&lt;/p&gt;]</span><br></pre></td></tr></table></figure><p>通过tag标签逐层查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;body a&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot;  id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&quot;html head title&quot;)# [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]</span><br></pre></td></tr></table></figure><p>找到某个tag标签下的直接子标签 [<a href="https://beautifulsoup.readthedocs.io/zh_CN/v4.4.0/#id93">6]</a> :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;head &gt; title&quot;)# [&lt;title&gt;The Dormouse&#x27;s story&lt;/title&gt;]soup.select(&quot;p &gt; a&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot;  id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&quot;p &gt; a:nth-of-type(2)&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]soup.select(&quot;p &gt; #link1&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]soup.select(&quot;body &gt; a&quot;)# []</span><br></pre></td></tr></table></figure><p>找到兄弟节点标签:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;#link1 ~ .sister&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot;  id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&quot;#link1 + .sister&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>通过CSS的类名查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;.sister&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&quot;[class~=sister]&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>通过tag的id查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;#link1&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]soup.select(&quot;a#link2&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>同时用多种CSS选择器查询元素:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&quot;#link1,#link2&quot;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>通过是否存在某个属性来查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&#x27;a[href]&#x27;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>通过属性的值来查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select(&#x27;a[href=&quot;http://example.com/elsie&quot;]&#x27;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]soup.select(&#x27;a[href^=&quot;http://example.com/&quot;]&#x27;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/lacie&quot; id=&quot;link2&quot;&gt;Lacie&lt;/a&gt;,#  &lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&#x27;a[href$=&quot;tillie&quot;]&#x27;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/tillie&quot; id=&quot;link3&quot;&gt;Tillie&lt;/a&gt;]soup.select(&#x27;a[href*=&quot;.com/el&quot;]&#x27;)# [&lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;]</span><br></pre></td></tr></table></figure><p>通过语言设置来查找:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">multilingual_markup = &quot;&quot;&quot; &lt;p lang=&quot;en&quot;&gt;Hello&lt;/p&gt; &lt;p lang=&quot;en-us&quot;&gt;Howdy, y&#x27;all&lt;/p&gt; &lt;p lang=&quot;en-gb&quot;&gt;Pip-pip, old fruit&lt;/p&gt; &lt;p lang=&quot;fr&quot;&gt;Bonjour mes amis&lt;/p&gt;&quot;&quot;&quot;multilingual_soup = BeautifulSoup(multilingual_markup)multilingual_soup.select(&#x27;p[lang|=en]&#x27;)# [&lt;p lang=&quot;en&quot;&gt;Hello&lt;/p&gt;,#  &lt;p lang=&quot;en-us&quot;&gt;Howdy, y&#x27;all&lt;/p&gt;,#  &lt;p lang=&quot;en-gb&quot;&gt;Pip-pip, old fruit&lt;/p&gt;]</span><br></pre></td></tr></table></figure><p>返回查找到的元素的第一个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.select_one(&quot;.sister&quot;)# &lt;a class=&quot;sister&quot; href=&quot;http://example.com/elsie&quot; id=&quot;link1&quot;&gt;Elsie&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>对于熟悉CSS选择器语法的人来说这是个非常方便的方法.Beautiful Soup也支持CSS选择器API, 如果你仅仅需要CSS选择器的功能,那么直接使用 <code>lxml</code> 也可以, 而且速度更快,支持更多的CSS选择器语法,但Beautiful Soup整合了CSS选择器的语法和自身方便使用API.</p><h2 id="xpath"><a href="#xpath" class="headerlink" title="xpath"></a>xpath</h2><p><a href="https://www.w3school.com.cn/xpath/index.asp">https://www.w3school.com.cn/xpath/index.asp</a></p><p>常用规则：</p><table><thead><tr><th align="left">表达式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">nodename</td><td align="left">选取此节点的所有子节点</td></tr><tr><td align="left">/</td><td align="left">从当前节点选区直接子节点</td></tr><tr><td align="left">//</td><td align="left">从当前节点选取子孙节点</td></tr><tr><td align="left">.</td><td align="left">选取当前节点</td></tr><tr><td align="left">..</td><td align="left">选取当前节点的父节点</td></tr><tr><td align="left">@</td><td align="left">选取属性</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etreetext = <span class="string">&#x27;&#x27;&#x27;&lt;div&gt;&lt;ul&gt;&lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link1.html&quot;&gt;first item&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;item-inactive&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;third item&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/ul&gt;&lt;/div&gt;&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="re正则表达式"><a href="#re正则表达式" class="headerlink" title="re正则表达式"></a><strong>re正则表达式</strong></h2><p><a href="https://www.cnblogs.com/chengege/p/11190782.html">https://www.cnblogs.com/chengege/p/11190782.html</a></p><p><strong>(匹配单个字符)</strong></p><ol><li>. 匹配任意字符(不包括换行符)</li><li>\d 任意数字==[0-9]</li><li>\D 任意非数字==[^0-9]</li><li>\s 空白字符</li><li>\w 单词字符和下划线 ==[ 0-9a-zA-Z_] </li><li>\W 与 \w相反</li><li>[] 组合方式，匹配中括号里面的字符</li></ol><p><strong>(匹配多个字符)</strong></p><ol><li>* 任意多个字符</li><li>+ 匹配一个以上的字符</li><li>？0或1个</li><li>{m}匹配m个</li><li>{m,n} m~n个</li></ol><p>（特殊符号）</p><hr><ol><li>^ 脱字符：表示以……开始</li><li>$ 以……结束</li><li>|匹配多个表达式或字符</li><li>贪婪模式和非贪婪模式</li></ol><p><strong>（常用函数）</strong></p><ol><li>match从头开始</li><li>search任意位置开始</li><li>分组group groups</li><li>findall 全部查找出来( re.DOTALL 可以匹配所以字符包括换行符)</li><li>sub用来替换字符串</li><li>split分割</li><li>compile编译(re.VERBOSE可以注释)</li></ol><p>爬古诗文网（案例）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> reimport requestsdef parse_page(url):    headers = &#123;        <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36&quot;</span>    &#125;    r=requests.get(url,headers=headers)    <span class="comment"># print(r.text)    text=r.text    titles=re.findall(r&#x27;&lt;div class=&quot;cont&quot;&gt;.*?&lt;b&gt;(.*?)&lt;/b&gt;&#x27;,text,re.DOTALL)#re.DOTALL    # print(titles)    dynasties=re.findall(r&#x27;&lt;p class=&quot;source&quot;&gt;.*?&lt;a.*?&gt;(.*?)&lt;/a&gt;&#x27;,text,re.DOTALL)    # print(dynasties)    authors=re.findall(r&#x27;&lt;p class=&quot;source&quot;&gt;.*?&lt;a.*?&gt;.*?&lt;a.*?&gt;(.*?)&lt;/a&gt;&#x27;,text,re.DOTALL)    # print(authors)    contents_tags=re.findall(r&#x27;&lt;div class=&quot;contson&quot; .*?&gt;(.*?)&lt;/div&gt;&#x27;,text,re.DOTALL)    contents=[]    for content in contents_tags:#第一句在div里，剩余的在&lt;p&gt;标签下        x=re.sub(r&#x27;&lt;.*?&gt;&#x27;,&quot;&quot;,content)        contents.append(x.strip()) #去空格创建一个诗歌内容的表格    poems = [] #解包后所有内容都在这里    for value in zip(titles,dynasties,authors,contents):        title,dynasty,author,content=value #解包        poem=&#123;            &#x27;title&#x27;:title,            &#x27;dynasty&#x27;:dynasty,            &#x27;author&#x27;:author,            &#x27;poem&#x27;:content        &#125;        poems.append(poem)    for poem in poems:        print(poem)        print(&#x27;-&#x27;*20)def mian():    # url=&#x27;https://www.gushiwen.org/default_1.aspx&#x27;    for x in range(1,11):        url=&#x27;https://www.gushiwen.org/default_%s.aspx&#x27; % x        parse_page(url)if __name__ == &#x27;__main__&#x27;:    mian()</span></span><br></pre></td></tr></table></figure><h2 id="css-selector"><a href="#css-selector" class="headerlink" title="css selector"></a>css selector</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors">CSS 选择器 - CSS（层叠样式表） | MDN (mozilla.org)</a></p><h2 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E5%9F%BA%E6%9C%AC%E9%80%89%E6%8B%A9%E5%99%A8">基本选择器</a></h2><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Universal_selectors">通用选择器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Universal_selectors">Universal selector</a>）</p><p>选择所有元素。（可选）可以将其限制为特定的名称空间或所有名称空间。 <strong>语法：</strong><code>*</code> <code>ns|*</code> <code>*|*</code> <strong>例子：</strong><code>*</code> 将匹配文档的所有元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Type_selectors">元素选择器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Type_selectors">Type selector</a>）</p><p>按照给定的节点名称，选择所有匹配的元素。 <strong>语法：</strong><code>elementname</code> <strong>例子：</strong><code>input</code> 匹配任何 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input">``</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Class_selectors">类选择器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Class_selectors">Class selector</a>）</p><p>按照给定的 <code>class</code> 属性的值，选择所有匹配的元素。 <strong>语法</strong>：<code>.classname</code> <strong>例子</strong>：<code>.index</code> 匹配任何 <code>class</code> 属性中含有 “index” 类的元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/ID_selectors">ID 选择器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/ID_selectors">ID selector</a>）</p><p>按照 <code>id</code> 属性选择一个与之匹配的元素。需要注意的是，一个文档中，每个 ID 属性都应当是唯一的。 <strong>语法：</strong><code>#idname</code> <strong>例子：</strong><code>#toc</code> 匹配 ID 为 “toc” 的元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Attribute_selectors">属性选择器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Attribute_selectors">Attribute selector</a>）</p><p>按照给定的属性，选择所有匹配的元素。 <strong>语法：</strong><code>[attr]</code> <code>[attr=value]</code> <code>[attr~=value]</code> <code>[attr|=value]</code> <code>[attr^=value]</code> <code>[attr$=value]</code> <code>[attr*=value]</code> <strong>例子：</strong><code>[autoplay]</code> 选择所有具有 <code>autoplay</code> 属性的元素（不论这个属性的值是什么）。</p></li></ul><h2 id="分组选择器（Grouping-selectors）"><a href="#分组选择器（Grouping-selectors）" class="headerlink" title="分组选择器（Grouping selectors）"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E5%88%86%E7%BB%84%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%88grouping_selectors%EF%BC%89">分组选择器（Grouping selectors）</a></h2><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Selector_list">选择器列表</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Selector_list">Selector list</a>）<code>,</code> 是将不同的选择器组合在一起的方法，它选择所有能被列表中的任意一个选择器选中的节点。 <strong>语法</strong>：<code>A, B</code> <strong>示例</strong>：<code>div, span</code> 会同时匹配 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span">``</a> 元素和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div">``</a> 元素和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div">``</a> 元素和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div">``</a> 元素。</li></ul><h2 id="组合器（Combinators）"><a href="#组合器（Combinators）" class="headerlink" title="组合器（Combinators）"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E7%BB%84%E5%90%88%E5%99%A8%EF%BC%88combinators%EF%BC%89">组合器（Combinators）</a></h2><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Descendant_combinator">后代组合器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Descendant_combinator">Descendant combinator</a>）</p><p><code> </code>（空格）组合器选择前一个元素的后代节点。 <strong>语法：</strong><code>A B</code> <strong>例子：</strong><code>div span</code> 匹配所有位于任意 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div">``</a> 元素之内的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span">``</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Child_combinator">直接子代组合器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Child_combinator">Child combinator</a>）</p><p><code>&gt;</code> 组合器选择前一个元素的直接子代的节点。 <strong>语法</strong>：<code>A &gt; B</code> <strong>例子</strong>：<code>ul &gt; li</code> 匹配直接嵌套在 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul">``</a> 元素内的所有 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/li">``</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/General_sibling_combinator">一般兄弟组合器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/General_sibling_combinator">General sibling combinator</a>）</p><p><code>~</code> 组合器选择兄弟元素，也就是说，后一个节点在前一个节点后面的任意位置，并且共享同一个父节点。 <strong>语法</strong>：<code>A ~ B</code> <strong>例子</strong>：<code>p ~ span</code> 匹配同一父元素下，<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/p">``</a> 元素后的所有 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span">``</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Adjacent_sibling_combinator">紧邻兄弟组合器</a>（<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Adjacent_sibling_combinator">Adjacent sibling combinator</a>）</p><p><code>+</code> 组合器选择相邻元素，即后一个元素紧跟在前一个之后，并且共享同一个父节点。 <strong>语法：</strong><code>A + B</code> <strong>例子：</strong><code>h2 + p</code> 会匹配所有紧邻在 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements"> (en-US)</a> 元素后的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/p">``</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Column_combinator">列组合器</a>（<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Column_combinator">Column combinator</a>）</p><p><code>||</code> 组合器选择属于某个表格行的节点。 <strong>语法：</strong> <code>A || B</code> <strong>例子：</strong> <code>col || td</code> 会匹配所有 作用域内的 `](<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/td">https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/td</a>) 元素。</p></li></ul><h2 id="伪选择器（Pseudo）"><a href="#伪选择器（Pseudo）" class="headerlink" title="伪选择器（Pseudo）"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E4%BC%AA%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%88pseudo%EF%BC%89">伪选择器（Pseudo）</a></h2><p><img src="https://i.loli.net/2021/11/15/AUELXF9jqxVyaDC.png" alt="image-20210822195103270"></p><p>#contentEl &gt; div.unreach.w-full &gt; p:nth-child(11)</p><p>#app &gt; div.w-full.h-full.flex.relative &gt; div.flex-none.bg-white.flex.flex-col.transition-all &gt; div.relative &gt; div &gt; span</p><hr><h2 id="Selenium"><a href="#Selenium" class="headerlink" title="Selenium"></a>Selenium</h2><p><a href="https://www.selenium.dev/documentation/zh-cn/getting_started/%EF%BC%88%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3%EF%BC%89">https://www.selenium.dev/documentation/zh-cn/getting_started/（中文文档）</a></p><p><a href="https://python-selenium-zh.readthedocs.io/zh_CN/latest/">selenium-python中文文档 (python-selenium-zh.readthedocs.io)</a></p><p>配置：</p><p>下载相应的webdriver（chromedriver\geckodriver…)放到python根目录下</p><p>功能：</p><ul><li>框架底层使用JavaScript模拟真实用户对浏览器进行操作。测试脚本执行时，浏览器自动按照脚本代码做出点击，输入，打开，验证等操作，就像真实用户所做的一样，从终端用户的角度测试应用程序。</li><li>使浏览器兼容性测试自动化成为可能，尽管在不同的浏览器上依然有细微的差别。</li><li>使用简单，可使用Java，Python等多种语言编写用例脚本。</li></ul><p>使用：</p><h3 id="1-关闭页面"><a href="#1-关闭页面" class="headerlink" title="1.关闭页面"></a>1.关闭页面</h3><p>driver.close()</p><p>#关闭当前页面，如果只有一个页面，会关闭浏览器</p><p>driver.quit()</p><p>#关闭浏览器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> timefrom selenium <span class="keyword">import</span> webdriverdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>driver=webdriver.Firefox(executable_path=drive_path)driver.get(<span class="string">&quot;https://www.baidu.com&quot;</span>)time.sleep(<span class="number">3</span>)driver.close()<span class="comment">#当前选项卡#driver.quit()#退出浏览器</span></span><br></pre></td></tr></table></figure><h3 id="2-定位UI元素-WebElements"><a href="#2-定位UI元素-WebElements" class="headerlink" title="2.定位UI元素 (WebElements)"></a>2.定位UI元素 (WebElements)</h3><p>关于元素的选取，有如下的API 单个元素选取:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find_element_by_idfind_elements_by_namefind_elements_by_xpathfind_elements_by_link_textfind_elements_by_partial_link_textfind_elements_by_tag_namefind_elements_by_class_namefind_elements_by_css_selector</span><br></pre></td></tr></table></figure><p>​    （find_element….获取第一个、find_elements….获取全部）</p><p>1.操作输入框</p><p>下面这个例子会自动打开火狐并在<u>输入框</u>内输入test：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>driver=webdriver.Firefox(executable_path=drive_path)driver.get(<span class="string">&quot;https://cn.bing.com/&quot;</span>)<span class="comment">#print(driver.page_source)  #driver.page_source获取源代码input_tag=driver.find_element_by_id(&#x27;sb_form_q&#x27;) # input_tag=driver.find_element_by_class_name(&#x27;b_searchbox&#x27;)#input_tag=driver.find_element_by_xpath(&quot;//input[@id=&#x27;sb_form_q&#x27;]&quot;)input_tag.send_keys(&#x27;test&#x27;)</span></span><br></pre></td></tr></table></figure><p>也可以用(不好用)：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br></pre></td></tr></table></figure><p>2.操作checkbox</p><p>在上面代码的基础上可以自动点击搜索按钮button</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>driver=webdriver.Firefox(executable_path=drive_path)driver.get(<span class="string">&quot;https://www.baidu.com/index.php?tn=monline_3_dg&quot;</span>)input_tag=driver.find_element_by_id(<span class="string">&#x27;kw&#x27;</span>)input_tag.send_keys(<span class="string">&#x27;test&#x27;</span>)rememberBtn=driver.find_element_by_id(<span class="string">&quot;su&quot;</span>).click()</span><br></pre></td></tr></table></figure><p>3.select</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;select <span class="built_in">id</span>=<span class="string">&quot;status&quot;</span> <span class="class"><span class="keyword">class</span>=&quot;<span class="title">form</span>-<span class="title">control</span> <span class="title">valid</span>&quot; <span class="title">onchange</span>=&quot;&quot; <span class="title">name</span>=&quot;<span class="title">status</span>&quot;&gt;    &lt;<span class="title">option</span> <span class="title">value</span>=&quot;&quot;&gt;&lt;/<span class="title">option</span>&gt;    &lt;<span class="title">option</span> <span class="title">value</span>=&quot;0&quot;&gt;未审核&lt;/<span class="title">option</span>&gt;    &lt;<span class="title">option</span> <span class="title">value</span>=&quot;1&quot;&gt;初审通过&lt;/<span class="title">option</span>&gt;    &lt;<span class="title">option</span> <span class="title">value</span>=&quot;2&quot;&gt;复审通过&lt;/<span class="title">option</span>&gt;    &lt;<span class="title">option</span> <span class="title">value</span>=&quot;3&quot;&gt;审核不通过&lt;/<span class="title">option</span>&gt;&lt;/<span class="title">select</span>&gt;# 导入 <span class="title">Select</span> 类<span class="title">from</span> <span class="title">selenium</span>.<span class="title">webdriver</span>.<span class="title">support</span>.<span class="title">ui</span> <span class="title">import</span> <span class="title">Select</span># 找到 <span class="title">name</span> 的选项卡<span class="title">select</span> = <span class="title">Select</span>(<span class="params">driver.find_element_by_name(<span class="params"><span class="string">&#x27;status&#x27;</span></span>)</span>)# <span class="title">select</span>.<span class="title">select_by_index</span>(<span class="params"><span class="number">1</span></span>)<span class="title">select</span>.<span class="title">select_by_value</span>(<span class="params"><span class="string">&quot;0&quot;</span></span>)<span class="title">select</span>.<span class="title">select_by_visible_text</span>(<span class="params"><span class="string">u&quot;未审核&quot;</span></span>)</span></span><br></pre></td></tr></table></figure><h3 id="3-鼠标动作链"><a href="#3-鼠标动作链" class="headerlink" title="3.鼠标动作链"></a>3.鼠标动作链</h3><p>有些时候，我们需要再页面上模拟一些鼠标操作，比如双击、右击、拖拽甚至按住不动等，我们可以通过导入 ActionChains 类来做到：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverfrom selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChainsdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>driver=webdriver.Firefox(executable_path=drive_path)driver.get(<span class="string">&quot;https://www.baidu.com/?tn=monline_3_dg&quot;</span>)actions=ActionChains(driver)<span class="comment">#把driver传入ActionChains类input_tag=driver.find_element_by_id(&#x27;kw&#x27;)check_tag=driver.find_element_by_id(&#x27;su&#x27;)actions.send_keys_to_element(input_tag,&#x27;腾讯新闻&#x27;)actions.move_to_element(check_tag).click()actions.perform() #执行上面的行为链</span></span><br></pre></td></tr></table></figure><h3 id="4-获取cookies信息"><a href="#4-获取cookies信息" class="headerlink" title="4.获取cookies信息"></a>4.获取cookies信息</h3><p>（1）获取所有的cookies</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> cookies <span class="keyword">in</span> driver.get_cookies():    <span class="built_in">print</span>(cookies)</span><br></pre></td></tr></table></figure><p>（2）根据key获取对应的value</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">value=driver.get_cookie(key)</span><br></pre></td></tr></table></figure><p>（3）删除cookies信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.delete_all_cookies()<span class="comment">#所有的driver.delete_cookie(key) #key对应的</span></span><br></pre></td></tr></table></figure><h3 id="5-页面等待"><a href="#5-页面等待" class="headerlink" title="5.页面等待"></a>5.页面等待</h3><p>现在的网页越来越多采用了 Ajax 技术，这样程序便不能确定何时某个元素完全加载出来了。如果实际页面等待时间过长导致某个dom元素还没出来，但是你的代码直接使用了这个WebElement，那么就会抛出NullPointer的异常。</p><p>为了避免这种元素定位困难而且会提高产生 ElementNotVisibleException 的概率。所以 Selenium 提供了两种等待方式，一种是隐式等待，一种是显式等待。</p><p>隐式等待是等待特定的时间，显式等待是指定某一条件直到这个条件成立时继续执行。</p><h4 id="显式等待"><a href="#显式等待" class="headerlink" title="显式等待"></a>显式等待</h4><p>显式等待指定某个条件，然后设置最长等待时间。如果在这个时间还没有找到元素，那么便会抛出异常了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverfrom selenium.webdriver.common.by <span class="keyword">import</span> By<span class="comment"># WebDriverWait 库，负责循环等待from selenium.webdriver.support.ui import WebDriverWait# expected_conditions 类，负责条件出发from selenium.webdriver.support import expected_conditions as ECdrive_path=r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;driver=webdriver.Firefox(executable_path=drive_path)driver.get(&quot;https://www.selenium.dev/&quot;)# driver.implicitly_wait(10)#等待时间try:    # 页面一直循环，直到 id=&quot;myDynamicElement&quot; 出现    element = WebDriverWait(driver, 10).until(        EC.presence_of_element_located((By.ID, &quot;myDynamicElement&quot;))    )finally:    driver.quit()</span></span><br></pre></td></tr></table></figure><p>如果不写参数，程序默认会 0.5s 调用一次来查看元素是否已经生成，如果本来元素就是存在的，那么会立即返回。</p><p>下面是一些内置的等待条件，你可以直接调用这些条件，而不用自己写某些等待条件了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title_istitle_containspresence_of_element_locatedvisibility_of_element_locatedvisibility_ofpresence_of_all_elements_locatedtext_to_be_present_in_elementtext_to_be_present_in_element_valueframe_to_be_available_and_switch_to_itinvisibility_of_element_locatedelement_to_be_clickable – it <span class="keyword">is</span> Displayed <span class="keyword">and</span> Enabled.staleness_ofelement_to_be_selectedelement_located_to_be_selectedelement_selection_state_to_beelement_located_selection_state_to_bealert_is_present</span><br></pre></td></tr></table></figure><h4 id="隐式等待"><a href="#隐式等待" class="headerlink" title="隐式等待"></a>隐式等待</h4><p>隐式等待比较简单，就是简单地设置一个等待时间，单位为秒。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverdriver = webdriver.Chrome()driver.implicitly_wait(<span class="number">10</span>) <span class="comment"># secondsdriver.get(&quot;http://www.xxxxx.com/loading&quot;)myDynamicElement = driver.find_element_by_id(&quot;myDynamicElement&quot;)</span></span><br></pre></td></tr></table></figure><p>当然如果不设置，默认等待时间为0。</p><h3 id="6-页面切换"><a href="#6-页面切换" class="headerlink" title="6.页面切换"></a>6.页面切换</h3><p>一个浏览器肯定会有很多窗口，所以我们肯定要有方法来实现窗口的切换。切换窗口的方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.switch_to.window(<span class="string">&quot;this is window name&quot;</span>)</span><br></pre></td></tr></table></figure><p>也可以使用 window_handles 方法来获取每个窗口的操作对象。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> handle <span class="keyword">in</span> driver.window_handles:    driver.switch_to_window(handle)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>driver=webdriver.Firefox(executable_path=drive_path)driver.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)driver.execute_script(<span class="string">&quot;window.open(&#x27;https://www.douban.com/&#x27;)&quot;</span>)<span class="comment">#打开新的窗口driver.switch_to.window(driver.window_handles[0])#返回第一个窗口print(driver.current_url)</span></span><br></pre></td></tr></table></figure><h3 id="7-页面前进和后退"><a href="#7-页面前进和后退" class="headerlink" title="7.页面前进和后退"></a>7.页面前进和后退</h3><p>操作页面的前进和后退功能：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">driver.forward()     <span class="comment">#前进driver.back()        # 后退</span></span><br></pre></td></tr></table></figure><h3 id="8-弹窗处理"><a href="#8-弹窗处理" class="headerlink" title="8.弹窗处理"></a>8.弹窗处理</h3><p>当你触发了某个事件之后，页面出现了弹窗提示，处理这个提示或者获取提示信息方法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert = driver.switch_to_alert()</span><br></pre></td></tr></table></figure><h3 id="9-代理"><a href="#9-代理" class="headerlink" title="9.代理"></a>9.代理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriverdrive_path=<span class="string">r&#x27;C:\Users\Lenovo\AppData\Local\Programs\Python\Python38\geckodriver.exe&#x27;</span>options=webdriver.FirefoxOptions()options.add_argument(<span class="string">&quot;--proxy--sever=http://36.248.133.189:9999&quot;</span>)driver=webdriver.Firefox(executable_path=drive_path,options=options)driver.get(<span class="string">&quot;https://httpbin.org/ip&quot;</span>) <span class="comment">#httpbin</span></span><br></pre></td></tr></table></figure><h3 id="10-options"><a href="#10-options" class="headerlink" title="10.options"></a>10.options</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">–user-data-dir=”[PATH]” 指定用户文件夹User Data路径，可以把书签这样的用户数据保存在系统分区以外的分区。–disk-cache-dir=”[PATH]“ 指定缓存Cache路径–disk-cache-size= 指定Cache大小，单位Byte–first run 重置到初始状态，第一次运行–incognito 隐身模式启动–disable-javascript 禁用Javascript–omnibox-popup-count=”num” 将地址栏弹出的提示菜单数量改为num个。我都改为15个了。–user-agent=”xxxxxxxx” 修改HTTP请求头部的Agent字符串，可以通过about:version页面查看修改效果–disable-plugins 禁止加载所有插件，可以增加速度。可以通过about:plugins页面查看效果–disable-javascript 禁用JavaScript，如果觉得速度慢在加上这个–disable-java 禁用java–start-maximized 启动就最大化–no-sandbox 取消沙盒模式–single-process 单进程运行–process-per-tab 每个标签使用单独进程–process-per-site 每个站点使用单独进程–in-process-plugins 插件不启用单独进程–disable-popup-blocking 禁用弹出拦截–disable-plugins 禁用插件–disable-images 禁用图像–incognito 启动进入隐身模式–enable-udd-profiles 启用账户切换菜单–proxy-pac-url 使用pac代理 [via 1/2]–lang=zh-CN 设置语言为简体中文–disk-cache-dir 自定义缓存目录–disk-cache-size 自定义缓存最大值（单位byte）–media-cache-size 自定义多媒体缓存最大值（单位byte）–bookmark-menu 在工具 栏增加一个书签按钮–enable-sync 启用书签同步–single-process 单进程运行Google Chrome–start-maximized 启动Google Chrome就最大化–disable-java 禁止Java–no-sandbox 非沙盒模式运行</span><br></pre></td></tr></table></figure><h1 id="词云"><a href="#词云" class="headerlink" title="词云"></a>词云</h1><h2 id="1-stylecloud"><a href="#1-stylecloud" class="headerlink" title="1.stylecloud"></a>1.stylecloud</h2><p><a href="https://blog.csdn.net/weixin_38008864/article/details/107194187">(16条消息) stylecloud:简洁易用的词云库_大邓和他的Python-CSDN博客</a></p><p>1.stylecloud参数介绍</p><p>file_path：CSV的文件路径,需要注意的是csv文件格式为两列(word, freq)</p><p>size：词云图尺寸[默认值:512]</p><p>custom_stopwords：自定义停用词列表</p><p>output_name：输出的词云图路径</p><p>font_path：字体路径</p><p>icon_name：图标名（fas fa-iconname）只需要改iconname,[默认值: fas fa-flag]</p><p>palette：调色板（通过 palettable 实现）[默认值:cartocolors.qualitative.Bold_6]</p><p>background_color：词云图背景色[默认值:white]</p><p>max_font_size：词云图最大字号[默认值:200]</p><p>random_state：控制单词和颜色的随机状态,如不设置，每次运行的效果会发生变化</p><p><strong>图形设置</strong></p><p>icon_name参数的模板【fas fa-iconname】只需要改动iconname即可。</p><p>iconname并不是随便起的，必须能在<a href="https://fontawesome.com/license/free">https://fontawesome.com/license/free</a> 搜到才可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> stylecloud</span><br><span class="line">stopwords = <span class="built_in">open</span>(<span class="string">&#x27;data/stopwords.txt&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>).read().split(<span class="string">&#x27;\n&#x27;</span>) </span><br><span class="line">stylecloud.gen_stylecloud(file_path=<span class="string">&#x27;data/高考.csv&#x27;</span>,font_path=<span class="string">&#x27;data/SourceHanSansCN-Regular.otf&#x27;</span>,output_name=<span class="string">&#x27;output/高考2.png&#x27;</span>,icon_name=<span class="string">&#x27;fas fa-user-graduate&#x27;</span>,size=<span class="number">500</span>,custom_stopwords=stopwords)</span><br></pre></td></tr></table></figure><h2 id="2-wordcloud"><a href="#2-wordcloud" class="headerlink" title="2.wordcloud"></a>2.wordcloud</h2><p>whl：<a href="https://pypi.org/project/wordcloud/#files">wordcloud · PyPI</a></p><p><a href="https://blog.csdn.net/skylibiao/article/details/89702746">(28条消息) wordcloud使用教程_一条coding-CSDN博客_wordcloud</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud, ImageColorGenerator, STOPWORDS</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">wordyun</span>():</span></span><br><span class="line"> <span class="comment">#导入背景图   </span></span><br><span class="line">backgrim=np.array(Image.<span class="built_in">open</span>(<span class="string">&quot;C:\\Users\SAMSUNG\PycharmProjects\practice0829\qqzon\\bg.jpg&quot;</span>))</span><br><span class="line"> <span class="comment">#导入文本文件   text=open(&quot;C:\\Users\SAMSUNG\PycharmProjects\practice0829\qqzon\\1154540719worldcloud.txt&quot;,encoding=&#x27;utf-8&#x27;).read()</span></span><br><span class="line">    <span class="comment">#jieba分词</span></span><br><span class="line">    wordlist = jieba.cut(text, cut_all=<span class="literal">True</span>)</span><br><span class="line">    wl = <span class="string">&quot; &quot;</span>.join(wordlist)</span><br><span class="line"><span class="comment">#设置参数</span></span><br><span class="line">    wordcloud=WordCloud(</span><br><span class="line">        background_color=<span class="string">&#x27;white&#x27;</span>,  <span class="comment">#背景颜色</span></span><br><span class="line">        mask=backgrim ,   <span class="comment">#背景图片</span></span><br><span class="line">        max_words = <span class="number">300</span>,  <span class="comment"># 设置最多现实的词数</span></span><br><span class="line">        stopwords=STOPWORDS,  <span class="comment"># 设置停用词</span></span><br><span class="line">        max_font_size=<span class="number">200</span>,    <span class="comment"># 设置字体最大值</span></span><br><span class="line">        font_path=<span class="string">&#x27;C:/Users/Windows/fonts/STXINGKA.TTF&#x27;</span>,<span class="comment">#设置字体，路径在电脑内</span></span><br><span class="line">        width=<span class="number">1600</span>,</span><br><span class="line">        height=<span class="number">1000</span>,</span><br><span class="line">        random_state=<span class="number">30</span>,  <span class="comment"># 设置有多少种随机生成状态，即有多少种配色方案</span></span><br><span class="line">        <span class="comment"># scale=.5</span></span><br><span class="line">    ).generate(text)</span><br><span class="line"><span class="comment">#改变字体颜色</span></span><br><span class="line">    image_colors = ImageColorGenerator(backgrim)</span><br><span class="line"><span class="comment">#展示词云</span></span><br><span class="line">    plt.imshow(wordcloud)</span><br><span class="line"><span class="comment">#是否显示想x，y坐标</span></span><br><span class="line">    plt.axis(<span class="string">&quot;off&quot;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line"><span class="comment">#写入文件</span></span><br><span class="line">    wordcloud.to_file(<span class="string">&#x27;py_book1.png&#x27;</span>)  <span class="comment"># 把词云保存下</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wordyun()</span><br></pre></td></tr></table></figure><p>相关参数</p><p>font_path : string //字体路径，需要展现什么字体就把该字体路径+后缀名写上，如：font_path = ‘黑体.ttf’</p><p>width : int (default=400) //输出的画布宽度，默认为400像素</p><p>height : int (default=200) //输出的画布高度，默认为200像素</p><p>prefer_horizontal : float (default=0.90) //词语水平方向排版出现的频率，默认 0.9 （所以词语垂直方向排版出现频率为 0.1 ）</p><p>mask : nd-array or None (default=None) //如果参数为空，则使用二维遮罩绘制词云。如果 mask 非空，设置的宽高值将被忽略，遮罩形状被 mask 取代。除全白（#FFFFFF）的部分将不会绘制，其余部分会用于绘制词云。如：bg_pic = imread(‘读取一张图片.png’)，背景图片的画布一定要设置为白色（#FFFFFF），然后显示的形状为不是白色的其他颜色。可以用ps工具将自己要显示的形状复制到一个纯白色的画布上再保存，就ok了。</p><p>scale : float (default=1) //按照比例进行放大画布，如设置为1.5，则长和宽都是原来画布的1.5倍。</p><p>min_font_size : int (default=4) //显示的最小的字体大小</p><p>font_step : int (default=1) //字体步长，如果步长大于1，会加快运算但是可能导致结果出现较大的误差。</p><p>max_words : number (default=200) //要显示的词的最大个数</p><p>stopwords : set of strings or None //设置需要屏蔽的词，如果为空，则使用内置的STOPWORDS</p><p>background_color : color value (default=”black”) //背景颜色，如background_color=’white’,背景颜色为白色。</p><p>max_font_size : int or None (default=None) //显示的最大的字体大小</p><p>mode : string (default=”RGB”) //当参数为“RGBA”并且background_color不为空时，背景为透明。</p><p>relative_scaling : float (default=.5) //词频和字体大小的关联性</p><p>color_func : callable, default=None //生成新颜色的函数，如果为空，则使用 self.color_func</p><p>regexp : string or None (optional) //使用正则表达式分隔输入的文本</p><p>collocations : bool, default=True //是否包括两个词的搭配</p><p>colormap : string or matplotlib colormap, default=”viridis” //给每个单词随机分配颜色，若指定color_func，则忽略该方法。</p><p>fit_words(frequencies)  //根据词频生成词云<br>generate(text)  //根据文本生成词云<br>generate_from_frequencies(frequencies[, …])   //根据词频生成词云<br>generate_from_text(text)    //根据文本生成词云<br>process_text(text)  //将长文本分词并去除屏蔽词（此处指英语，中文分词还是需要自己用别的库先行实现，使用上面的 fit_words(frequencies) ）<br>recolor([random_state, color_func, colormap])   //对现有输出重新着色。重新上色会比重新生成整个词云快很多。<br>to_array()  //转化为 numpy array<br>to_file(filename)   //输出到文件</p><h1 id="python内置模块"><a href="#python内置模块" class="headerlink" title="python内置模块"></a>python内置模块</h1><h2 id="collections"><a href="#collections" class="headerlink" title="collections"></a>collections</h2><p>Counter</p><p><code>Counter</code>是一个简单的计数器，例如，统计字符出现的个数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counterls=[<span class="string">&#x27;programming&#x27;</span>]       <span class="comment"># Counter(&#123;&#x27;programming&#x27;: 1&#125;)st=&#x27;programming&#x27;         #Counter(&#123;&#x27;r&#x27;: 2, &#x27;g&#x27;: 2, &#x27;m&#x27;: 2, &#x27;p&#x27;: 1, &#x27;o&#x27;: 1, &#x27;a&#x27;: 1, &#x27;i&#x27;: 1, &#x27;n&#x27;: 1&#125;)c=Counter(st)#lsprint(c)</span></span><br></pre></td></tr></table></figure><p><code>Counter</code>实际上也是<code>dict</code>的一个子类，上面的结果可以看出每个字符出现的次数。</p><h2 id="pyperclip"><a href="#pyperclip" class="headerlink" title="pyperclip"></a>pyperclip</h2><p>复制到粘贴板</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyperclip</span><br><span class="line">number=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">    number=number+<span class="built_in">str</span>(i)+<span class="string">&quot;\n&quot;</span></span><br><span class="line">pyperclip.copy(number)</span><br></pre></td></tr></table></figure><h2 id="random库"><a href="#random库" class="headerlink" title="random库"></a>random库</h2><p>1.random.random()</p><p> #用于生成一个0到1的</p><p>随机浮点数：0&lt;= n &lt; 1.0</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import random  </span><br><span class="line">a = random.random()</span><br><span class="line">print (a)  </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/OfzFaegt8Qp1cRd.png" alt="img"></p><p>2.random.uniform(a,b) </p><p>#用于生成一个指定范围内的随机符点数，两个参数其中一个是上限，一个是下限。如果a &gt; b，则生成的随机数n: b &lt;= n &lt;= a。如果 a &lt;b， 则 a &lt;= n &lt;= b。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">import random  </span><br><span class="line">print(random.uniform(1,10))  </span><br><span class="line">print(random.uniform(10,1)) </span><br></pre></td></tr></table></figure><p> <img src="https://i.loli.net/2021/11/30/qkHOTPBDVGznbZ7.png" alt="img"></p><p>3.random.randint(a, b)</p><p> #用于生成一个指定范围内的整数。其中参数a是下限，参数b是上限，生成的随机数n: a &lt;= n &lt;= b</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import random  </span><br><span class="line">print(random.randint(1,10))  </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/dlcDLBE8uxZJhPr.png" alt="img"></p><p>4.random.randrange([start], stop[, step])</p><p> #从指定范围内，按指定基数递增的集合中 获取一个随机数。</p><p>random.randrange(10, 30, 2)，结果相当于从[10, 12, 14, 16, … 26, 28]序列中获取一个随机数。</p><p>random.randrange(10, 30, 2)在结果上与 random.choice(range(10, 30, 2) 等效。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import random  </span><br><span class="line">print(random.randrange(10,30,2)) </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/mu7xOIbPtNvH3MK.png" alt="img"></p><p>5.random.choice(sequence)</p><p>#random.choice从序列中获取一个随机元素。其函数原型为：random.choice(sequence)。</p><p>参数sequence表示一个有序类型。这里要说明 一下：sequence在python不是一种特定的类型，而是泛指一系列的类型。list, tuple, 字符串都属于sequence。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(random.choice(str1))  </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/7KETdH5ewUzRqGm.png" alt="img"></p><p>6.random.shuffle(x[, random])</p><p>#用于将一个列表中的元素打乱,即将列表内的元素随机排列。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line">p = [&#x27;A&#x27; , &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;, &#x27;E&#x27; ]</span><br><span class="line">random.shuffle(p)  </span><br><span class="line">print (p)  </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/Z4foLGdSeu7VbgO.png" alt="img"></p><p>7.random.sample(sequence, k)</p><p>#从指定序列中随机获取指定长度的片断并随机排列。注意：sample函数不会修改原有序列。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 import random   </span><br><span class="line">2 lst = [1,2,3,4,5]  </span><br><span class="line">3 print(random.sample(lst,4))  </span><br><span class="line">4 print(lst) </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/30/S7lFPTLKpcnOe2y.png" alt="img"></p><h2 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h2><p><a href="https://www.runoob.com/python3/python3-func-filter.html">Python3 filter() 函数 | 菜鸟教程 (runoob.com)</a> </p><p><strong>filter()</strong> 函数用于过滤序列，过滤掉不符合条件的元素，返回一个迭代器对象，如果要转换为列表，可以使用 <strong>list()</strong> 来转换。该接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判断，然后返回 True 或 False，最后将返回 True 的元素放到新列表中。     </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">is_odd</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">return</span> n % <span class="number">2</span> == <span class="number">1</span></span><br><span class="line"></span><br><span class="line">tmplist = <span class="built_in">filter</span>(is_odd, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>])</span><br><span class="line">newlist = <span class="built_in">list</span>(tmplist)</span><br><span class="line"><span class="built_in">print</span>(newlist)</span><br></pre></td></tr></table></figure><h2 id="time和datetime"><a href="#time和datetime" class="headerlink" title="time和datetime"></a>time和datetime</h2><p>Time 模块包含了以下内置函数，既有时间处理的，也有转换时间格式的：</p><table><thead><tr><th align="left">序号</th><th align="left">函数及描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python/att-time-altzone.html">time.altzone</a> 返回格林威治西部的夏令时地区的偏移秒数。如果该地区在格林威治东部会返回负值（如西欧，包括英国）。对夏令时启用地区才能使用。</td></tr><tr><td align="left">2</td><td align="left">[time.asctime(<a href="https://www.runoob.com/python/att-time-asctime.html">tupletime])</a> 接受时间元组并返回一个可读的形式为”Tue Dec 11 18:07:14 2008”（2008年12月11日 周二18时07分14秒）的24个字符的字符串。</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python/att-time-clock.html">time.clock( )</a> 用以浮点数计算的秒数返回当前的CPU时间。用来衡量不同程序的耗时，比time.time()更有用。</td></tr><tr><td align="left">4</td><td align="left">[time.ctime(<a href="https://www.runoob.com/python/att-time-ctime.html">secs])</a> 作用相当于asctime(localtime(secs))，未给参数相当于asctime()</td></tr><tr><td align="left">5</td><td align="left">[time.gmtime(<a href="https://www.runoob.com/python/att-time-gmtime.html">secs])</a> 接收时间戳（1970纪元后经过的浮点秒数）并返回格林威治天文时间下的时间元组t。注：t.tm_isdst始终为0</td></tr><tr><td align="left">6</td><td align="left">[time.localtime(<a href="https://www.runoob.com/python/att-time-localtime.html">secs])</a> 接收时间戳（1970纪元后经过的浮点秒数）并返回当地时间下的时间元组t（t.tm_isdst可取0或1，取决于当地当时是不是夏令时）。</td></tr><tr><td align="left">7</td><td align="left"><a href="https://www.runoob.com/python/att-time-mktime.html">time.mktime(tupletime)</a> 接受时间元组并返回时间戳（1970纪元后经过的浮点秒数）。</td></tr><tr><td align="left">8</td><td align="left"><a href="https://www.runoob.com/python/att-time-sleep.html">time.sleep(secs)</a> 推迟调用线程的运行，secs指秒数。</td></tr><tr><td align="left">9</td><td align="left">[time.strftime(fmt<a href="https://www.runoob.com/python/att-time-strftime.html">,tupletime])</a> 接收以时间元组，并返回以可读字符串表示的当地时间，格式由fmt决定。</td></tr><tr><td align="left">10</td><td align="left"><a href="https://www.runoob.com/python/att-time-strptime.html">time.strptime(str,fmt=’%a %b %d %H:%M:%S %Y’)</a> 根据fmt的格式把一个时间字符串解析为时间元组。</td></tr><tr><td align="left">11</td><td align="left"><a href="https://www.runoob.com/python/att-time-time.html">time.time( )</a> 返回当前时间的时间戳（1970纪元后经过的浮点秒数）。</td></tr><tr><td align="left">12</td><td align="left"><a href="https://www.runoob.com/python/att-time-tzset.html">time.tzset()</a> 根据环境变量TZ重新初始化时间相关设置。</td></tr></tbody></table><p>Time模块包含了以下2个非常重要的属性：</p><table><thead><tr><th align="left">序号</th><th align="left">属性及描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><strong>time.timezone</strong> 属性 time.timezone 是当地时区（未启动夏令时）距离格林威治的偏移秒数（&gt;0，美洲&lt;=0大部分欧洲，亚洲，非洲）。</td></tr><tr><td align="left">2</td><td align="left"><strong>time.tzname</strong> 属性time.tzname包含一对根据情况的不同而不同的字符串，分别是带夏令时的本地时区名称，和不带的。</td></tr></tbody></table><p>striftime格式化控制符</p><p><img src="https://i.loli.net/2021/11/15/R6fy2ecSZFj8sYX.png" alt="image-20210817211700282"></p><p>1.时间戳</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> timeimport datetimet = time.time()<span class="built_in">print</span> (t)                       <span class="comment">#原始时间数据print (int(t))                  #秒级时间戳print (int(round(t * 1000)))    #毫秒级时间戳print (int(round(t * 1000000))) #微秒级时间戳</span></span><br></pre></td></tr></table></figure><p>2.当前时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dt = datetime.datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)dt_ms = datetime.datetime.now().strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S.%f&#x27;</span>) <span class="comment"># 含微秒的日期时间，来源,比特量化print(dt)print(dt_ms)</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import timeprint(time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;,time.localtime()))</span><br></pre></td></tr></table></figure><h2 id="jieba"><a href="#jieba" class="headerlink" title="jieba"></a>jieba</h2><p>一、jieba库基本介绍</p><p> (1)、jieba库概述</p><p>​     jieba是优秀的中文分词第三方库</p><p>​     - 中文文本需要通过分词获得单个的词语<br>​     - jieba是优秀的中文分词第三方库，需要额外安装</p><p>​     - jieba库提供三种分词模式，最简单只需掌握一个函数</p><p> (2)、jieba分词的原理</p><p>​     Jieba分词依靠中文词库</p><p>​     - 利用一个中文词库，确定汉字之间的关联概率<br>​     - 汉字间概率大的组成词组，形成分词结果</p><p>​     - 除了分词，用户还可以添加自定义的词组</p><p>二、jieba库使用说明</p><p> (1)、jieba分词的三种模式</p><p>​     精确模式、全模式、搜索引擎模式</p><p>​     - 精确模式：把文本精确的切分开，不存在冗余单词<br>​     - 全模式：把文本中所有可能的词语都扫描出来，有冗余</p><p>​     - 搜索引擎模式：在精确模式基础上，对长词再次切分</p><p> (2)、jieba库常用函数</p><p><img src="https://i.loli.net/2021/11/30/bLdY5H8ZiFSUMnJ.png" alt="img"></p><h1 id="Python-不定长参数-argc-kargcs"><a href="#Python-不定长参数-argc-kargcs" class="headerlink" title="Python 不定长参数 *argc,**kargcs"></a>Python 不定长参数 *argc,**kargcs</h1><h3 id="一-函数不定长参数语法"><a href="#一-函数不定长参数语法" class="headerlink" title="一.函数不定长参数语法"></a>一.函数不定长参数语法</h3><p>*<em>函数的不定长参数包含*args和*<em>kwargs，完整实例如下：</em></em></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">function_print</span>(<span class="params">*args,**kwargs</span>):</span> <span class="comment"># 传递不定长参数，即参数个数不固定    print(args)    print(kwargs)function_print()</span></span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">()&#123;&#125;</span><br></pre></td></tr></table></figure><p>代码分析：由输出结果可以看出来，第一个形参*args 是元组tuple类型，第二个形参**kwargs是字典dict类型.</p><h4 id="1-args的使用方法"><a href="#1-args的使用方法" class="headerlink" title="1.*args的使用方法 :"></a>1.*args的使用方法 :</h4><p><strong>a.形参 *args 类型是元组tuple，外部调用函数时传递的参数不论是整数还是BOOL值或者是字符串str，实际上传递的都是元组数据;</strong></p><p><strong>b.如果函数形参是不定长参数，外部调用函数传递多个参数时，默认按顺序实参匹配形参，剩余的参数全部作为(元组)不定长参数传递；</strong></p><p><strong>c.如果没有为函数的不定长参数传递参数，默认为空元组();</strong></p><p>示例代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#普通形参def function_print1(arg):    print(&quot;普通形参 : arg=&quot;,arg)#不定长形参def function_print2(*args):    print(&quot;不定长形参 : args=&quot;,args)#普通形参 + 不定长形参def function_print3(arg,*args):    print(&quot;普通形参 + 不定长形参 : arg=&quot;,arg)    print(&quot;普通形参 + 不定长形参 : args=&quot;,args)function_print1(False)function_print1(&quot;hello world&quot;)print(&quot;***&quot;*20)function_print2(False)function_print2(&quot;hello world&quot;)print(&quot;***&quot;*20)function_print3(False) # 只为函数传递了一个形参，不定长参数的形参默认为空元组()function_print3(&quot;hello world&quot;)print(&quot;***&quot;*20)# 如果函数的形参是不定长参数，当外部调用函数传递多个参数时，默认按顺序匹配形参，剩余的参数全部作为不定长参数传递function_print3(False,1,23,4,5) function_print3(&quot;hello world&quot;,False,0,True,&quot;python教程&quot;)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">普通形参 : arg= False普通形参 : arg= hello world************************************************************不定长形参 : args= (False,)不定长形参 : args= (&#x27;hello world&#x27;,)************************************************************普通形参 + 不定长形参 : arg= False普通形参 + 不定长形参 : args= ()普通形参 + 不定长形参 : arg= hello world普通形参 + 不定长形参 : args= ()************************************************************普通形参 + 不定长形参 : arg= False普通形参 + 不定长形参 : args= (1, 23, 4, 5)普通形参 + 不定长形参 : arg= hello world普通形参 + 不定长形参 : args= (False, 0, True, &#x27;python教程&#x27;)</span><br></pre></td></tr></table></figure><h4 id="2-kwargs的使用方法"><a href="#2-kwargs的使用方法" class="headerlink" title="2.**kwargs的使用方法"></a>2.**kwargs的使用方法</h4><p>*<em>a.形参 *<em>kwargs 类型是字典dict，函数外部调用函数传递参数时需要使用关键字参数，实参写法：a=1,b=2,c=False,d=”hello”;</em></em></p><p><strong>b.如果函数形参是不定长参数，外部调用函数传递多个参数时，默认按顺序实参匹配形参，关键字参数全部作为(字典)不定长参数传递；</strong></p><p><strong>c.如果没有为函数的不定长参数传递参数，默认为空字典{};</strong></p><p>示例代码如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#普通函数def function_print1(arg):    print(&quot;普通函数形参 : arg=&quot;,arg)#普通函数不定长形参def function_print2(**kwargs):    print(&quot;不定长形参 : args=&quot;,kwargs)#普通函数形参 + 不定长形参def function_print3(arg,**kwargs):    print(&quot;普通函数形参 + 不定长形参 : arg=&quot;,arg)    print(&quot;普通函数形参 + 不定长形参 : args=&quot;,kwargs)function_print1(False)function_print1(&quot;hello world&quot;)print(&quot;***&quot;*20)function_print2(a=False)function_print2(c=&quot;hello world&quot;)print(&quot;***&quot;*20)function_print3(False)function_print3(&quot;hello world&quot;)print(&quot;***&quot;*20)function_print3(False,a=1,b=23,h=4,v=5)function_print3(&quot;hello world&quot;,y=False,i=0,a=True,j=&quot;python教程&quot;)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">普通函数形参 : arg= False普通函数形参 : arg= hello world************************************************************不定长形参 : args= &#123;&#x27;a&#x27;: False&#125;不定长形参 : args= &#123;&#x27;c&#x27;: &#x27;hello world&#x27;&#125;************************************************************普通函数形参 + 不定长形参 : arg= False普通函数形参 + 不定长形参 : args= &#123;&#125;普通函数形参 + 不定长形参 : arg= hello world普通函数形参 + 不定长形参 : args= &#123;&#125;************************************************************普通函数形参 + 不定长形参 : arg= False普通函数形参 + 不定长形参 : args= &#123;&#x27;a&#x27;: 1, &#x27;b&#x27;: 23, &#x27;h&#x27;: 4, &#x27;v&#x27;: 5&#125;普通函数形参 + 不定长形参 : arg= hello world普通函数形参 + 不定长形参 : args= &#123;&#x27;y&#x27;: False, &#x27;i&#x27;: 0, &#x27;a&#x27;: True, &#x27;j&#x27;: &#x27;python教程&#x27;&#125;</span><br></pre></td></tr></table></figure><p>*<em>3.函数不定长参数*args和*<em>kwargs只能放在形参的末尾，顺序不能错.</em></em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">def function_print(arg1,*args,**kwargs): # *args,**kwargs 必须在形参的末尾，顺序不能乱    pass</span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="二-函数不定长参数实战"><a href="#二-函数不定长参数实战" class="headerlink" title="二.函数不定长参数实战"></a>二.函数不定长参数实战</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;普通函数形参 + 不定长形参:    arg1:普通形参    arg1:普通形参    args:不定长参数-元组    kwargs:不定长参数-字典&#x27;&#x27;&#x27;</span><span class="function"><span class="keyword">def</span> <span class="title">function_print</span>(<span class="params">arg1,arg2,*args,**kwargs</span>):</span>    <span class="built_in">print</span>(arg1,arg2,args,kwargs)function_print(<span class="literal">False</span>,<span class="number">1</span>,b=<span class="number">23</span>,h=<span class="number">4</span>,v=<span class="number">5</span>)function_print(<span class="string">&quot;hello world&quot;</span>,<span class="literal">False</span>,<span class="number">0</span>,<span class="literal">True</span>,j=<span class="string">&quot;python教程&quot;</span>,a=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">False 1 () &#123;&#x27;b&#x27;: 23, &#x27;h&#x27;: 4, &#x27;v&#x27;: 5&#125;hello world False (0, True) &#123;&#x27;j&#x27;: &#x27;python教程&#x27;, &#x27;a&#x27;: True&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：注意参数的顺序匹配</strong></p><h3 id="三-重点总结"><a href="#三-重点总结" class="headerlink" title="三.重点总结"></a>三.重点总结</h3><p>注意函数传参的三种形式：</p><p>1.普通传参</p><p>2.缺省参数，如果外部没有为缺省参数传递实参，形参等于默认值</p><p>3.注意不定长参数的拆包，普通实参打包为元组tuple类型，关键字参数打包为字典dict类型</p><p>[^0-9]: </p><h1 id="图像识别-验证码"><a href="#图像识别-验证码" class="headerlink" title="图像识别(验证码)"></a>图像识别(验证码)</h1><h2 id="打码平台"><a href="#打码平台" class="headerlink" title="打码平台"></a>打码平台</h2><p>斐斐打码：<a href="http://www.fateadm.com/user_home.php">http://www.fateadm.com/user_home.php</a></p><p>​    文档：<a href="http://docs.fateadm.com/web/#/1?page_id=5">http://docs.fateadm.com/web/#/1?page_id=5</a></p><p>图鉴：<a href="http://www.ttshitu.com/">http://www.ttshitu.com/</a></p><h2 id="百度ocr"><a href="#百度ocr" class="headerlink" title="百度ocr"></a>百度ocr</h2><blockquote><p>识别效果不够好</p></blockquote><h2 id="ddddocr"><a href="#ddddocr" class="headerlink" title="ddddocr"></a>ddddocr</h2><h1 id="仿站工具"><a href="#仿站工具" class="headerlink" title="仿站工具"></a><strong>仿站工具</strong></h1><p><a href="http://fztool.ptcms.com/">http://fztool.ptcms.com/</a></p><h1 id="图床工具"><a href="#图床工具" class="headerlink" title="图床工具"></a>图床工具</h1><h2 id="SMS"><a href="#SMS" class="headerlink" title="SMS"></a>SMS</h2><p><a href="https://sm.ms/home/picture">https://sm.ms/home/picture</a></p><p>api调用(apiToken)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f3fXNIXf8g6tHsQosCCcPxXg7CxJlAi8​```python<span class="comment"># __author:Chou# data:2021/9/11import requestsdef upload_im(path):    url = &#x27;https://sm.ms/api/v2/upload&#x27;    file_obj = open(path, &#x27;rb&#x27;)    file = &#123;        &#x27;smfile&#x27;: file_obj    &#125;    data_result = requests.post(url, files=file)    # 返回json结果    res = data_result.json()    print(res)    if res[&#x27;success&#x27;]:        img_url = res[&#x27;data&#x27;][&#x27;url&#x27;]        # print(res)    elif res[&#x27;code&#x27;] == &#x27;image_repeated&#x27;:        img_url = res[&#x27;images&#x27;]        # print(img_url)    else:        print(&quot;图片加载出错了&quot;)    return img_urlupload_im(&#x27;3.png&#x27;)</span></span><br></pre></td></tr></table></figure><h2 id="Picgo"><a href="#Picgo" class="headerlink" title="Picgo"></a>Picgo</h2><p><a href="https://github.com/Molunerfinn/PicGo/releases">Releases · Molunerfinn/PicGo (github.com)</a></p><blockquote><p>搭配typora 很好用</p></blockquote><h1 id="代理ip"><a href="#代理ip" class="headerlink" title="代理ip"></a>代理ip</h1><p><a href="http://www.66ip.cn/index.html">http://www.66ip.cn/index.html</a></p><p><a href="https://seofangfa.com/proxy/">https://seofangfa.com/proxy/</a></p><p><a href="https://ip.jiangxianli.com/">https://ip.jiangxianli.com/</a></p><p><a href="http://www.xiladaili.com/gaoni/6/">http://www.xiladaili.com/gaoni/6/</a></p><p><a href="http://www.xsdaili.cn/dayProxy/ip/2459.html">http://www.xsdaili.cn/dayProxy/ip/2459.html</a></p><p><a href="http://www.dailiip.cc/freedailiip/2020/0929/966.html">http://www.dailiip.cc/freedailiip/2020/0929/966.html</a></p><p><a href="http://31f.cn/https://www.chenjiayu.cn/archives6462.html">http://31f.cn/https://www.chenjiayu.cn/archives6462.html</a></p><p><a href="https://www.89ip.cn/index.html">https://www.89ip.cn/index.html</a></p><p><a href="https://www.kuaidaili.com/free/inha/">https://www.kuaidaili.com/free/inha/</a></p><p><a href="https://www.feizhuip.com/news-getInfo-id-1122.html">https://www.feizhuip.com/news-getInfo-id-1122.html</a></p><p><a href="https://ip.ihuan.me/">https://ip.ihuan.me/</a></p><p><a href="https://www.7yip.cn/free/">https://www.7yip.cn/free/</a></p><p><a href="http://ip.yqie.com/ipproxy.htm">http://ip.yqie.com/ipproxy.htm</a></p><p><a href="http://ip.yqie.com/world.aspx">http://ip.yqie.com/world.aspx</a></p><p><a href="https://ip.jiangxianli.com/">https://ip.jiangxianli.com/</a></p><p><a href="http://www.ip3366.net/free/?stype=3">http://www.ip3366.net/free/?stype=3</a></p><p><a href="http://www.pachongdaili.com/free/freelist1.html">http://www.pachongdaili.com/free/f</a></p><h1 id="消息推送"><a href="#消息推送" class="headerlink" title="消息推送"></a>消息推送</h1><h2 id="1-sever酱"><a href="#1-sever酱" class="headerlink" title="1.sever酱"></a>1.sever酱</h2><p><a href="http://sc.ftqq.com/?c=code">http://sc.ftqq.com/?c=code</a></p><p><a href="https://sct.ftqq.com/sendkey">https://sct.ftqq.com/sendkey</a></p><p>2.</p><h1 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h1><p><a href="https://www.runoob.com/python3/python3-multithreading.html">Python3 多线程 | 菜鸟教程 (runoob.com)</a></p><p><a href="https://www.cnblogs.com/luyuze95/p/11289143.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8%E5%A4%9A%E7%BA%BF%E7%A8%8B">python多线程详解 - luyuze95 - 博客园 (cnblogs.com)</a></p><p>python主要是通过thread和threading这两个模块来实现多线程支持</p><p>python的thread模块是比较底层的模块，python的threading模块是对thread做了一些封装，可以更加方便的被使用。但是python（cpython）由于GIL的存在无法使用threading充分利用CPU资源，如果想充分发挥多核CPU的计算能力需要使用multiprocessing模块(Windows下使用会有诸多问题)</p><h1 id="处理office"><a href="#处理office" class="headerlink" title="处理office"></a>处理office</h1><p>python-docx</p><p><a href="https://python-docx.readthedocs.io/en/latest/index.html">python-docx — python-docx 0.8.11 documentation</a></p><p>docx转pdf</p><p><a href="https://www.cnblogs.com/jcjc/p/9952207.html">Python 中docx转pdf - 海纳百川_有容乃大 - 博客园 (cnblogs.com)</a></p><p>pdf内容识别</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzI2Nzg5MjgyNg==&mid=2247494327&idx=2&sn=ac28a46998e6ba590bb6268371f3d8d4&chksm=eaf54b82dd82c294e1cc3c70e1945d69f89ad8aee8e9a725e9f6980257f753ea0cf2eabfef4b&scene=178&cur_album_id=1771876183576543246#rd">告别「复制+粘贴」，Python 实现PDF转文本 (qq.com)</a></p><p>[(30条消息) <a href="https://blog.csdn.net/xc_zhou/article/details/81009809">312]python提取pdf文本内容_周小董-CSDN博客_python读取pdf内容</a></p><h1 id="centos-8-安装chorme和webdriver"><a href="#centos-8-安装chorme和webdriver" class="headerlink" title="centos 8 安装chorme和webdriver"></a>centos 8 安装chorme和webdriver</h1><p><a href="https://blog.csdn.net/zzzcl112/article/details/80470884?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;dist_request_id=1328679.63363.16164686908509475&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control">https://blog.csdn.net/zzzcl112/article/details/80470884?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control&amp;dist_request_id=1328679.63363.16164686908509475&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.control</a></p><ol><li>下载后解压 安装rpm包</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm</span><br></pre></td></tr></table></figure><p>查看chrome 版本号 显示说明安装成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">google-chrome --version</span><br></pre></td></tr></table></figure><ol start="2"><li>安装chromedriver镜像仓库地址 <a href="http://chromedriver.storage.googleapis.com/">http://chromedriver.storage.googleapis.com/</a></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://chromedriver.storage.googleapis.com/89.0.4389.23/chromedriver_linux64.zip</span><br></pre></td></tr></table></figure><ol start="3"><li>解压添加软链</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip chromedriver_linux64.zipmv chromedriver /usr/local/bin/chmod +x /usr/local/bin/chromedriver 测试代码:</span><br></pre></td></tr></table></figure><ol start="4"><li><p>添加环境变量不成功，直接换成绝对路径  /usr/local/bin/chromedriver</p></li><li><p>安装 python3 </p><p>yum install python3</p></li><li><p>安装pip</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://bootstrap.pypa.io/get-pip.pypython3 get-pip.py</span><br></pre></td></tr></table></figure><ol start="6"><li>安装selenium</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure><p>7.服务器上运行driver的核心代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path = &quot;/Aprogramming/daka/chromedriver&quot;#直接把driver放在同级目录调用options = webdriver.ChromeOptions()options.add_argument(&#x27;--headless&#x27;)options.add_argument(&#x27;--disable-gpu&#x27;)options.add_argument(&#x27;--no-sandbox&#x27;)driver = webdriver.Chrome(executable_path=path, options=options)</span><br></pre></td></tr></table></figure><p>8.打码平台</p><p>斐斐打码 <a href="http://www.fateadm.com/user_home.php">http://www.fateadm.com/user_home.php</a></p><p>图鉴   <a href="http://daredian.cn/">http://daredian.cn/</a></p><ol start="9"><li>options</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">–user-data-dir=”[PATH]” 指定用户文件夹User Data路径，可以把书签这样的用户数据保存在系统分区以外的分区。–disk-cache-dir=”[PATH]“ 指定缓存Cache路径–disk-cache-size= 指定Cache大小，单位Byte–first run 重置到初始状态，第一次运行–incognito 隐身模式启动–disable-javascript 禁用Javascript–omnibox-popup-count=”num” 将地址栏弹出的提示菜单数量改为num个。我都改为15个了。–user-agent=”xxxxxxxx” 修改HTTP请求头部的Agent字符串，可以通过about:version页面查看修改效果–disable-plugins 禁止加载所有插件，可以增加速度。可以通过about:plugins页面查看效果–disable-javascript 禁用JavaScript，如果觉得速度慢在加上这个–disable-java 禁用java–start-maximized 启动就最大化–no-sandbox 取消沙盒模式–single-process 单进程运行–process-per-tab 每个标签使用单独进程–process-per-site 每个站点使用单独进程–in-process-plugins 插件不启用单独进程–disable-popup-blocking 禁用弹出拦截–disable-plugins 禁用插件–disable-images 禁用图像–incognito 启动进入隐身模式–enable-udd-profiles 启用账户切换菜单–proxy-pac-url 使用pac代理 [via 1/2]–lang=zh-CN 设置语言为简体中文–disk-cache-dir 自定义缓存目录–disk-cache-size 自定义缓存最大值（单位byte）–media-cache-size 自定义多媒体缓存最大值（单位byte）–bookmark-menu 在工具 栏增加一个书签按钮–enable-sync 启用书签同步–single-process 单进程运行Google Chrome–start-maximized 启动Google Chrome就最大化–disable-java 禁止Java–no-sandbox 非沙盒模式运行</span><br></pre></td></tr></table></figure><h1 id="kite"><a href="#kite" class="headerlink" title="kite"></a>kite</h1><p><a href="https://www.kite.com/welcome/?id=e739a80c-bfc0-48ff-bcb9-73b2fb04a01e">Welcome to Kite - AI Autocomplete for Python</a></p><h1 id="ui设计"><a href="#ui设计" class="headerlink" title="ui设计"></a>ui<strong>设计</strong></h1><h2 id="tkinter"><a href="#tkinter" class="headerlink" title="tkinter"></a>tkinter</h2><p><a href="https://blog.csdn.net/ahilll/article/details/81531587">(28条消息) Python GUI之tkinter窗口视窗教程大集合（看这篇就够了）_ahilll的博客-CSDN博客_tkinter</a></p><p><a href="https://www.runoob.com/python/python-gui-tkinter.html">Python GUI 编程(Tkinter) | 菜鸟教程 (runoob.com)</a></p><p><a href="http://www.byhy.net/">白月黑羽 (byhy.net)</a></p><h2 id="pyqt5"><a href="#pyqt5" class="headerlink" title="pyqt5"></a>pyqt5</h2><h1 id="web开发"><a href="#web开发" class="headerlink" title="web开发"></a>web开发</h1><h2 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#运行python manage.py runserver 0.0.0.0:80#创建超级用户python manage.py createsuperuser</span><br></pre></td></tr></table></figure><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>Django 框架是用Python语言开发的， 所以安装Django 就像安装其他的 Python库一样，执行如下命令即可</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install django</span><br></pre></td></tr></table></figure><p>你可以执行如下命令检查Django是否安装好， 并且查看安装的Django版本</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; python -m django --version2<span class="number">.1</span><span class="number">.3</span></span><br></pre></td></tr></table></figure><p>如果像上面那样显示出一个版本数字（比如这里就是2.1.3） 表示已经安装好了。</p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><blockquote><p>用pycharm可以自动生成django项目</p><p><img src="https://i.loli.net/2021/11/15/FLUWx4VpGeITqhr.png" alt="image-20210902004723085"></p></blockquote><p>安装好以后， 我们需要创建我们 的 项目目录，项目目录里面保存了开发系统的所有文件。</p><p>我们可以创建 <code>d:\projects</code> 作为我们的项目所在的目录。</p><p>然后从命令行窗口中 进入到 <code>d:\projects</code> 目录，执行下面的命令创建项目目录</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject bysms</span><br></pre></td></tr></table></figure><p>注意最后的 <code>bysms</code> 就是项目的根目录名，执行上面命令后，就会创建 如下的目录结构：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bysms/    manage.py    bysms/        __init__.py        settings.py        urls.py        wsgi.py</span><br></pre></td></tr></table></figure><ul><li><p>最外层 <code>bysms/</code> 就是项目根目录 <code>d:\projects\bysms\</code> ， 项目文件都放在里面。</p></li><li><p><code>manage.py</code> 是一个工具脚本，用作项目管理的。以后我们会使用它执行管理操作。</p></li><li><p>里面的 <code>bysms/</code> 目录是python包。 里面包含项目的重要配置文件。这个目录名字不能随便改，因为manage.py 要用到它。</p></li><li><p><code>bysms/settings.py</code> 是 Django 项目的配置文件. 包含了非常重要的配置项，以后我们可能需要修改里面的配置。</p></li><li><p><code>bysms/urls.py</code> 里面存放了 一张表， 声明了前端发过来的各种http请求，分别由哪些函数处理. 这个我们后面会重点的讲。</p></li><li><p><code>bysms/wsgi.py</code><br>要了解这个文件的作用， 我们必须明白wsgi 是什么意思</p><p>python 组织制定了 web 服务网关接口（Web Server Gateway Interface） 规范 ，简称wsgi。参考文档 <a href="https://www.python.org/dev/peps/pep-3333/">https://www.python.org/dev/peps/pep-3333/</a></p><p>遵循wsgi规范的 web后端系统， 我们可以理解为 由两个部分组成</p><p><code>wsgi web server</code> 和 <code>wsgi web application</code></p><p>它们通常是运行在一个python进程中的两个模块，或者说两个子系统。</p><p><code>wsgi web server</code> 接受到前端的http请求后，会调用 <code>wsgi web application</code> 的接口（ 比如函数或者类方法）方法，由<code>wsgi web application</code> 具体处理该请求。然后再把处理结果返回给 <code>wsgi web server</code>， <code>wsgi web server</code>再返回给前端。</p><p>如下图所示</p><p><img src="http://cdn1.python3.vip/imgs/gh/36257654_38763872-474e84bc-3fd7-11e8-8e59-6968198db9b8.png" alt="白月黑羽Python3教程"></p><p>为什么要搞出两个子系统，这么麻烦呢？</p><p>因为这两个子系统有各自负责的重点。</p><p><code>wsgi web server</code> 负责 <strong>提供高效的http请求处理环境</strong>，可以使用多线程、多进程或者协程的机制。</p><p>http 请求发送到 <code>wsgi web server</code> ， <code>wsgi web server</code> 分配 线程或者进程或者 轻量级线程(协程)，然后在 这些 线程、进程、或者协程里面，去调用执行 <code>wsgi web application</code> 的入口代码。</p><p><code>wsgi web application</code> 被调用后，负责 <strong>处理 业务逻辑</strong>。 业务逻辑的处理可能非常复杂， <code>wsgi web application</code> 需要精心的设计来正确处理。</p><p>django是 <code>wsgi web application</code> 的框架，它只有一个简单的单线程 <code>wsgi web server</code>。 供调试时使用。</p><p>产品正式上线运行的时候，通常我们需要高效的 <code>wsgi web server</code> 产品，比如 gunicorn，uwsgi，cherrypy等，结合Django ，组成一个高效的 后端服务。</p><p>所以这个 <code>wsgi.py</code> 就是 提供给<code>wsgi web server</code>调用 的接口文件，里面的变量application对应对象实现了 wsgi入口，供<code>wsgi web server</code>调用 。</p></li></ul><p><strong>2021年1月补充</strong></p><p>上面的方式创建的项目，项目配置目录和项目本身目录同名。</p><p>我个人觉得比较怪异。</p><p>可以这样创建目录，结构更合理一些：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行命令创建项目目录，并且进入到项目目录mkdir bysms &amp;&amp; cd bysms# 然后执行命令 创建manage.py 和 项目配置目录 名为 configdjango-admin startproject config .</span></span><br></pre></td></tr></table></figure><h3 id="运行-Django-web服务"><a href="#运行-Django-web服务" class="headerlink" title="运行 Django web服务"></a>运行 Django web服务</h3><p>刚才我们说了， django虽然只是 <code>wsgi web application</code> 的框架，但是它也有一个简单的 <code>wsgi web server</code>。 供调试时使用。</p><p>所以也构成一个完整的后端web服务。 本地调试代码的时候，完全可以运行起来。</p><p>运行开发web 服务只需要在命令行窗口里面，</p><p>首先进入到项目根目录 ，比如，我们这里就是 <code>d:\projects\bysms\</code></p><p>然后执行如下命令</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">80</span></span><br></pre></td></tr></table></figure><p>这样服务就会被启动。 我们就可以在浏览器访问web服务了。</p><p>其中 <code>0.0.0.0:80</code> 是指定 web服务绑定的 IP 地址和端口。</p><p><code>0.0.0.0</code> 表示绑定本机所有的IP地址， 就是可以通过任何一个本机的IP (包括 环回地址 <code>127.0.0.1 </code>) 都可以访问我们的服务。</p><p><code>80</code> 表示是服务启动在80端口上。</p><p>请打开浏览器，地址栏输入 ‘127.0.0.1’ ，就可以看到如下的界面，表示Django服务搭建成功，启动成功。</p><p><img src="https://i.loli.net/2021/11/30/i8ke7MwjbBcIQqy.png" alt="白月黑羽Python3教程"></p><p>注意，启动web服务的命令行窗口不能关闭，如果关闭，web服务就停止了。</p><h1 id="nonebot"><a href="#nonebot" class="headerlink" title="nonebot"></a>nonebot</h1><p>nonebot2官方文档链接：<a href="https://v2.nonebot.dev/">https://v2.nonebot.dev/</a> </p><p>go-cqhttp地址：<a href="https://github.com/Mrs4s/go-cqhttp">https://github.com/Mrs4s/go-cqhttp</a> </p><p>go-cqhttp的api文档：<a href="https://docs.go-cqhttp.org/api/">https://docs.go-cqhttp.org/api/</a></p><p>cq:<a href="https://docs.go-cqhttp.org/cqcode/">CQcode | go-cqhttp 帮助中心</a></p><p>NoneBot.adapters 使用<a href="https://github.com/botuniverse/onebot/blob/master/v11/specs/api/public.md#send_msg-%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF">onebot/public.md at master · botuniverse/onebot (github.com)</a></p><p>requirements.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nonebot2</span><br><span class="line">interval</span><br><span class="line">schedule</span><br><span class="line">matplotlib</span><br></pre></td></tr></table></figure><blockquote><p>interval用于判断时间是否在某个区间</p><p>schedule用于设置计划任务</p><p>matplotlib用于把excel转换成图片</p></blockquote><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>使用格式：</p><p><a href="https://v2.nonebot.dev/advanced/scheduler.html">定时任务 | NoneBot</a></p><p><a href="https://blog.csdn.net/a1255652/article/details/118740313?ops_request_misc=%7B%22request_id%22:%22163117036416780271547468%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=163117036416780271547468&biz_id=0&utm_medium=distribute.wap_search_result.none-task-blog-2~all~sobaiduend~default-1-118740313.wap_first_rank_v2_rank_v29&utm_term=nonebot2+%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1&spm=1018.2118.3001.4450">(26条消息) nonebot2 插件编写指南（二）_a1255652的博客-CSDN博客</a></p><p>官方插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">服务器状态nb plugin install nonebot_plugin_status图片搜索：nb plugin install nonebot_plugin_picsearcher</span><br></pre></td></tr></table></figure><p>1.安装定时插件</p><p>先要引入一个插件：<code>nonebot_plugin_apscheduler</code><br>使用 nb-cli 脚手架来安装这个插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nb plugin install nonebot_plugin_apscheduler</span><br></pre></td></tr></table></figure><p>这个插件与其他不同，稍后会直接导入到需要的位置，无需在 bot.py 中导入<br>除此之外，还需要添加其他配置：</p><p>在<code>.env</code>中添加：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">APSCHEDULER_AUTOSTART=trueAPSCHEDULER_CONFIG=&#123;<span class="string">&quot;apscheduler.timezone&quot;</span>: <span class="string">&quot;Asia/Shanghai&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>在 bot.py 中添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nonebot.init(apscheduler_autostart=<span class="literal">True</span>)nonebot.init(apscheduler_config=&#123;    <span class="string">&quot;apscheduler.timezone&quot;</span>: <span class="string">&quot;Asia/Shanghai&quot;</span>&#125;)</span><br></pre></td></tr></table></figure><hr><p>例如，我想在每天中午 12 点发一条测试信息到群（924026546），便可以这样写：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> nonebot <span class="keyword">import</span> on_command, require, get_driverfrom nonebot.typing <span class="keyword">import</span> T_Statefrom nonebot.adapters <span class="keyword">import</span> Bot, Eventfrom nonebot.adapters.cqhttp.message <span class="keyword">import</span> Messageimport nonebot.adapters.cqhttpimport _threadscheduler = require(<span class="string">&#x27;nonebot_plugin_apscheduler&#x27;</span>).scheduler@scheduler.scheduled_job(<span class="string">&#x27;cron&#x27;</span>, hour=<span class="number">12</span>,minute=<span class="number">0</span>)<span class="keyword">async</span> <span class="function"><span class="keyword">def</span> <span class="title">demo</span>():</span>    driver = get_driver()    BOT_ID = <span class="built_in">str</span>(driver.config.bot_id)    bot = driver.bots[BOT_ID]    group_id=<span class="number">924026546</span>    <span class="keyword">await</span> bot.send_group_msg(group_id=group_id, message=<span class="string">&quot;测试消息&quot;</span>)</span><br></pre></td></tr></table></figure><p>2.和风天气</p><blockquote><p>nb plugin install nonebot_plugin_heweather</p><p>api: <a href="https://devapi.qweather.com/">https://devapi.qweather.com</a></p></blockquote><p><img src="https://i.loli.net/2021/11/15/z3Wnfus9r1N4eEq.png" alt="image-20210910192808254"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HE2109101926581795bdc4a41f9aea478cb994be3fb56ce5f4</span><br></pre></td></tr></table></figure><h1 id="excel转图片"><a href="#excel转图片" class="headerlink" title="excel转图片"></a>excel转图片</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> pltfrom pandas.plotting <span class="keyword">import</span> table<span class="string">&quot;&quot;&quot;本来想转成图片实验很久还是发不出去    # 转成图片    mpl.rcParams[&#x27;font.sans-serif&#x27;] = [&#x27;Microsoft YaHei&#x27;]  # 指定默认字体：解决plot不能显示中文问题    mpl.rcParams[&#x27;axes.unicode_minus&#x27;] = False    # figsize 指定figure的宽和高，单位为英寸；    # dpi参数指定绘图对象的分辨率，即每英寸多少个像素，缺省值为80      1英寸等于2.5cm,A4纸是 21*30cm的纸张    fig = plt.figure(figsize=(9, 10), dpi=900)    # frameon:是否显示边框    ax = fig.add_subplot(111, frame_on=False, )    # 隐藏x轴 y轴    ax.xaxis.set_visible(False)  # hide the x axis    ax.yaxis.set_visible(False)  # hide the y axis    # 读取excel    datas = pd.read_excel(&#x27;1.xlsx&#x27;)    datas = datas.iloc[:, 0:]    # print(datas)    # 生成图片    table(ax, datas, loc=&#x27;center&#x27;)  # where df is your data frame    # 保存图片    plt.savefig(&#x27;photo.jpg&#x27;)&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h1 id="实用的第三方库"><a href="#实用的第三方库" class="headerlink" title="实用的第三方库"></a>实用的第三方库</h1><h2 id="pyautogui"><a href="#pyautogui" class="headerlink" title="pyautogui"></a>pyautogui</h2><p>自动化模拟鼠标和键盘</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautoguipyautogui.PAUSE = 1pyautogui.FAILSAFE = <span class="literal">True</span></span><br></pre></td></tr></table></figure><h3 id="0-防止故障："><a href="#0-防止故障：" class="headerlink" title="0.防止故障："></a>0.防止故障：</h3><p>pyautogui.PAUSE 设置为1，即每次函数调用后<br>暂停一秒。将pyautogui.FAILSAFE 设置为True，启动自动防故障功能。</p><h3 id="1-屏幕参数"><a href="#1-屏幕参数" class="headerlink" title="1.屏幕参数"></a>1.屏幕参数</h3><p>分辨率</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautoguipyautogui.size()  <span class="comment"># 1920×1080width, height = pyautogui.size()</span></span><br></pre></td></tr></table></figure><p>获取鼠标位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautoguipyautogui.position()</span><br></pre></td></tr></table></figure><h3 id="2-移动鼠标"><a href="#2-移动鼠标" class="headerlink" title="2.移动鼠标"></a>2.移动鼠标</h3><p> <a href="1.py">1.py</a> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautogui<span class="comment"># 防止故障pyautogui.PAUSE = 1pyautogui.FAILSAFE = Truedef test1():     # pyautogui.moveTo() 函数    &quot;&quot;&quot;简单的一个例子&quot;&quot;&quot;    for i in range(5):        &#x27;&#x27;&#x27;        1. 可选的duration 整数或浮点数关键字参数，指定了将鼠标移到目的        位置所需的秒数        2. 运行这个程序鼠标在指定的位置转5圈        &#x27;&#x27;&#x27;        pyautogui.moveTo(100, 100, duration=0.25)        pyautogui.moveTo(200, 100, duration=0.25)        pyautogui.moveTo(200, 200, duration=0.25)        pyautogui.moveTo(100, 200, duration=0.25)def test2():  # pyautogui.moveRel() 函数    for i in range(5):        &#x27;&#x27;&#x27;        1.鼠标原地转圈        2.和test1()有区别        &#x27;&#x27;&#x27;        pyautogui.moveRel(100, 0, duration=0.25)        pyautogui.moveRel(0, 100, duration=0.25)        pyautogui.moveRel(-100, 0, duration=0.25)        pyautogui.moveRel(0, -100, duration=0.25)</span></span><br></pre></td></tr></table></figure><h3 id="3-控制鼠标交互"><a href="#3-控制鼠标交互" class="headerlink" title="3.控制鼠标交互"></a>3.控制鼠标交互</h3><p>①点击鼠标</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pyautoguipyautogui.click（<span class="number">100</span>，<span class="number">150</span>，button=<span class="string">&#x27;left&#x27;</span>）pyautogui.click（<span class="number">200</span>，<span class="number">250</span>，button=<span class="string">&#x27;right&#x27;</span>）pyautogui.doubleClick()  <span class="comment"># 双击左键pyautogui.rightClick()  # 双击右键 pyautogui.middleClick()  # 双击中键</span></span><br></pre></td></tr></table></figure><p>②拖动鼠标</p><p>③④</p><h2 id="you-get"><a href="#you-get" class="headerlink" title="you-get"></a>you-get</h2><p>pip install you-get</p><p>1.找到you-get.exe加入环境变量(不太成功)</p><p>2.cd 安装路径 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd C:\Users\Chou\AppData\Local\Packages\PythonSoftwareFoundation.Python<span class="number">.3</span><span class="number">.7</span>_qbz5n2kfra8p0\LocalCache\local-packages\Python37\Scripts</span><br></pre></td></tr></table></figure><h2 id="Pygame"><a href="#Pygame" class="headerlink" title="Pygame"></a>Pygame</h2><table><thead><tr><th>模块名</th><th>功能</th></tr></thead><tbody><tr><td>pygame.cdrom</td><td>访问光驱</td></tr><tr><td>pygame.cursors</td><td>加载光标</td></tr><tr><td>pygame.display</td><td>访问设备显示</td></tr><tr><td>pygame.draw</td><td>绘制形状、线和点</td></tr><tr><td>pygame.event</td><td>管理事件</td></tr><tr><td>pygame.font</td><td>使用字体</td></tr><tr><td>pygame.image</td><td>加载和存储图片</td></tr><tr><td>pygame.joystick</td><td>使用手柄或类似的东西</td></tr><tr><td>pygame.key</td><td>读取键盘按键</td></tr><tr><td>pygame.mixer</td><td>声音</td></tr><tr><td>pygame.mouse</td><td>鼠标</td></tr><tr><td>pygame.movie</td><td>播放视频</td></tr><tr><td>pygame.music</td><td>播放音频</td></tr><tr><td>pygame.overlay</td><td>访问高级视频叠加</td></tr><tr><td>pygame.rect</td><td>管理矩形区域</td></tr><tr><td>pygame.sndarray</td><td>操作声音数据</td></tr><tr><td>pygame.sprite</td><td>操作移动图像</td></tr><tr><td>pygame.surface</td><td>管理图像和屏幕</td></tr><tr><td>pygame.surfarray</td><td>管理点阵图像数据</td></tr><tr><td>pygame.time</td><td>管理时间和帧信息</td></tr><tr><td>pygame.transform</td><td>缩放和移动图像</td></tr></tbody></table><h1 id="gitee-page"><a href="#gitee-page" class="headerlink" title="gitee page"></a>gitee page</h1><h2 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1.安装git"></a>1.安装git</h2><h2 id="2-配置-Git-参数"><a href="#2-配置-Git-参数" class="headerlink" title="2.配置 Git 参数"></a>2.配置 Git 参数</h2><p>过程跟上篇文章一样，已经做过的步骤不用再重复，直接到复制公钥那一步。</p><p>在博客根目录下，右键，打开Git Bash Here。</p><p>配置用户名和邮箱，这两个参数用于 Git 提交时的身份识别。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COPY# 其中 username 和 username@XXX.com 是你注册 Gitee 的用户名和邮箱，如果账号不是邮箱注册的话，填自己的一个邮箱地址就行了git config --global user.name &quot;username&quot;git config --global user.email &quot;username@XXX.com&quot;</span><br></pre></td></tr></table></figure><p>生成 SSH keys，主要用于Git 提交时的权限控制和加密，本地根据 RSA 算法生成公私密钥对，然后将公钥添加到 Gitee 上，本机就可以提交代码到自己的 GitHub 库了。这个是根据当前使用的电脑的一些信息生成的，所以换电脑提交时要重新生成并添加。</p><p>输入下面命令，然后一直按回车，直到结束。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COPY# 其中 username@XXX.com 同上，是你的注册邮箱ssh-keygen -t rsa -C &quot;username@XXX.com&quot;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/29/5eTsFra2bWBCSXH.png" alt="image-20201229233801498"></p><p>输入下面的命令，查看公钥内容，应该是一个<code>ssh-rsa</code>开头，以<code>你的邮箱</code>结尾的长字符串。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COPY# cat后面的路径就是上图中的公钥文件路径，直接复制过来就可以。其中XXX是你的电脑用户名。cat /c/Users/XXX/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/29/ojVX1G75WNqHzul.png" alt="image-20201229234452012"></p><p>复制公钥内容（其实在Git Bash命令行里，默认选中文字松开鼠标就会自动把选中内容复制到剪贴板，点击鼠标中键是粘贴）。</p><h2 id="3-配置秘钥"><a href="#3-配置秘钥" class="headerlink" title="3.配置秘钥"></a>3.配置秘钥</h2><p>查看是否成功：ssh -T <a href="mailto:&#x67;&#x69;&#116;&#x40;&#x67;&#105;&#116;&#x65;&#101;&#46;&#x63;&#111;&#x6d;">&#x67;&#x69;&#116;&#x40;&#x67;&#105;&#116;&#x65;&#101;&#46;&#x63;&#111;&#x6d;</a></p><h2 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4.安装hexo"></a>4.安装hexo</h2><p>cmd管理员:</p><p>npm config set registry=<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a></p><p>npm install -g hexo-cli</p><p>git:</p><p>npm config set registry=<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a></p><p>npm install -g hexo-cli</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> python </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitee搭建图床</title>
      <link href="/blog/2021/11/30/gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/"/>
      <url>/blog/2021/11/30/gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<p>仅个人学习用，以下是记得笔记</p><h2 id="Gitee-图床"><a href="#Gitee-图床" class="headerlink" title="Gitee 图床"></a>Gitee 图床</h2><h4 id="1-新建仓库"><a href="#1-新建仓库" class="headerlink" title="1. 新建仓库"></a>1. 新建仓库</h4><p><img src="https://i.loli.net/2021/11/30/OTshla73fdJLM8V.png" alt="image-20210113221426230"></p><h4 id="2-获取私人令牌"><a href="#2-获取私人令牌" class="headerlink" title="2. 获取私人令牌"></a>2. 获取私人令牌</h4><p>同样的，<code>私人令牌</code>和 GitHub 上的 token 一样，主要用于让 PicGo 有权限往我们的仓库 push 代码(图片)。</p><p>点击自己的头像，选择<code>设置</code>。</p><p><img src="https://i.loli.net/2021/11/30/Jo42W8QR7ntqBUx.png" alt="image-20210113222056606"></p><p>点击<code>私人令牌</code>，选择生成新令牌。</p><p><img src="https://i.loli.net/2021/11/30/xQAGgczbonNEtHy.png" alt="image-20210113222420963"></p><p>同样的，我们只勾选更新代码的权限。填写<code>私人令牌描述</code>，点击提交。因为是敏感操作，此时需要确认密码。</p><p><img src="https://i.loli.net/2021/11/30/gW1oSLpTlOwG9yX.png" alt="image-20210113222755852"></p><p>复制字符串下一步使用。注意，为了安全起见此字符串只会出现一次，点击其他页面后就无法再查看了，需要重新创建，所以最好先保存到本地编辑器中。</p><p><img src="https://i.loli.net/2021/11/30/WIRhrTNapvi9q7B.png" alt="image-20210113223101983"></p><h4 id="3-PicGo-配置"><a href="#3-PicGo-配置" class="headerlink" title="3. PicGo 配置"></a>3. PicGo 配置</h4><p>PicGo 本体没有支持 Gitee ，所以需要下载一个插件，有人己经写好了。</p><p>打开 PicGo ，点击 <code>插件设置</code>，搜索框输入<code>gitee</code>，目前有两个插件应该都能用，任选一个安装，这里我选择的后面那个。</p><p><img src="https://i.loli.net/2021/11/30/aAXB2Z6CsVF58rP.png" alt="image-20210113225243341"></p><p>安装好插件后，这时再选择<code>图床设置</code>，选择<code>gitee</code>，填写参数：</p><ul><li><code>repo</code>，填写格式为<code>用户名/仓库名</code></li><li><code>branch</code>，填写默认分支<code>master</code></li><li><code>token</code>，填写上一步获取的私人令牌的值</li><li><code>path</code>，选填，可以自定义名称，不填图片会上传在仓库根目录。</li><li><code>customPath</code>，这个会在上一个参数的基础上再创建一层子文件夹用于按年、年月或年季来分类保存。</li><li><code>customUrl</code>，用于修改返回的 url 前缀，不填则返回原始 url。后面解决<code>文件大于1M，登录后可见</code>的问题需要更改此项。</li></ul><p>在 PicGo 里，GitHub 的设置都是中文的， Gitee 插件的设置反而都是英文的，有点意思hh。</p><p>选择设为默认图床，点击确定保存配置。</p><p><img src="https://i.loli.net/2021/11/30/DCsvg5L3XHt4WBY.png" alt="image-20210113224703801"></p><p>配置完成后，点击<code>上传区</code>，随便选择电脑上一张图片拖动到上传区，上传成功后会弹窗提示，将该 url 复制到浏览器打开就可以看到图片。可以在<code>PicGo设置</code>，打开<code>上传后自动复制URL</code>，这样上传成功后图片 url 会自动复制在剪贴板，可以直接粘贴到记事本。</p><p><img src="https://i.loli.net/2021/11/30/87bfrXnJ91xiK5O.png" alt="image-20210112235111559"></p><p><img src="https://i.loli.net/2021/11/30/NhK7sRQdYxSMjz1.png" alt="image-20210113224024050"></p><h4 id="4-Typora-配置"><a href="#4-Typora-配置" class="headerlink" title="4. Typora 配置"></a>4. Typora 配置</h4><p>打开<code>文件</code>，<code>偏好设置</code>，<code>图像</code>，选择插入图片时<code>上传图片</code>，勾选图中三个选项，上传服务设定选择<code>PicGo (app)</code>，PicGo 路径通过后面的文件夹选择自己电脑上 PicGo 的安装路径。</p><p><img src="https://i.loli.net/2021/11/30/uxjBpNogQPG8Hnv.png" alt="image-20210112233235226"></p><p>此时，使用 Typora 编辑文件，拖入或者粘贴图片时，会自动调用 PicGo 将图片上传到我们的 Gitee 图床，并把返回的图片链接粘贴到文章中，快去试试吧。</p><h4 id="5-解决”文件大于1M，登录后可见”问题"><a href="#5-解决”文件大于1M，登录后可见”问题" class="headerlink" title="5. 解决”文件大于1M，登录后可见”问题"></a>5. 解决”文件大于1M，登录后可见”问题</h4><p>从上一步可以看到 Gitee 存储的图片地址是 <code>https://gitee.com/yushuaigee/myblog/raw</code> 开头的网址，这个域名是国内站点，速度很快，无需配置CDN加速，图床配置好之后，图片上传成功，在浏览器也能打开，看似没毛病，其实暗藏玄机。</p><p>如果你上传的图片大于 1M ，不管是在下一步的 Typora 中还是在浏览器网页中，是无法加载出图片的，比如这张图片<code>https://gitee.com/yushuaigee/myblog/raw/master/img/myblog.gif</code>，输入到浏览器会显示<code>文件大于1M，登录后可见</code>。如果能打开是因为你前面已经登录了 Gitee 了，浏览器新建一个无痕窗口就打不开了。</p><p><img src="https://i.loli.net/2021/11/30/S3aAFfo9x7cMwCm.png" alt="image-20210113230821769"></p><p>可是别人在浏览我们博客时不可能要先登录个 Gitee 吧，所以要想办法解决一下。前面我们将博客仓库打开 Gitee Pages 功能，其他人可以访问我们博客仓库里的博客了，图床仓库也一样，打开它的 Gitee Pages 功能，无需登陆就可以访问里面的图片了。</p><p>进入图床仓库主页，点击<code>服务</code>，<code>Gitee Pages</code>。</p><p><img src="https://i.loli.net/2021/11/30/lsC4yzPNoQfdKFX.png" alt="image-20210113231334002"></p><p>点击<code>启动</code>部署。</p><p><img src="https://i.loli.net/2021/11/30/QnwtRhjm75OGWaS.png" alt="image-20210113232431704"></p><p>这样我们就可以通过Gitee Pages 地址来访问图床仓库里的图片了 ，地址前缀需要改一下。</p><p><strong>对应的，PicGo 中就需要改一下自定义域名</strong>，之后上传图片自动生成的链接就是 Gitee Pages 上的地址了。具体就是在<code>customUrl</code>填写<code>https://用户名.gitee.io/仓库名</code>。</p><p><img src="https://i.loli.net/2021/11/30/fzKWVhYvxbrHnqc.png" alt="image-20210113233142363"></p><p><strong>这种方法也存在一个问题</strong>，就是因为 Gitee Pages 不支持自动更新 (pro版支持，需要收费)，每次上传完图片后，需要打开浏览器手动点一下更新。你可以写完文章，把图片一把上传，再点一次更新，但是终究还是有点麻烦。</p><p><img src="https://i.loli.net/2021/11/30/eL71fXKgRqxidjI.png" alt="image-20210113231428575"></p><h4 id="网上还有一堆脚本说能更新gitee-page"><a href="#网上还有一堆脚本说能更新gitee-page" class="headerlink" title="网上还有一堆脚本说能更新gitee page"></a>网上还有一堆脚本说能更新gitee page</h4><p><a href="https://github.com/marketplace/actions/gitee-pages-action">Gitee Pages Action · Actions · GitHub Marketplace</a></p><p>但是，不好用折腾来去没成功</p><p>最后送给折腾了一下午的自己：sm.ms 不香吗？</p><p>😓5G不够换小号再来5G</p><h2 id="github图床"><a href="#github图床" class="headerlink" title="github图床"></a>github图床</h2><p>我直接不写了，没啥意义，cdn麻烦死了</p><h2 id="还有各式各样的图床"><a href="#还有各式各样的图床" class="headerlink" title="还有各式各样的图床"></a>还有各式各样的图床</h2><p>我试过的没试过得，一句话用sm.ms 算了<img src="/blog/"></p><p><img src="https://hutters.gitee.io/imgs/image-20211130202822683.png" alt="image-20211130202822683"></p><hr>]]></content>
      
      
      <categories>
          
          <category> gitee page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建gitee page真的很多坑</title>
      <link href="/blog/2021/11/29/gitee-page-%E5%AE%89%E8%A3%85hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/blog/2021/11/29/gitee-page-%E5%AE%89%E8%A3%85hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>所有操作先建一个空白文件夹名字随意</p><blockquote><p>主要记录自己安装的过程并不详细</p></blockquote><h2 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1.安装git"></a>1.安装git</h2><p>略</p><h2 id="2-配置-Git-参数"><a href="#2-配置-Git-参数" class="headerlink" title="2.配置 Git 参数"></a>2.配置 Git 参数</h2><p>过程跟上篇文章一样，已经做过的步骤不用再重复，直接到复制公钥那一步。</p><p>在博客根目录下，右键，打开Git Bash Here。</p><p>配置用户名和邮箱，这两个参数用于 Git 提交时的身份识别。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">COPY# 其中 username 和 username@XXX.com 是你注册 Gitee 的用户名和邮箱，如果账号不是邮箱注册的话，填自己的一个邮箱地址就行了</span><br><span class="line">git config --global user.name &quot;username&quot;</span><br><span class="line">git config --global user.email &quot;username@XXX.com&quot;</span><br></pre></td></tr></table></figure><p>生成 SSH keys，主要用于Git 提交时的权限控制和加密，本地根据 RSA 算法生成公私密钥对，然后将公钥添加到 Gitee 上，本机就可以提交代码到自己的 GitHub 库了。这个是根据当前使用的电脑的一些信息生成的，所以换电脑提交时要重新生成并添加。</p><p>输入下面命令，然后一直按回车，直到结束。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">COPY# 其中 username@XXX.com 同上，是你的注册邮箱</span><br><span class="line">ssh-keygen -t rsa -C &quot;username@XXX.com&quot;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/29/zCj9q8n7bhWVOci.png" alt="image-20201229233801498"></p><p>输入下面的命令，查看公钥内容，应该是一个<code>ssh-rsa</code>开头，以<code>你的邮箱</code>结尾的长字符串。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">COPY# cat后面的路径就是上图中的公钥文件路径，直接复制过来就可以。其中XXX是你的电脑用户名。</span><br><span class="line">cat /c/Users/XXX/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/29/aMlYqxtAFhZQkc9.png" alt="image-20201229234452012"></p><p>复制公钥内容（其实在Git Bash命令行里，默认选中文字松开鼠标就会自动把选中内容复制到剪贴板，点击鼠标中键是粘贴）。</p><h2 id="3-配置秘钥"><a href="#3-配置秘钥" class="headerlink" title="3.配置秘钥"></a>3.配置秘钥</h2><p><strong>一定要配置到个人主页，不是仓库</strong> </p><p><img src="https://i.loli.net/2021/11/29/lyP8bxf7hAYU4mg.png" alt="image-20211129231631074"></p><p>查看是否成功：ssh -T <a href="mailto:&#103;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#101;&#x65;&#46;&#99;&#111;&#x6d;">&#103;&#105;&#116;&#x40;&#x67;&#105;&#x74;&#101;&#x65;&#46;&#99;&#111;&#x6d;</a></p><h2 id="4-安装hexo"><a href="#4-安装hexo" class="headerlink" title="4.安装hexo"></a>4.安装hexo</h2><p>官方：<a href="https://hexo.io/zh-cn/index.html">Hexo</a></p><ol><li><del>cmd管理员:（似乎多此一举）</del></li></ol><blockquote><p><del>&lt;!– npm config set registry=<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a></del> –&gt;</p><p><del>npm install -g hexo-cli</del></p></blockquote><ol start="2"><li>进入git界面:</li></ol><blockquote><p>npm config set registry=<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a></p><p>npm install -g hexo-cli</p><p><strong>#安装发布插件</strong></p><p>npm install hexo-deployer-git </p><p>hexo init #初始化</p></blockquote><h2 id="5-配置-config-yml文件"><a href="#5-配置-config-yml文件" class="headerlink" title="5.配置_config.yml文件"></a>5.配置_config.yml文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@gitee.com:xxxxxx/xxxxxx.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h2 id="6-页面加载没有样式以及路径问题解决❗"><a href="#6-页面加载没有样式以及路径问题解决❗" class="headerlink" title="6.页面加载没有样式以及路径问题解决❗"></a>6.页面加载没有样式以及路径问题解决❗</h2><p>修改配置文件,不这样改二级目录访问css,js加载不出来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url: https://xxx.gitee.io/abc</span><br><span class="line">root: /abc/</span><br></pre></td></tr></table></figure><h2 id="7-解决图片路径问题"><a href="#7-解决图片路径问题" class="headerlink" title="7.解决图片路径问题"></a>7.解决图片路径问题</h2><p>本来用typro可以搭配picgo但是由于最近突然转成收费一气之下删了，新的方法：</p><p>插件<a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>解决了这个问题。可以只用<code>npm install hexo-renderer-marked</code>命令直接安装，之后在<code>config.yaml</code>中更改配置如下：</p><pre><code>post_asset_folder: true #上传附件比如相关的图片marked:  prependRoot: true  postAsset: true</code></pre><h2 id="8-安装主题"><a href="#8-安装主题" class="headerlink" title="8.安装主题"></a>8.安装主题</h2><p>我用的主题插件</p><p><a href="https://butterfly.js.org/">Butterfly - A Simple and Card UI Design theme for Hexo</a></p><p>npm install hexo-renderer-pug hexo-renderer-stylus –save</p><h2 id="9-几个插件"><a href="#9-几个插件" class="headerlink" title="9.几个插件"></a>9.几个插件</h2><h3 id="安装发布插件"><a href="#安装发布插件" class="headerlink" title="安装发布插件"></a><strong>安装发布插件</strong></h3><p>npm install hexo-deployer-git </p><h3 id="图片插件"><a href="#图片插件" class="headerlink" title="图片插件"></a>图片插件</h3><p>npm install hexo-image-link –save</p><p>npm install hexo-filter-inline-assets –save</p><h3 id="本地搜索插件"><a href="#本地搜索插件" class="headerlink" title="本地搜索插件"></a>本地搜索插件</h3><p>npm install –save hexo-generator-search</p><h3 id="生成tags和分类-没用懂）"><a href="#生成tags和分类-没用懂）" class="headerlink" title="生成tags和分类(没用懂）"></a>生成tags和分类(没用懂）</h3><p>npm install hexo-enhancer –save</p><p>修改配置文件：</p><p>keywords: HTML, JavaScript, Hexo<br>tags: Java, Golang, React, Vue</p><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p>参考获取api <a href="https://blog.csdn.net/blue_zy/article/details/79071414">(66条消息) 为你的Hexo加上评论系统-Valine_BlueLzy的个人博客-CSDN博客_hexo 评论</a></p><p>具体配置 <a href="https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96">Butterfly 安裝文檔(四) 主題配置-2 | Butterfly</a></p><h2 id="8-发布"><a href="#8-发布" class="headerlink" title="8.发布"></a>8.发布</h2><p>hexo g</p><p>hexo d</p><h2 id="9-安装后折腾一下布局标签之类的"><a href="#9-安装后折腾一下布局标签之类的" class="headerlink" title="9.安装后折腾一下布局标签之类的"></a>9.安装后折腾一下布局标签之类的</h2><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><ol><li><p>前往你的 Hexo 博客的根目錄</p></li><li><p>輸入hexo new page tags</p></li><li><p>你會找到source/tags/index.md這個文件</p></li><li><p>修改這個文件：</p></li></ol><p>​    記得添加 type: “tags”</p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><ol><li><p>前往你的 Hexo 博客的根目錄</p></li><li><p>輸入hexo new page categories</p></li><li><p>你會找到source/categories/index.md這個文件</p></li><li><p>修改這個文件：</p><p>記得添加 type: “categories”</p></li></ol><h3 id="小图标note"><a href="#小图标note" class="headerlink" title="小图标note"></a>小图标note</h3><p><a href="https://butterfly.js.org/posts/4aa8abbe/#Note-Bootstrap-Callout">Butterfly 安装文档（三） 主题配置-1 | Butterfly</a></p><p><img src="https://hutters.gitee.io/imgs/image-20211130211323199.png" alt="image-20211130211323199"></p><h3 id="mermaid"><a href="#mermaid" class="headerlink" title="mermaid"></a>mermaid</h3><p><a href="https://butterfly.js.org/posts/4aa8abbe/#mermaid">Butterfly 安装文档（三） 主题配置-1 | Butterfly</a></p><p><img src="https://hutters.gitee.io/imgs/image-20211130211511428.png" alt="image-20211130211511428"></p><h3 id="laber"><a href="#laber" class="headerlink" title="laber"></a>laber</h3><p><a href="https://butterfly.js.org/posts/4aa8abbe/#label">Butterfly 安装文档（三） 主题配置-1 | Butterfly</a></p><p><img src="https://hutters.gitee.io/imgs/image-20211130211745910.png" alt="image-20211130211745910"></p>]]></content>
      
      
      <categories>
          
          <category> gitee page </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gitee </tag>
            
            <tag> gitee page </tag>
            
            <tag> hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
